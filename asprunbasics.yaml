apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.76.32/32
      cni.projectcalico.org/podIPs: 172.30.76.32/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.32"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.32"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T15:19:21Z
    generateName: aspnetrunbasics-78f965b546-
    labels:
      app: aspnetrunbasics
      deploymentconfig: aspnetrunbasics
      pod-template-hash: 78f965b546
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4fb69db-1857-46cd-b15a-d9e13fc3a581"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"aspnetrunbasics"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:19:21Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T15:19:23Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T15:19:23Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.76.32"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T15:19:29Z
    name: aspnetrunbasics-78f965b546-7rgmh
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: aspnetrunbasics-78f965b546
      uid: e4fb69db-1857-46cd-b15a-d9e13fc3a581
    resourceVersion: "117723227"
    selfLink: /api/v1/namespaces/asprun/pods/aspnetrunbasics-78f965b546-7rgmh
    uid: 21e367ca-c38c-4232-857b-8ff1c5c6a2f8
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/aspnetrunbasics@sha256:78d984af13a4a32b22a4253d5300c1d1142cb98bba2d20eba315faa4d03438b2
      imagePullPolicy: Always
      name: aspnetrunbasics
      ports:
      - containerPort: 443
        protocol: TCP
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:19:22Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:19:29Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:19:29Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:19:21Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://21ce35c7e86044a178006e2ffba5a6391f68ced17ec6a37b47b0ab4ecaebd389
      image: yeskay.jfrog.io/skalavala/aspnetrunbasics@sha256:78d984af13a4a32b22a4253d5300c1d1142cb98bba2d20eba315faa4d03438b2
      imageID: yeskay.jfrog.io/skalavala/aspnetrunbasics@sha256:78d984af13a4a32b22a4253d5300c1d1142cb98bba2d20eba315faa4d03438b2
      lastState: {}
      name: aspnetrunbasics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T15:19:28Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.76.32
    podIPs:
    - ip: 172.30.76.32
    qosClass: BestEffort
    startTime: 2021-07-05T15:19:22Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.76.26/32
      cni.projectcalico.org/podIPs: 172.30.76.26/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.26"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.26"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T15:17:43Z
    generateName: asprun-gw-b7fdff4f-
    labels:
      app: asprun-gw
      deploymentconfig: asprun-gw
      pod-template-hash: b7fdff4f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4b3251c3-8efb-4f05-bce3-89df6fab8428"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"asprun-gw"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:17:43Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T15:17:46Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T15:17:46Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.76.26"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T15:17:51Z
    name: asprun-gw-b7fdff4f-fm7g8
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: asprun-gw-b7fdff4f
      uid: 4b3251c3-8efb-4f05-bce3-89df6fab8428
    resourceVersion: "117722240"
    selfLink: /api/v1/namespaces/asprun/pods/asprun-gw-b7fdff4f-fm7g8
    uid: c805a914-c9f9-43b3-990a-19dcceaa5ded
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:beb83b1226c4e6ef75b4be34b58dc1ce69abda637b35da947b71b73d78b51ba0
      imagePullPolicy: Always
      name: asprun-gw
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:17:43Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:17:51Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:17:51Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:17:43Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://415769cb85dd95f216fdf95324d87767bac78ec5f76094f023369400d6f78e37
      image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:beb83b1226c4e6ef75b4be34b58dc1ce69abda637b35da947b71b73d78b51ba0
      imageID: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:beb83b1226c4e6ef75b4be34b58dc1ce69abda637b35da947b71b73d78b51ba0
      lastState: {}
      name: asprun-gw
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T15:17:50Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.76.26
    podIPs:
    - ip: 172.30.76.26
    qosClass: BestEffort
    startTime: 2021-07-05T15:17:43Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.76.52/32
      cni.projectcalico.org/podIPs: 172.30.76.52/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.52"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.52"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-06T01:04:22Z
    generateName: asprunbasics-gw-74cc5f7ff8-
    labels:
      app: asprunbasics-gw
      deploymentconfig: asprunbasics-gw
      pod-template-hash: 74cc5f7ff8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"39a65875-0397-45d7-88aa-bb2f67f904f0"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"asprunbasics-gw"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T01:04:22Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-06T01:04:23Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-06T01:04:23Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.76.52"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-06T01:04:29Z
    name: asprunbasics-gw-74cc5f7ff8-ltttl
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: asprunbasics-gw-74cc5f7ff8
      uid: 39a65875-0397-45d7-88aa-bb2f67f904f0
    resourceVersion: "118066070"
    selfLink: /api/v1/namespaces/asprun/pods/asprunbasics-gw-74cc5f7ff8-ltttl
    uid: 93fc228d-5ddb-40e5-a540-98102793954f
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:a5ab784d2f524bfd058ec182d5d08433400f4c074b44835a8820af4f4f589364
      imagePullPolicy: Always
      name: asprunbasics-gw
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T01:04:22Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T01:04:29Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T01:04:29Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T01:04:22Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5c4f3b7a0422e94d51c7b14704ee50d410a5029086c3390ab4ede627b8d980bf
      image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:a5ab784d2f524bfd058ec182d5d08433400f4c074b44835a8820af4f4f589364
      imageID: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:a5ab784d2f524bfd058ec182d5d08433400f4c074b44835a8820af4f4f589364
      lastState: {}
      name: asprunbasics-gw
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-06T01:04:28Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.76.52
    podIPs:
    - ip: 172.30.76.52
    qosClass: BestEffort
    startTime: 2021-07-06T01:04:22Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.76.3/32
      cni.projectcalico.org/podIPs: 172.30.76.3/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.3"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.3"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-06T18:43:41Z
    generateName: basket-api-686d5459f6-
    labels:
      app: basket-api
      deploymentconfig: basket-api
      pod-template-hash: 686d5459f6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ef3d3ade-1dfb-4d0f-be27-6fb955f110bd"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"basket-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:41Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-06T18:43:43Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-06T18:43:43Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.76.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-06T18:43:48Z
    name: basket-api-686d5459f6-mk6g5
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: basket-api-686d5459f6
      uid: ef3d3ade-1dfb-4d0f-be27-6fb955f110bd
    resourceVersion: "118678321"
    selfLink: /api/v1/namespaces/asprun/pods/basket-api-686d5459f6-mk6g5
    uid: 717bd7ff-0241-465a-9fea-534b07f70529
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/basketapi@sha256:cf6bfcaec94e12a3abc668244962629734f4f7ebe85959db911d5b0fe4ccce5d
      imagePullPolicy: Always
      name: basket-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:42Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:48Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:48Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:42Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://17cd4e32f59d63ff9e1e5aa04a0ad2fa1e23a525c93ad4328a8a85bd9e6fc653
      image: yeskay.jfrog.io/skalavala/basketapi@sha256:cf6bfcaec94e12a3abc668244962629734f4f7ebe85959db911d5b0fe4ccce5d
      imageID: yeskay.jfrog.io/skalavala/basketapi@sha256:cf6bfcaec94e12a3abc668244962629734f4f7ebe85959db911d5b0fe4ccce5d
      lastState: {}
      name: basket-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-06T18:43:48Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.76.3
    podIPs:
    - ip: 172.30.76.3
    qosClass: BestEffort
    startTime: 2021-07-06T18:43:42Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.75.204/32
      cni.projectcalico.org/podIPs: 172.30.75.204/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.204"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.204"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-06T18:43:23Z
    generateName: catalog-api-57bc8c8ff7-
    labels:
      app: catalog-api
      deploymentconfig: catalog-api
      pod-template-hash: 57bc8c8ff7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0d0bc585-22be-414b-9abd-fb519fa07393"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"catalog-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:23Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-06T18:43:25Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-06T18:43:25Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.75.204"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-06T18:43:31Z
    name: catalog-api-57bc8c8ff7-xm849
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: catalog-api-57bc8c8ff7
      uid: 0d0bc585-22be-414b-9abd-fb519fa07393
    resourceVersion: "118678027"
    selfLink: /api/v1/namespaces/asprun/pods/catalog-api-57bc8c8ff7-xm849
    uid: c14e09d8-eb96-4fc8-b736-58859caba1e0
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/catalogapi@sha256:a83299383b3524d8b5f38cb853315d6c95f1d7edc61f78d88dcf50189b43378f
      imagePullPolicy: Always
      name: catalog-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:23Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:31Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:31Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:43:23Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a8e2708975bc821614ad2273342c72c64ae1f0a88cdcda6624b4ab01280f3d5c
      image: yeskay.jfrog.io/skalavala/catalogapi@sha256:a83299383b3524d8b5f38cb853315d6c95f1d7edc61f78d88dcf50189b43378f
      imageID: yeskay.jfrog.io/skalavala/catalogapi@sha256:a83299383b3524d8b5f38cb853315d6c95f1d7edc61f78d88dcf50189b43378f
      lastState: {}
      name: catalog-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-06T18:43:30Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.75.204
    podIPs:
    - ip: 172.30.75.204
    qosClass: BestEffort
    startTime: 2021-07-06T18:43:23Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.76.14/32
      cni.projectcalico.org/podIPs: 172.30.76.14/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.14"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.14"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T23:25:09Z
    generateName: discount-api-55bfcbf57d-
    labels:
      app: discount-api
      deploymentconfig: discount-api
      pod-template-hash: 55bfcbf57d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"318c2c59-e6ee-46ca-8f76-4d42650216a3"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"discount-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:25:09Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T23:25:10Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T23:25:11Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.76.14"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T23:25:16Z
    name: discount-api-55bfcbf57d-vg95w
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: discount-api-55bfcbf57d
      uid: 318c2c59-e6ee-46ca-8f76-4d42650216a3
    resourceVersion: "118008383"
    selfLink: /api/v1/namespaces/asprun/pods/discount-api-55bfcbf57d-vg95w
    uid: 505ddb3e-b950-4be0-a72c-216768d452b2
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/discountapi@sha256:4d35b856934d93a6c3a62310898c24a5849bf275a79497430a864214557e5183
      imagePullPolicy: Always
      name: discount-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:25:09Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:25:16Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:25:16Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:25:09Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a2c40e98e23a4ff43963afe29f3a3c096d2fde6640ef42e95a32d010a758d66e
      image: yeskay.jfrog.io/skalavala/discountapi@sha256:4d35b856934d93a6c3a62310898c24a5849bf275a79497430a864214557e5183
      imageID: yeskay.jfrog.io/skalavala/discountapi@sha256:4d35b856934d93a6c3a62310898c24a5849bf275a79497430a864214557e5183
      lastState: {}
      name: discount-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T23:25:16Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.76.14
    podIPs:
    - ip: 172.30.76.14
    qosClass: BestEffort
    startTime: 2021-07-05T23:25:09Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.76.17/32
      cni.projectcalico.org/podIPs: 172.30.76.17/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.17"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.17"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T23:31:01Z
    generateName: discount-grpc-685bf45dfb-
    labels:
      app: discount-grpc
      deploymentconfig: discount-grpc
      pod-template-hash: 685bf45dfb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"378abea3-a6c1-4378-8910-006a5293b841"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"discount-grpc"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8081,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:31:01Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T23:31:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T23:31:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.76.17"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T23:31:08Z
    name: discount-grpc-685bf45dfb-ppnh6
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: discount-grpc-685bf45dfb
      uid: 378abea3-a6c1-4378-8910-006a5293b841
    resourceVersion: "118011917"
    selfLink: /api/v1/namespaces/asprun/pods/discount-grpc-685bf45dfb-ppnh6
    uid: 8155156c-0757-47af-8a75-aa5044cd2a7c
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/discountgrpc@sha256:8c404b83e266f74737b9f27e22a857efe69ca15beda694153348c732d20f68ce
      imagePullPolicy: Always
      name: discount-grpc
      ports:
      - containerPort: 8081
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:31:01Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:31:08Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:31:08Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T23:31:01Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://737701214d043407fba2b428988e42b6a3653c97f26525883aa4c9ef76eeaad4
      image: yeskay.jfrog.io/skalavala/discountgrpc@sha256:8c404b83e266f74737b9f27e22a857efe69ca15beda694153348c732d20f68ce
      imageID: yeskay.jfrog.io/skalavala/discountgrpc@sha256:8c404b83e266f74737b9f27e22a857efe69ca15beda694153348c732d20f68ce
      lastState: {}
      name: discount-grpc
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T23:31:07Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.76.17
    podIPs:
    - ip: 172.30.76.17
    qosClass: BestEffort
    startTime: 2021-07-05T23:31:01Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.112.230/32
      cni.projectcalico.org/podIPs: 172.30.112.230/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.112.230"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.112.230"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: mongodb
      openshift.io/deployment.name: mongodb-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T13:37:10Z
    generateName: mongodb-1-
    labels:
      deployment: mongodb-1
      deploymentconfig: mongodb
      name: mongodb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"451d5473-b2c7-45ef-9843-fc7da4221806"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"mongodb"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"MONGODB_ADMIN_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MONGODB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MONGODB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MONGODB_USER"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":27017,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/mongodb/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"mongodb-data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T13:37:10Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-07-05T13:37:10Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T13:38:24Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T13:38:24Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.112.230"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T13:38:54Z
    name: mongodb-1-54nsh
    namespace: asprun
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: mongodb-1
      uid: 451d5473-b2c7-45ef-9843-fc7da4221806
    resourceVersion: "117667634"
    selfLink: /api/v1/namespaces/asprun/pods/mongodb-1-54nsh
    uid: dbc0f402-57cd-4291-9fe2-96c66501a0cf
  spec:
    containers:
    - env:
      - name: MONGODB_USER
        valueFrom:
          secretKeyRef:
            key: database-user
            name: mongodb
      - name: MONGODB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: database-password
            name: mongodb
      - name: MONGODB_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: database-admin-password
            name: mongodb
      - name: MONGODB_DATABASE
        valueFrom:
          secretKeyRef:
            key: database-name
            name: mongodb
      image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 27017
        timeoutSeconds: 1
      name: mongodb
      ports:
      - containerPort: 27017
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
            --eval="quit()"
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mongodb/data
        name: mongodb-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.19
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: mongodb-data
      persistentVolumeClaim:
        claimName: mongodb
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:38:00Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:38:53Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:38:53Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:38:00Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f54d100c23a9f3e008a2f5b307eba48a34ad258a24d092199d5b7113c0b130fe
      image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79
      imageID: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79
      lastState: {}
      name: mongodb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T13:38:43Z
    hostIP: 10.160.161.19
    phase: Running
    podIP: 172.30.112.230
    podIPs:
    - ip: 172.30.112.230
    qosClass: Burstable
    startTime: 2021-07-05T13:38:00Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.236"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.236"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.name: mongodb
      openshift.io/deployment.name: mongodb-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T13:37:07Z
    labels:
      openshift.io/deployer-pod-for.name: mongodb-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:labels:
            .: {}
            f:openshift.io/deployer-pod-for.name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"451d5473-b2c7-45ef-9843-fc7da4221806"}:
              .: {}
              f:apiVersion: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:activeDeadlineSeconds: {}
          f:containers:
            k:{"name":"deployment"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:terminationGracePeriodSeconds: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:37:07Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T13:37:09Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T13:38:54Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.154.236"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T13:38:54Z
    name: mongodb-1-deploy
    namespace: asprun
    ownerReferences:
    - apiVersion: v1
      kind: ReplicationController
      name: mongodb-1
      uid: 451d5473-b2c7-45ef-9843-fc7da4221806
    resourceVersion: "117667650"
    selfLink: /api/v1/namespaces/asprun/pods/mongodb-1-deploy
    uid: 687541ea-b524-45c6-bac8-3e670f0fa8a0
  spec:
    activeDeadlineSeconds: 21600
    containers:
    - env:
      - name: OPENSHIFT_DEPLOYMENT_NAME
        value: mongodb-1
      - name: OPENSHIFT_DEPLOYMENT_NAMESPACE
        value: asprun
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a09eb6065031e6cbd44ada0d916bb997d48a442fc999bb3a1549ff8e304049bb
      imagePullPolicy: IfNotPresent
      name: deployment
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: deployer-token-mh5ht
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: deployer-dockercfg-qz7bs
    nodeName: 10.160.161.18
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: deployer
    serviceAccountName: deployer
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: deployer-token-mh5ht
      secret:
        defaultMode: 420
        secretName: deployer-token-mh5ht
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:37:08Z
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:38:54Z
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:38:54Z
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:37:07Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7d980750475af7061c3b439974ea3d71df982790b9aaa1b2bea3bb978915fa3d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a09eb6065031e6cbd44ada0d916bb997d48a442fc999bb3a1549ff8e304049bb
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a09eb6065031e6cbd44ada0d916bb997d48a442fc999bb3a1549ff8e304049bb
      lastState: {}
      name: deployment
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7d980750475af7061c3b439974ea3d71df982790b9aaa1b2bea3bb978915fa3d
          exitCode: 0
          finishedAt: 2021-07-05T13:38:54Z
          reason: Completed
          startedAt: 2021-07-05T13:37:10Z
    hostIP: 10.160.161.18
    phase: Succeeded
    podIP: 172.30.154.236
    podIPs:
    - ip: 172.30.154.236
    qosClass: BestEffort
    startTime: 2021-07-05T13:37:08Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.75.246/32
      cni.projectcalico.org/podIPs: 172.30.75.246/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.246"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.246"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T13:50:51Z
    generateName: mssql-7b959d6cf6-
    labels:
      app: mssql
      pod-template-hash: 7b959d6cf6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d80ea482-2b47-4ed5-8c18-196ee33cbd1a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"mssql"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ACCEPT_EULA"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":1443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/mssql"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"mssql-persistent-storage"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T13:50:51Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T13:51:16Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T13:51:16Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.75.246"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T13:51:17Z
    name: mssql-7b959d6cf6-6hjgd
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mssql-7b959d6cf6
      uid: d80ea482-2b47-4ed5-8c18-196ee33cbd1a
    resourceVersion: "117673968"
    selfLink: /api/v1/namespaces/asprun/pods/mssql-7b959d6cf6-6hjgd
    uid: 4e6154b2-bbc3-4e59-a1c9-fc220dfb4178
  spec:
    containers:
    - env:
      - name: ACCEPT_EULA
        value: "Y"
      envFrom:
      - secretRef:
          name: mssql
      image: mcr.microsoft.com/mssql/rhel/server:2019-latest
      imagePullPolicy: IfNotPresent
      name: mssql
      ports:
      - containerPort: 1443
        name: mssql
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mssql
        name: mssql-persistent-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: mssql-persistent-storage
      persistentVolumeClaim:
        claimName: mssql-pv-volume
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:50:51Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:51:17Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:51:17Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:50:51Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://21e325aec701187855d973acc58b2944764d06becbae42f9ace74bbeef257384
      image: mcr.microsoft.com/mssql/rhel/server:2019-latest
      imageID: mcr.microsoft.com/mssql/rhel/server@sha256:7ca7717ce95f1a5846a530bc421e6ef3cab7fb463b43e6f24a27ce239dceecef
      lastState: {}
      name: mssql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T13:51:17Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.75.246
    podIPs:
    - ip: 172.30.75.246
    qosClass: BestEffort
    startTime: 2021-07-05T13:50:51Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.154.205/32
      cni.projectcalico.org/podIPs: 172.30.154.205/32
      debug.openshift.io/source-container: network-multitool
      debug.openshift.io/source-resource: '{ v1 pods}/network-multitool-558f89fc67-gqrwx'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.205"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.205"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: anyuid
    creationTimestamp: 2021-07-05T15:28:37Z
    generateName: network-multitool-558f89fc67-
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:debug.openshift.io/source-container: {}
            f:debug.openshift.io/source-resource: {}
          f:generateName: {}
        f:spec:
          f:containers:
            k:{"name":"network-multitool"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":80,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":1180,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":11443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:runAsUser: {}
              f:stdin: {}
              f:stdinOnce: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:tty: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:imagePullSecrets:
            .: {}
            k:{"name":"default-dockercfg-6tr7f"}:
              .: {}
              f:name: {}
            k:{"name":"yeskay"}:
              .: {}
              f:name: {}
          f:priority: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              .: {}
              f:level: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"default-token-sznkb"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: oc.exe
      operation: Update
      time: 2021-07-05T15:28:37Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T15:28:39Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T15:28:39Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.154.205"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T15:28:40Z
    name: network-multitool-558f89fc67-gqrwx-debug
    namespace: asprun
    resourceVersion: "117729367"
    selfLink: /api/v1/namespaces/asprun/pods/network-multitool-558f89fc67-gqrwx-debug
    uid: 10c4e65b-5850-4cde-bf16-b5de1ddc4cf9
  spec:
    containers:
    - command:
      - /bin/sh
      image: praqma/network-multitool@sha256:af0bc29d069b2fc4135fbf36edd067373e41e3e4e878b300cca29e41e621124c
      imagePullPolicy: Always
      name: network-multitool
      ports:
      - containerPort: 11443
        protocol: TCP
      - containerPort: 1180
        protocol: TCP
      - containerPort: 443
        protocol: TCP
      - containerPort: 80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      stdin: true
      stdinOnce: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      tty: true
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.18
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:28:37Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:28:40Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:28:40Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:28:37Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b958b1e720ab34a5442514d7c8dfeb6d17fd742bf8ad93448f50992526b8c347
      image: image-registry.openshift-image-registry.svc:5000/asprun/network-multitool:latest
      imageID: docker.io/praqma/network-multitool@sha256:af0bc29d069b2fc4135fbf36edd067373e41e3e4e878b300cca29e41e621124c
      lastState: {}
      name: network-multitool
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T15:28:40Z
    hostIP: 10.160.161.18
    phase: Running
    podIP: 172.30.154.205
    podIPs:
    - ip: 172.30.154.205
    qosClass: BestEffort
    startTime: 2021-07-05T15:28:37Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.155.8/32
      cni.projectcalico.org/podIPs: 172.30.155.8/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.155.8"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.155.8"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-06T18:59:57Z
    generateName: ordering-api-5c5c985b67-
    labels:
      app: ordering-api
      deploymentconfig: ordering-api
      pod-template-hash: 5c5c985b67
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2f382bad-f3c7-4bb9-b460-ec26bba67b29"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"ordering-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:59:57Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-06T18:59:59Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-06T18:59:59Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.155.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-06T19:00:02Z
    name: ordering-api-5c5c985b67-prt6q
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ordering-api-5c5c985b67
      uid: 2f382bad-f3c7-4bb9-b460-ec26bba67b29
    resourceVersion: "118687876"
    selfLink: /api/v1/namespaces/asprun/pods/ordering-api-5c5c985b67-prt6q
    uid: 300bcec7-798d-4667-8477-9fd09e8de53f
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/orderingapi@sha256:5345b469c8efb9e855946438bbe53ae7c7c954b438e5a88d8a4cd92362083ae1
      imagePullPolicy: Always
      name: ordering-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.18
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:59:58Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T19:00:02Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T19:00:02Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T18:59:57Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://932c947340b606058a6ebf778c80784417d371d849e63426c98c453e31579301
      image: image-registry.openshift-image-registry.svc:5000/asprun/ordering-api:latest
      imageID: image-registry.openshift-image-registry.svc:5000/asprun/ordering-api@sha256:5345b469c8efb9e855946438bbe53ae7c7c954b438e5a88d8a4cd92362083ae1
      lastState: {}
      name: ordering-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-06T19:00:01Z
    hostIP: 10.160.161.18
    phase: Running
    podIP: 172.30.155.8
    podIPs:
    - ip: 172.30.155.8
    qosClass: BestEffort
    startTime: 2021-07-06T18:59:58Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.112.230"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.112.230"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T13:36:03Z
    labels:
      openshift.io/deployer-pod-for.name: postgresql-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:labels:
            .: {}
            f:openshift.io/deployer-pod-for.name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9763647d-fa82-465b-89f5-d62740cf05cd"}:
              .: {}
              f:apiVersion: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:activeDeadlineSeconds: {}
          f:containers:
            k:{"name":"deployment"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:terminationGracePeriodSeconds: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:36:03Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T13:36:05Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T13:37:36Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.112.230"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T13:37:36Z
    name: postgresql-1-deploy
    namespace: asprun
    ownerReferences:
    - apiVersion: v1
      kind: ReplicationController
      name: postgresql-1
      uid: 9763647d-fa82-465b-89f5-d62740cf05cd
    resourceVersion: "117666934"
    selfLink: /api/v1/namespaces/asprun/pods/postgresql-1-deploy
    uid: 7322d6b4-805f-49e1-9243-aeca4f95bbfd
  spec:
    activeDeadlineSeconds: 21600
    containers:
    - env:
      - name: OPENSHIFT_DEPLOYMENT_NAME
        value: postgresql-1
      - name: OPENSHIFT_DEPLOYMENT_NAMESPACE
        value: asprun
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a09eb6065031e6cbd44ada0d916bb997d48a442fc999bb3a1549ff8e304049bb
      imagePullPolicy: IfNotPresent
      name: deployment
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: deployer-token-mh5ht
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: deployer-dockercfg-qz7bs
    nodeName: 10.160.161.19
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: deployer
    serviceAccountName: deployer
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: deployer-token-mh5ht
      secret:
        defaultMode: 420
        secretName: deployer-token-mh5ht
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:36:03Z
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:37:36Z
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:37:36Z
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:36:03Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://74a2ec8cad1c5085d417dc3ffcefd578616c173c9dd2c80a77152da3b56426a7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a09eb6065031e6cbd44ada0d916bb997d48a442fc999bb3a1549ff8e304049bb
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a09eb6065031e6cbd44ada0d916bb997d48a442fc999bb3a1549ff8e304049bb
      lastState: {}
      name: deployment
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://74a2ec8cad1c5085d417dc3ffcefd578616c173c9dd2c80a77152da3b56426a7
          exitCode: 0
          finishedAt: 2021-07-05T13:37:35Z
          reason: Completed
          startedAt: 2021-07-05T13:36:05Z
    hostIP: 10.160.161.19
    phase: Succeeded
    podIP: 172.30.112.230
    podIPs:
    - ip: 172.30.112.230
    qosClass: BestEffort
    startTime: 2021-07-05T13:36:03Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.75.247/32
      cni.projectcalico.org/podIPs: 172.30.75.247/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.247"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.247"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T13:36:06Z
    generateName: postgresql-1-
    labels:
      deployment: postgresql-1
      deploymentconfig: postgresql
      name: postgresql
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9763647d-fa82-465b-89f5-d62740cf05cd"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"postgresql"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"POSTGRESQL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"POSTGRESQL_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"POSTGRESQL_USER"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5432,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/pgsql/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"postgresql-data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T13:36:06Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-07-05T13:36:06Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T13:37:19Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T13:37:19Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.75.247"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T13:37:35Z
    name: postgresql-1-hh69s
    namespace: asprun
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-1
      uid: 9763647d-fa82-465b-89f5-d62740cf05cd
    resourceVersion: "117666920"
    selfLink: /api/v1/namespaces/asprun/pods/postgresql-1-hh69s
    uid: 96439634-02a3-423c-901c-7d087c4e0b84
  spec:
    containers:
    - env:
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: database-user
            name: postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: database-password
            name: postgresql
      - name: POSTGRESQL_DATABASE
        valueFrom:
          secretKeyRef:
            key: database-name
            name: postgresql
      image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /usr/libexec/check-container
          - --live
        failureThreshold: 3
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /usr/libexec/check-container
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:36:56Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:37:35Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:37:35Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T13:36:56Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a1221b86325daf2ae1c7c866f2cdac54a3e04fcc82c19b6d300f5278b7fcceaa
      image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647
      imageID: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647
      lastState: {}
      name: postgresql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T13:37:20Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.75.247
    podIPs:
    - ip: 172.30.75.247
    qosClass: Burstable
    startTime: 2021-07-05T13:36:56Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.112.251/32
      cni.projectcalico.org/podIPs: 172.30.112.251/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.112.251"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.112.251"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-06T13:06:12Z
    generateName: rabbitmq-b7bb787cd-
    labels:
      app: rabbitmq
      pod-template-hash: b7bb787cd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5b84e050-fb39-454e-9dec-ed6cb90031ef"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"rabbitmq"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5672,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":15672,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T13:06:12Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-06T13:06:14Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-06T13:06:14Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.112.251"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-06T13:06:32Z
    name: rabbitmq-b7bb787cd-dn6xz
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rabbitmq-b7bb787cd
      uid: 5b84e050-fb39-454e-9dec-ed6cb90031ef
    resourceVersion: "118484217"
    selfLink: /api/v1/namespaces/asprun/pods/rabbitmq-b7bb787cd-dn6xz
    uid: 9520170a-0db9-4acb-95c6-1aabd52dc8c7
  spec:
    containers:
    - image: rabbitmq:3-management
      imagePullPolicy: IfNotPresent
      name: rabbitmq
      ports:
      - containerPort: 5672
        name: http
        protocol: TCP
      - containerPort: 15672
        name: mgmt-http
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.19
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T13:06:12Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T13:06:32Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T13:06:32Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-06T13:06:12Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://060d0f712291c285c8290a2216a9106b6f192e00a74065b9edf6b2914faa7452
      image: docker.io/library/rabbitmq:3-management
      imageID: docker.io/library/rabbitmq@sha256:5d5aae91ed7b6229d63c18031d8c850de7cdff75d9ac43f4dc0f6e2330a069c4
      lastState: {}
      name: rabbitmq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-06T13:06:31Z
    hostIP: 10.160.161.19
    phase: Running
    podIP: 172.30.112.251
    podIPs:
    - ip: 172.30.112.251
    qosClass: BestEffort
    startTime: 2021-07-06T13:06:12Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      alm-examples: '[{"apiVersion":"redis.redis.opstreelabs.in/v1beta1","kind":"Redis","metadata":{"name":"redis"},"spec":{"mode":"cluster","size":3,"global":{"image":"quay.io/opstree/redis:v6.2","imagePullPolicy":"IfNotPresent","password":"Opstree@1234","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"master":{"service":{"type":"ClusterIP"},"redisConfig":{}},"slave":{"service":{"type":"ClusterIP"},"redisConfig":{}},"service":{"type":"ClusterIP"},"redisConfig":{},"redisExporter":{"enabled":true,"image":"quay.io/opstree/redis-exporter:1.0","imagePullPolicy":"Always","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"buildpiper-storage","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}}}}]'
      capabilities: Seamless Upgrades
      categories: Database, Storage
      certified: "false"
      cni.projectcalico.org/podIP: 172.30.154.242/32
      cni.projectcalico.org/podIPs: 172.30.154.242/32
      containerImage: quay.io/opstree/redis-operator:v0.5.0
      createdAt: 03-05-2021
      description: A Golang based redis operator that will make/oversee Redis standalone/cluster
        mode setup on top of the Kubernetes.
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.242"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.242"
            ],
            "default": true,
            "dns": {}
        }]
      olm.operatorGroup: asprun-pkj8k
      olm.operatorNamespace: asprun
      olm.targetNamespaces: asprun
      openshift.io/scc: anyuid
      repository: https://github.com/ot-container-kit/redis-operator
      support: ""
    creationTimestamp: 2021-07-05T14:30:58Z
    generateName: redis-operator-5f8c98984d-
    labels:
      control-plane: redis-operator
      pod-template-hash: 5f8c98984d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alm-examples: {}
            f:capabilities: {}
            f:categories: {}
            f:certified: {}
            f:containerImage: {}
            f:createdAt: {}
            f:description: {}
            f:olm.operatorGroup: {}
            f:olm.operatorNamespace: {}
            f:olm.targetNamespaces: {}
            f:repository: {}
            f:support: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:control-plane: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fac05203-5ecd-41e5-b73f-00f9d7cd0a41"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"manager"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:30:58Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T14:30:59Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T14:30:59Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.154.242"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T14:31:14Z
    name: redis-operator-5f8c98984d-hpkgd
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-operator-5f8c98984d
      uid: fac05203-5ecd-41e5-b73f-00f9d7cd0a41
    resourceVersion: "117694374"
    selfLink: /api/v1/namespaces/asprun/pods/redis-operator-5f8c98984d-hpkgd
    uid: 7ef0f32c-32d3-4166-8deb-046b3745c7f7
  spec:
    containers:
    - args:
      - --leader-elect
      command:
      - /manager
      image: quay.io/opstree/redis-operator:v0.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - MKNOD
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: redis-operator-token-8hnsc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: redis-operator-dockercfg-mfjgd
    nodeName: 10.160.161.18
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 65532
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: redis-operator
    serviceAccountName: redis-operator
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: redis-operator-token-8hnsc
      secret:
        defaultMode: 420
        secretName: redis-operator-token-8hnsc
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:30:58Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:31:14Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:31:14Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:30:58Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://18b36ba22bc87c92fcebdffd980e7665e3eae4c43f713396fe755aa57f040c4e
      image: quay.io/opstree/redis-operator:v0.5.0
      imageID: quay.io/opstree/redis-operator@sha256:7370767377306e4cec120a9a8dcfafa393543e8ba838d641c879817eb19edcb0
      lastState: {}
      name: manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:31:06Z
    hostIP: 10.160.161.18
    phase: Running
    podIP: 172.30.154.242
    podIPs:
    - ip: 172.30.154.242
    qosClass: BestEffort
    startTime: 2021-07-05T14:30:58Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.154.252/32
      cni.projectcalico.org/podIPs: 172.30.154.252/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.252"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.252"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T14:45:33Z
    generateName: redis-server-master-
    labels:
      app: redis-server-master
      controller-revision-hash: redis-server-master-5f845dcc4f
      role: master
      statefulset.kubernetes.io/pod-name: redis-server-master-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:role: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5adfd8fd-e227-4bec-a6e2-5c8484022d50"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"redis-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"REDIS_ADDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"redis-server-master"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"PERSISTENCE_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"SERVER_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SETUP_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"redis-server-master"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:45:33Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T14:45:50Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T14:45:50Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.154.252"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T14:46:11Z
    name: redis-server-master-0
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: redis-server-master
      uid: 5adfd8fd-e227-4bec-a6e2-5c8484022d50
    resourceVersion: "117703534"
    selfLink: /api/v1/namespaces/asprun/pods/redis-server-master-0
    uid: 0c1c1280-fcd8-4ae0-976a-eb247f1a1627
  spec:
    containers:
    - env:
      - name: SERVER_MODE
        value: master
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: SETUP_MODE
        value: cluster
      - name: PERSISTENCE_ENABLED
        value: "true"
      image: quay.io/opstree/redis:v6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis-server-master
      readinessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 5
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-server-master
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    - env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: REDIS_ADDR
        value: redis://localhost:6379
      image: quay.io/opstree/redis-exporter:1.0
      imagePullPolicy: Always
      name: redis-exporter
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: redis-server-master-0
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.18
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    subdomain: redis-server-master
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: redis-server-master
      persistentVolumeClaim:
        claimName: redis-server-master-redis-server-master-0
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:45:33Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:46:11Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:46:11Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:45:33Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f842898c79bb216ba4242475fcbd3f03122dfb9bc08da7c9a2c81abd08a1f2a4
      image: quay.io/opstree/redis-exporter:1.0
      imageID: quay.io/opstree/redis-exporter@sha256:d52aebf0ff162b5b953dfe7dfcb8a319748654fd7325007d93d2884e027edd2d
      lastState: {}
      name: redis-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:45:53Z
    - containerID: cri-o://8658ea47ae99002fabf755d0aecb5ab7bdd4a9144b6cd3c2236d19276c3b34b1
      image: quay.io/opstree/redis:v6.2
      imageID: quay.io/opstree/redis@sha256:bf825107a850e653ff21599d0b6382bf9a3370b50c42d763a5eae65b7afe928f
      lastState: {}
      name: redis-server-master
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:45:51Z
    hostIP: 10.160.161.18
    phase: Running
    podIP: 172.30.154.252
    podIPs:
    - ip: 172.30.154.252
    qosClass: Guaranteed
    startTime: 2021-07-05T14:45:33Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.75.238/32
      cni.projectcalico.org/podIPs: 172.30.75.238/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.238"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.238"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T14:47:33Z
    generateName: redis-server-master-
    labels:
      app: redis-server-master
      controller-revision-hash: redis-server-master-5f845dcc4f
      role: master
      statefulset.kubernetes.io/pod-name: redis-server-master-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:role: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5adfd8fd-e227-4bec-a6e2-5c8484022d50"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"redis-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"REDIS_ADDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"redis-server-master"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"PERSISTENCE_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"SERVER_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SETUP_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"redis-server-master"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:47:33Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-07-05T14:51:05Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T14:52:19Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T14:52:20Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.75.238"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T14:52:52Z
    name: redis-server-master-1
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: redis-server-master
      uid: 5adfd8fd-e227-4bec-a6e2-5c8484022d50
    resourceVersion: "117707538"
    selfLink: /api/v1/namespaces/asprun/pods/redis-server-master-1
    uid: 7992ba74-383c-4f44-8af4-237e746c8bec
  spec:
    containers:
    - env:
      - name: SERVER_MODE
        value: master
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: SETUP_MODE
        value: cluster
      - name: PERSISTENCE_ENABLED
        value: "true"
      image: quay.io/opstree/redis:v6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis-server-master
      readinessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 5
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-server-master
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    - env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: REDIS_ADDR
        value: redis://localhost:6379
      image: quay.io/opstree/redis-exporter:1.0
      imagePullPolicy: Always
      name: redis-exporter
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: redis-server-master-1
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    subdomain: redis-server-master
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: redis-server-master
      persistentVolumeClaim:
        claimName: redis-server-master-redis-server-master-1
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:51:54Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:52:52Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:52:52Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:51:54Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3070e07bd65b1641722c1d7e8b48723058935a9b0f4be40fd9d4dfca3c55dc78
      image: quay.io/opstree/redis-exporter:1.0
      imageID: quay.io/opstree/redis-exporter@sha256:d52aebf0ff162b5b953dfe7dfcb8a319748654fd7325007d93d2884e027edd2d
      lastState: {}
      name: redis-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:52:39Z
    - containerID: cri-o://ebd7798e579d227223db4eec30a23c4e57067441d792c164b3f13dd6b7e56994
      image: quay.io/opstree/redis:v6.2
      imageID: quay.io/opstree/redis@sha256:bf825107a850e653ff21599d0b6382bf9a3370b50c42d763a5eae65b7afe928f
      lastState: {}
      name: redis-server-master
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:52:34Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.75.238
    podIPs:
    - ip: 172.30.75.238
    qosClass: Guaranteed
    startTime: 2021-07-05T14:51:54Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.113.43/32
      cni.projectcalico.org/podIPs: 172.30.113.43/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.113.43"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.113.43"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T14:52:52Z
    generateName: redis-server-master-
    labels:
      app: redis-server-master
      controller-revision-hash: redis-server-master-5f845dcc4f
      role: master
      statefulset.kubernetes.io/pod-name: redis-server-master-2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:role: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5adfd8fd-e227-4bec-a6e2-5c8484022d50"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"redis-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"REDIS_ADDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"redis-server-master"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"PERSISTENCE_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"SERVER_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SETUP_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"redis-server-master"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:52:52Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-07-05T14:53:27Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T14:54:43Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T14:54:43Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.113.43"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T14:55:27Z
    name: redis-server-master-2
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: redis-server-master
      uid: 5adfd8fd-e227-4bec-a6e2-5c8484022d50
    resourceVersion: "117709164"
    selfLink: /api/v1/namespaces/asprun/pods/redis-server-master-2
    uid: c656c22a-92ac-4dd1-a3cb-362df43b4adb
  spec:
    containers:
    - env:
      - name: SERVER_MODE
        value: master
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: SETUP_MODE
        value: cluster
      - name: PERSISTENCE_ENABLED
        value: "true"
      image: quay.io/opstree/redis:v6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis-server-master
      readinessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 5
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-server-master
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    - env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: REDIS_ADDR
        value: redis://localhost:6379
      image: quay.io/opstree/redis-exporter:1.0
      imagePullPolicy: Always
      name: redis-exporter
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: redis-server-master-2
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.19
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    subdomain: redis-server-master
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: redis-server-master
      persistentVolumeClaim:
        claimName: redis-server-master-redis-server-master-2
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:54:19Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:55:27Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:55:27Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:54:18Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d022de522cae3864f571c4ef7961bcecfd46d75cdfc41c9905ee114e0feb31b9
      image: quay.io/opstree/redis-exporter:1.0
      imageID: quay.io/opstree/redis-exporter@sha256:d52aebf0ff162b5b953dfe7dfcb8a319748654fd7325007d93d2884e027edd2d
      lastState: {}
      name: redis-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:55:04Z
    - containerID: cri-o://0cd16ac217d2e72adca393d65164b9957d91e53e89c6e70cc2fd90c2a9e2e078
      image: quay.io/opstree/redis:v6.2
      imageID: quay.io/opstree/redis@sha256:bf825107a850e653ff21599d0b6382bf9a3370b50c42d763a5eae65b7afe928f
      lastState: {}
      name: redis-server-master
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:54:58Z
    hostIP: 10.160.161.19
    phase: Running
    podIP: 172.30.113.43
    podIPs:
    - ip: 172.30.113.43
    qosClass: Guaranteed
    startTime: 2021-07-05T14:54:19Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.154.236/32
      cni.projectcalico.org/podIPs: 172.30.154.236/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.236"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.154.236"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T14:45:33Z
    generateName: redis-server-slave-
    labels:
      app: redis-server-slave
      controller-revision-hash: redis-server-slave-59d7f785c8
      role: slave
      statefulset.kubernetes.io/pod-name: redis-server-slave-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:role: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"25b8bd24-c373-42ab-bd66-108a019856fe"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"redis-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"REDIS_ADDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"redis-server-slave"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"PERSISTENCE_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"SERVER_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SETUP_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"redis-server-slave"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:45:33Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T14:46:05Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T14:46:05Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.154.236"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T14:46:27Z
    name: redis-server-slave-0
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: redis-server-slave
      uid: 25b8bd24-c373-42ab-bd66-108a019856fe
    resourceVersion: "117703667"
    selfLink: /api/v1/namespaces/asprun/pods/redis-server-slave-0
    uid: 37421281-2b70-4e8a-9358-2c728b9cd666
  spec:
    containers:
    - env:
      - name: SERVER_MODE
        value: slave
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: SETUP_MODE
        value: cluster
      - name: PERSISTENCE_ENABLED
        value: "true"
      image: quay.io/opstree/redis:v6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis-server-slave
      readinessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 5
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-server-slave
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    - env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: REDIS_ADDR
        value: redis://localhost:6379
      image: quay.io/opstree/redis-exporter:1.0
      imagePullPolicy: Always
      name: redis-exporter
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: redis-server-slave-0
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.18
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    subdomain: redis-server-slave
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: redis-server-slave
      persistentVolumeClaim:
        claimName: redis-server-slave-redis-server-slave-0
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:45:34Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:46:27Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:46:27Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:45:33Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ddc68abf49e46e7cd651ace58a9c21b41971fc5642ce5a1f37e8be12a444fe9f
      image: quay.io/opstree/redis-exporter:1.0
      imageID: quay.io/opstree/redis-exporter@sha256:d52aebf0ff162b5b953dfe7dfcb8a319748654fd7325007d93d2884e027edd2d
      lastState: {}
      name: redis-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:46:08Z
    - containerID: cri-o://4694cc0a45e65eb1a1937c15164ee49622d0afd714b7eaf450e847f5704485cf
      image: quay.io/opstree/redis:v6.2
      imageID: quay.io/opstree/redis@sha256:bf825107a850e653ff21599d0b6382bf9a3370b50c42d763a5eae65b7afe928f
      lastState: {}
      name: redis-server-slave
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:46:06Z
    hostIP: 10.160.161.18
    phase: Running
    podIP: 172.30.154.236
    podIPs:
    - ip: 172.30.154.236
    qosClass: Guaranteed
    startTime: 2021-07-05T14:45:34Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.75.220/32
      cni.projectcalico.org/podIPs: 172.30.75.220/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.220"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.220"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T14:47:39Z
    generateName: redis-server-slave-
    labels:
      app: redis-server-slave
      controller-revision-hash: redis-server-slave-59d7f785c8
      role: slave
      statefulset.kubernetes.io/pod-name: redis-server-slave-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:role: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"25b8bd24-c373-42ab-bd66-108a019856fe"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"redis-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"REDIS_ADDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"redis-server-slave"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"PERSISTENCE_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"SERVER_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SETUP_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"redis-server-slave"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:47:39Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-07-05T14:51:24Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T14:52:40Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T14:52:40Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.75.220"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T14:53:02Z
    name: redis-server-slave-1
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: redis-server-slave
      uid: 25b8bd24-c373-42ab-bd66-108a019856fe
    resourceVersion: "117707635"
    selfLink: /api/v1/namespaces/asprun/pods/redis-server-slave-1
    uid: 3e0173c0-35b2-466b-8cac-1a7ff539a40f
  spec:
    containers:
    - env:
      - name: SERVER_MODE
        value: slave
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: SETUP_MODE
        value: cluster
      - name: PERSISTENCE_ENABLED
        value: "true"
      image: quay.io/opstree/redis:v6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis-server-slave
      readinessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 5
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-server-slave
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    - env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: REDIS_ADDR
        value: redis://localhost:6379
      image: quay.io/opstree/redis-exporter:1.0
      imagePullPolicy: Always
      name: redis-exporter
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: redis-server-slave-1
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    subdomain: redis-server-slave
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: redis-server-slave
      persistentVolumeClaim:
        claimName: redis-server-slave-redis-server-slave-1
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:52:17Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:53:02Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:53:02Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:52:16Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://607fb6e4beb9b4c63fef8a5ee8dd212540690ca79bb37e84a9d0fbd7ce9dee24
      image: quay.io/opstree/redis-exporter:1.0
      imageID: quay.io/opstree/redis-exporter@sha256:d52aebf0ff162b5b953dfe7dfcb8a319748654fd7325007d93d2884e027edd2d
      lastState: {}
      name: redis-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:52:43Z
    - containerID: cri-o://77bf7e88bee65caae1d9ee054c3bdb2737c53883c1a24597b24a2730e9c664b1
      image: quay.io/opstree/redis:v6.2
      imageID: quay.io/opstree/redis@sha256:bf825107a850e653ff21599d0b6382bf9a3370b50c42d763a5eae65b7afe928f
      lastState: {}
      name: redis-server-slave
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:52:41Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.75.220
    podIPs:
    - ip: 172.30.75.220
    qosClass: Guaranteed
    startTime: 2021-07-05T14:52:17Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.113.51/32
      cni.projectcalico.org/podIPs: 172.30.113.51/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.113.51"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.113.51"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T14:53:02Z
    generateName: redis-server-slave-
    labels:
      app: redis-server-slave
      controller-revision-hash: redis-server-slave-59d7f785c8
      role: slave
      statefulset.kubernetes.io/pod-name: redis-server-slave-2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:role: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"25b8bd24-c373-42ab-bd66-108a019856fe"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"redis-exporter"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"REDIS_ADDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"redis-server-slave"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"PERSISTENCE_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"SERVER_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SETUP_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"redis-server-slave"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:53:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-07-05T14:53:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T14:54:58Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T14:54:58Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.113.51"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T14:55:21Z
    name: redis-server-slave-2
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: redis-server-slave
      uid: 25b8bd24-c373-42ab-bd66-108a019856fe
    resourceVersion: "117709107"
    selfLink: /api/v1/namespaces/asprun/pods/redis-server-slave-2
    uid: 5488b69a-eac7-4117-a719-19e87dd3de92
  spec:
    containers:
    - env:
      - name: SERVER_MODE
        value: slave
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: SETUP_MODE
        value: cluster
      - name: PERSISTENCE_ENABLED
        value: "true"
      image: quay.io/opstree/redis:v6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: redis-server-slave
      readinessProbe:
        exec:
          command:
          - bash
          - /usr/bin/healthcheck.sh
        failureThreshold: 5
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-server-slave
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    - env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: redis-server
      - name: REDIS_ADDR
        value: redis://localhost:6379
      image: quay.io/opstree/redis-exporter:1.0
      imagePullPolicy: Always
      name: redis-exporter
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: redis-server-slave-2
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.161.19
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    subdomain: redis-server-slave
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: redis-server-slave
      persistentVolumeClaim:
        claimName: redis-server-slave-redis-server-slave-2
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:54:30Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:55:21Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:55:21Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T14:54:29Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://39c71cbda06f457c99d49865581411c437aaeab37d2c228d8a44832146e9bea5
      image: quay.io/opstree/redis-exporter:1.0
      imageID: quay.io/opstree/redis-exporter@sha256:d52aebf0ff162b5b953dfe7dfcb8a319748654fd7325007d93d2884e027edd2d
      lastState: {}
      name: redis-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:55:05Z
    - containerID: cri-o://65053218a3de595716eac467458d6c28ec7d56628c577a5ebf15ac7f987c16b7
      image: quay.io/opstree/redis:v6.2
      imageID: quay.io/opstree/redis@sha256:bf825107a850e653ff21599d0b6382bf9a3370b50c42d763a5eae65b7afe928f
      lastState: {}
      name: redis-server-slave
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T14:55:00Z
    hostIP: 10.160.161.19
    phase: Running
    podIP: 172.30.113.51
    podIPs:
    - ip: 172.30.113.51
    qosClass: Guaranteed
    startTime: 2021-07-05T14:54:30Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.76.41/32
      cni.projectcalico.org/podIPs: 172.30.76.41/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.41"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.76.41"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T15:21:05Z
    generateName: shopping-aggregator-674c796668-
    labels:
      app: shopping-aggregator
      deploymentconfig: shopping-aggregator
      pod-template-hash: 674c796668
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"467bd582-db93-47ce-b3d6-28d9673ee772"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"shopping-aggregator"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:21:05Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T15:21:06Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T15:21:06Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.76.41"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T15:21:12Z
    name: shopping-aggregator-674c796668-vlmkv
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: shopping-aggregator-674c796668
      uid: 467bd582-db93-47ce-b3d6-28d9673ee772
    resourceVersion: "117724440"
    selfLink: /api/v1/namespaces/asprun/pods/shopping-aggregator-674c796668-vlmkv
    uid: 9188fd60-229d-4a0e-bb1f-285c93616872
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/shoppingaggregator@sha256:0587fe7a727dff04d9d9f144535d79368f741cd96fc5372947ad39a5d070375f
      imagePullPolicy: Always
      name: shopping-aggregator
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:21:05Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:21:12Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:21:12Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:21:05Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://730f2e8326d700ecb9f8c97a91e51ec59d9f1c032aa9d52e6dd5f03a11237779
      image: yeskay.jfrog.io/skalavala/shoppingaggregator@sha256:0587fe7a727dff04d9d9f144535d79368f741cd96fc5372947ad39a5d070375f
      imageID: yeskay.jfrog.io/skalavala/shoppingaggregator@sha256:0587fe7a727dff04d9d9f144535d79368f741cd96fc5372947ad39a5d070375f
      lastState: {}
      name: shopping-aggregator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T15:21:11Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.76.41
    podIPs:
    - ip: 172.30.76.41
    qosClass: BestEffort
    startTime: 2021-07-05T15:21:05Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.75.241/32
      cni.projectcalico.org/podIPs: 172.30.75.241/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.241"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "172.30.75.241"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-07-05T15:14:26Z
    generateName: webstatus-54675b7c4f-
    labels:
      app: webstatus
      deploymentconfig: webstatus
      pod-template-hash: 54675b7c4f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7111fe06-96d4-4213-bc0c-0e09c5dcea0b"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"webstatus"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:14:26Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-07-05T15:14:28Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-07-05T15:14:28Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.75.241"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-07-05T15:14:36Z
    name: webstatus-54675b7c4f-rlkrm
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webstatus-54675b7c4f
      uid: 7111fe06-96d4-4213-bc0c-0e09c5dcea0b
    resourceVersion: "117720196"
    selfLink: /api/v1/namespaces/asprun/pods/webstatus-54675b7c4f-rlkrm
    uid: 6b862a3a-8aac-4ecc-bb80-e4464a25d481
  spec:
    containers:
    - image: yeskay.jfrog.io/skalavala/webstatus@sha256:01bf140c431f2b7b94efb23af8c228e3afc4cd804895fc465e74750f407174d8
      imagePullPolicy: Always
      name: webstatus
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1001380000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-sznkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-6tr7f
    - name: yeskay
    nodeName: 10.160.13.216
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001380000
      seLinuxOptions:
        level: s0:c37,c24
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-sznkb
      secret:
        defaultMode: 420
        secretName: default-token-sznkb
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:14:26Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:14:36Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:14:36Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-07-05T15:14:26Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b49402a490b01fbd8e87feee9f4722018e3f86f8b4ad71fc2b8674c423585fde
      image: yeskay.jfrog.io/skalavala/webstatus@sha256:01bf140c431f2b7b94efb23af8c228e3afc4cd804895fc465e74750f407174d8
      imageID: yeskay.jfrog.io/skalavala/webstatus@sha256:01bf140c431f2b7b94efb23af8c228e3afc4cd804895fc465e74750f407174d8
      lastState: {}
      name: webstatus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-07-05T15:14:35Z
    hostIP: 10.160.13.216
    phase: Running
    podIP: 172.30.75.241
    podIPs:
    - ip: 172.30.75.241
    qosClass: BestEffort
    startTime: 2021-07-05T15:14:26Z
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2021-07-05 13:38:54 +0000 UTC
      openshift.io/deployer-pod.created-at: 2021-07-05 13:37:07 +0000 UTC
      openshift.io/deployer-pod.name: mongodb-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: mongodb
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"mongodb","namespace":"asprun","selfLink":"/apis/apps.openshift.io/v1/namespaces/asprun/deploymentconfigs/mongodb","uid":"a9524d9e-6624-4a05-a57f-ef2006c84405","resourceVersion":"117666650","generation":2,"creationTimestamp":"2021-07-05T13:37:07Z","labels":{"template":"mongodb-persistent-template","template.openshift.io/template-instance-owner":"a765abd3-98bf-4be6-8379-1780478dbdaa"},"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"managedFields":[{"manager":"openshift-controller-manager","operation":"Update","apiVersion":"apps.openshift.io/v1","time":"2021-07-05T13:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:template.alpha.openshift.io/wait-for-ready":{}},"f:labels":{".":{},"f:template":{},"f:template.openshift.io/template-instance-owner":{}}},"f:spec":{"f:replicas":{},"f:selector":{".":{},"f:name":{}},"f:strategy":{"f:activeDeadlineSeconds":{},"f:recreateParams":{".":{},"f:timeoutSeconds":{}},"f:type":{}},"f:template":{".":{},"f:metadata":{".":{},"f:creationTimestamp":{},"f:labels":{".":{},"f:name":{}}},"f:spec":{".":{},"f:containers":{".":{},"k:{\"name\":\"mongodb\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"MONGODB_ADMIN_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"MONGODB_DATABASE\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"MONGODB_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"MONGODB_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:tcpSocket":{".":{},"f:port":{}},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":27017,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:exec":{".":{},"f:command":{}},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:limits":{".":{},"f:memory":{}}},"f:securityContext":{".":{},"f:capabilities":{},"f:privileged":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/lib/mongodb/data\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"mongodb-data\"}":{".":{},"f:name":{},"f:persistentVolumeClaim":{".":{},"f:claimName":{}}}}}},"f:triggers":{}},"f:status":{"f:details":{".":{},"f:causes":{},"f:message":{}},"f:latestVersion":{}}}}]},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["mongodb"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"mongodb:3.6"},"lastTriggeredImage":"image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"mongodb"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"mongodb"}},"spec":{"volumes":[{"name":"mongodb-data","persistentVolumeClaim":{"claimName":"mongodb"}}],"containers":[{"name":"mongodb","image":"image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79","ports":[{"containerPort":27017,"protocol":"TCP"}],"env":[{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-user"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-password"}}},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-admin-password"}}},{"name":"MONGODB_DATABASE","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-name"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"mongodb-data","mountPath":"/var/lib/mongodb/data"}],"livenessProbe":{"tcpSocket":{"port":27017},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""]},"initialDelaySeconds":3,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":0,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]}}}
    creationTimestamp: 2021-07-05T13:37:07Z
    generation: 2
    labels:
      openshift.io/deployment-config.name: mongodb
      template: mongodb-persistent-template
      template.openshift.io/template-instance-owner: a765abd3-98bf-4be6-8379-1780478dbdaa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T13:38:54Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployer-pod.completed-at: {}
            f:openshift.io/deployer-pod.created-at: {}
            f:openshift.io/deployer-pod.name: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.phase: {}
            f:openshift.io/deployment.replicas: {}
            f:openshift.io/deployment.status-reason: {}
            f:openshift.io/encoded-deployment-config: {}
          f:labels:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a9524d9e-6624-4a05-a57f-ef2006c84405"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/deployment-config.latest-version: {}
                f:openshift.io/deployment-config.name: {}
                f:openshift.io/deployment.name: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:deployment: {}
                f:deploymentconfig: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"MONGODB_ADMIN_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mongodb/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mongodb-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:38:54Z
    name: mongodb-1
    namespace: asprun
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: mongodb
      uid: a9524d9e-6624-4a05-a57f-ef2006c84405
    resourceVersion: "117667644"
    selfLink: /api/v1/namespaces/asprun/replicationcontrollers/mongodb-1
    uid: 451d5473-b2c7-45ef-9843-fc7da4221806
  spec:
    replicas: 1
    selector:
      deployment: mongodb-1
      deploymentconfig: mongodb
      name: mongodb
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: mongodb
          openshift.io/deployment.name: mongodb-1
        creationTimestamp: null
        labels:
          deployment: mongodb-1
          deploymentconfig: mongodb
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: mongodb
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mongodb
          image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2021-07-05 13:37:35 +0000 UTC
      openshift.io/deployer-pod.created-at: 2021-07-05 13:36:03 +0000 UTC
      openshift.io/deployer-pod.name: postgresql-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"postgresql","namespace":"asprun","selfLink":"/apis/apps.openshift.io/v1/namespaces/asprun/deploymentconfigs/postgresql","uid":"8cf8b87a-b31a-45fe-8c5e-6f6c951a04cd","resourceVersion":"117666049","generation":2,"creationTimestamp":"2021-07-05T13:36:02Z","labels":{"template":"postgresql-persistent-template","template.openshift.io/template-instance-owner":"310523c9-f259-4445-824e-c59947a9eff5"},"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"managedFields":[{"manager":"openshift-controller-manager","operation":"Update","apiVersion":"apps.openshift.io/v1","time":"2021-07-05T13:36:03Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:template.alpha.openshift.io/wait-for-ready":{}},"f:labels":{".":{},"f:template":{},"f:template.openshift.io/template-instance-owner":{}}},"f:spec":{"f:replicas":{},"f:selector":{".":{},"f:name":{}},"f:strategy":{"f:activeDeadlineSeconds":{},"f:recreateParams":{".":{},"f:timeoutSeconds":{}},"f:type":{}},"f:template":{".":{},"f:metadata":{".":{},"f:creationTimestamp":{},"f:labels":{".":{},"f:name":{}}},"f:spec":{".":{},"f:containers":{".":{},"k:{\"name\":\"postgresql\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"POSTGRESQL_DATABASE\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"POSTGRESQL_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"POSTGRESQL_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:exec":{".":{},"f:command":{}},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":5432,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:exec":{".":{},"f:command":{}},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:limits":{".":{},"f:memory":{}}},"f:securityContext":{".":{},"f:capabilities":{},"f:privileged":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/lib/pgsql/data\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"postgresql-data\"}":{".":{},"f:name":{},"f:persistentVolumeClaim":{".":{},"f:claimName":{}}}}}},"f:triggers":{}},"f:status":{"f:details":{".":{},"f:causes":{},"f:message":{}},"f:latestVersion":{}}}}]},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:10"},"lastTriggeredImage":"image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql"}}],"containers":[{"name":"postgresql","image":"image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-user"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-password"}}},{"name":"POSTGRESQL_DATABASE","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-name"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"exec":{"command":["/usr/libexec/check-container","--live"]},"initialDelaySeconds":120,"timeoutSeconds":10,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/usr/libexec/check-container"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":0,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]}}}
    creationTimestamp: 2021-07-05T13:36:03Z
    generation: 2
    labels:
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: 310523c9-f259-4445-824e-c59947a9eff5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T13:37:35Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployer-pod.completed-at: {}
            f:openshift.io/deployer-pod.created-at: {}
            f:openshift.io/deployer-pod.name: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.phase: {}
            f:openshift.io/deployment.replicas: {}
            f:openshift.io/deployment.status-reason: {}
            f:openshift.io/encoded-deployment-config: {}
          f:labels:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8cf8b87a-b31a-45fe-8c5e-6f6c951a04cd"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/deployment-config.latest-version: {}
                f:openshift.io/deployment-config.name: {}
                f:openshift.io/deployment.name: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:deployment: {}
                f:deploymentconfig: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"postgresql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"POSTGRESQL_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/pgsql/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"postgresql-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:37:36Z
    name: postgresql-1
    namespace: asprun
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 8cf8b87a-b31a-45fe-8c5e-6f6c951a04cd
    resourceVersion: "117666932"
    selfLink: /api/v1/namespaces/asprun/replicationcontrollers/postgresql-1
    uid: 9763647d-fa82-465b-89f5-d62740cf05cd
  spec:
    replicas: 1
    selector:
      deployment: postgresql-1
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-1
        creationTimestamp: null
        labels:
          deployment: postgresql-1
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:19:20Z
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:19:20Z
    name: aspnetrunbasics
    namespace: asprun
    resourceVersion: "117723080"
    selfLink: /api/v1/namespaces/asprun/services/aspnetrunbasics
    uid: 41244ddb-66f0-4df7-bcba-ffd03b25afe2
  spec:
    clusterIP: 172.21.67.201
    ports:
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 443
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: aspnetrunbasics
      deploymentconfig: aspnetrunbasics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T01:04:20Z
    labels:
      app: asprunbasics-gw
      app.kubernetes.io/component: asprunbasics-gw
      app.kubernetes.io/instance: asprunbasics-gw
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T01:04:20Z
    name: asprunbasics-gw
    namespace: asprun
    resourceVersion: "118065924"
    selfLink: /api/v1/namespaces/asprun/services/asprunbasics-gw
    uid: d1a0605b-0dca-46cb-82b1-bce7c90d7977
  spec:
    clusterIP: 172.21.248.112
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: asprunbasics-gw
      deploymentconfig: asprunbasics-gw
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:40Z
    labels:
      app: basket-api
      app.kubernetes.io/component: basket-api
      app.kubernetes.io/instance: basket-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:43:40Z
    name: basket-api
    namespace: asprun
    resourceVersion: "118678197"
    selfLink: /api/v1/namespaces/asprun/services/basket-api
    uid: d4c100d7-e6b9-4c0c-a37e-0343e8494c6d
  spec:
    clusterIP: 172.21.195.107
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: basket-api
      deploymentconfig: basket-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:22Z
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:43:22Z
    name: catalog-api
    namespace: asprun
    resourceVersion: "118677893"
    selfLink: /api/v1/namespaces/asprun/services/catalog-api
    uid: 35aef2dd-c9ac-4175-8deb-e844c6ff5416
  spec:
    clusterIP: 172.21.125.200
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: catalog-api
      deploymentconfig: catalog-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:25:08Z
    labels:
      app: discount-api
      app.kubernetes.io/component: discount-api
      app.kubernetes.io/instance: discount-api
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T23:25:08Z
    name: discount-api
    namespace: asprun
    resourceVersion: "118008237"
    selfLink: /api/v1/namespaces/asprun/services/discount-api
    uid: 3742a248-b026-4edb-b5e9-d994ea84cbd6
  spec:
    clusterIP: 172.21.225.131
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: discount-api
      deploymentconfig: discount-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:31:00Z
    labels:
      app: discount-grpc
      app.kubernetes.io/component: discount-grpc
      app.kubernetes.io/instance: discount-grpc
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8081,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T23:31:00Z
    name: discount-grpc
    namespace: asprun
    resourceVersion: "118011791"
    selfLink: /api/v1/namespaces/asprun/services/discount-grpc
    uid: 31f2adc9-7b7c-4c0a-8779-950dc15a111a
  spec:
    clusterIP: 172.21.69.139
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: discount-grpc
      deploymentconfig: discount-grpc
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}
    creationTimestamp: 2021-07-05T13:37:07Z
    labels:
      template: mongodb-persistent-template
      template.openshift.io/template-instance-owner: a765abd3-98bf-4be6-8379-1780478dbdaa
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.openshift.io/expose-uri: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":27017,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:37:07Z
    name: mongodb
    namespace: asprun
    resourceVersion: "117666629"
    selfLink: /api/v1/namespaces/asprun/services/mongodb
    uid: afc56e5e-9130-45a3-8855-480cb5154d22
  spec:
    clusterIP: 172.21.11.142
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-07-05T13:50:51Z
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":1443,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: oc.exe
      operation: Update
      time: 2021-07-05T13:50:51Z
    name: mssql
    namespace: asprun
    resourceVersion: "117673713"
    selfLink: /api/v1/namespaces/asprun/services/mssql
    uid: f64adb61-6e7a-439b-8473-63dd18cad5f0
  spec:
    clusterIP: None
    ports:
    - port: 1443
      protocol: TCP
      targetPort: 1443
    selector:
      app: mssql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:28:01Z
    labels:
      app: network-multitool
      app.kubernetes.io/component: network-multitool
      app.kubernetes.io/instance: network-multitool
      app.kubernetes.io/part-of: infrastructure
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":1180,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":11443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:28:01Z
    name: network-multitool
    namespace: asprun
    resourceVersion: "117728931"
    selfLink: /api/v1/namespaces/asprun/services/network-multitool
    uid: 6ec7c5ec-2817-426d-b3f0-68ffc5ae5c9a
  spec:
    clusterIP: 172.21.2.215
    ports:
    - name: 11443-tcp
      port: 11443
      protocol: TCP
      targetPort: 11443
    - name: 1180-tcp
      port: 1180
      protocol: TCP
      targetPort: 1180
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 443
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: network-multitool
      deploymentconfig: network-multitool
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:55:15Z
    labels:
      app: ordering-api
      app.kubernetes.io/component: ordering-api
      app.kubernetes.io/instance: ordering-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:55:15Z
    name: ordering-api
    namespace: asprun
    resourceVersion: "118685038"
    selfLink: /api/v1/namespaces/asprun/services/ordering-api
    uid: f5f39b8d-15d9-4702-800a-7551297eb949
  spec:
    clusterIP: 172.21.254.102
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ordering-api
      deploymentconfig: ordering-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    creationTimestamp: 2021-07-05T13:36:02Z
    labels:
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: 310523c9-f259-4445-824e-c59947a9eff5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.openshift.io/expose-uri: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:36:02Z
    name: postgresql
    namespace: asprun
    resourceVersion: "117666031"
    selfLink: /api/v1/namespaces/asprun/services/postgresql
    uid: d3da044c-d9c6-406d-9b83-31ab1904f846
  spec:
    clusterIP: 172.21.231.212
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: asprun
    creationTimestamp: 2021-07-06T00:08:02Z
    labels:
      app: rabbitmq
      app.kubernetes.io/managed-by: Helm
      chart: rabbitmq-0.1.0
      heritage: Helm
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
            f:heritage: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":5672,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":15672,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T13:13:22Z
    name: rabbitmq
    namespace: asprun
    resourceVersion: "118488103"
    selfLink: /api/v1/namespaces/asprun/services/rabbitmq
    uid: 548c337a-33e4-4ed2-94ae-a0a13ce49c8a
  spec:
    clusterIP: 172.21.249.74
    ports:
    - name: http
      port: 5672
      protocol: TCP
      targetPort: http
    - name: mgmt-http
      port: 15672
      protocol: TCP
      targetPort: mgmt-http
    selector:
      app: rabbitmq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-07-05T15:04:23Z
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:ports:
            .: {}
            k:{"port":6379,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:04:23Z
    name: redis-server
    namespace: asprun
    resourceVersion: "117714209"
    selfLink: /api/v1/namespaces/asprun/services/redis-server
    uid: 92dbf28f-9c04-4529-84bf-77c00f7161ed
  spec:
    clusterIP: 172.21.18.153
    ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis-server-master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
      redis.opstreelabs.in: "true"
    creationTimestamp: 2021-07-05T14:45:33Z
    labels:
      app: redis-server-master
      redis: monitor
      role: master
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:redis.opstreelabs.in: {}
          f:labels:
            .: {}
            f:app: {}
            f:redis: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e9352f3b-fb34-4f02-86c6-32a9614c0091"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":6379,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9121,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:redis: {}
            f:role: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: manager
      operation: Update
      time: 2021-07-05T14:45:33Z
    name: redis-server-master
    namespace: asprun
    ownerReferences:
    - apiVersion: redis.redis.opstreelabs.in/v1beta1
      controller: true
      kind: Redis
      name: redis-server
      uid: e9352f3b-fb34-4f02-86c6-32a9614c0091
    resourceVersion: "117703045"
    selfLink: /api/v1/namespaces/asprun/services/redis-server-master
    uid: f50f6333-e552-4865-88bc-e94318a121d6
  spec:
    clusterIP: 172.21.15.246
    ports:
    - name: redis-server-master
      port: 6379
      protocol: TCP
      targetPort: 6379
    - name: redis-exporter
      port: 9121
      protocol: TCP
      targetPort: 9121
    selector:
      app: redis-server-master
      redis: monitor
      role: master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
      redis.opstreelabs.in: "true"
    creationTimestamp: 2021-07-05T14:45:33Z
    labels:
      app: redis-server-master
      role: master
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:redis.opstreelabs.in: {}
          f:labels:
            .: {}
            f:app: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e9352f3b-fb34-4f02-86c6-32a9614c0091"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":6379,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:role: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: manager
      operation: Update
      time: 2021-07-05T14:45:33Z
    name: redis-server-master-headless
    namespace: asprun
    ownerReferences:
    - apiVersion: redis.redis.opstreelabs.in/v1beta1
      controller: true
      kind: Redis
      name: redis-server
      uid: e9352f3b-fb34-4f02-86c6-32a9614c0091
    resourceVersion: "117703057"
    selfLink: /api/v1/namespaces/asprun/services/redis-server-master-headless
    uid: c1678599-a831-470f-a1ba-ec091a6dc9ac
  spec:
    clusterIP: None
    ports:
    - name: redis-server-master
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis-server-master
      role: master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
      redis.opstreelabs.in: "true"
    creationTimestamp: 2021-07-05T14:45:33Z
    labels:
      app: redis-server-slave
      redis: monitor
      role: slave
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:redis.opstreelabs.in: {}
          f:labels:
            .: {}
            f:app: {}
            f:redis: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e9352f3b-fb34-4f02-86c6-32a9614c0091"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":6379,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9121,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:redis: {}
            f:role: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: manager
      operation: Update
      time: 2021-07-05T14:45:33Z
    name: redis-server-slave
    namespace: asprun
    ownerReferences:
    - apiVersion: redis.redis.opstreelabs.in/v1beta1
      controller: true
      kind: Redis
      name: redis-server
      uid: e9352f3b-fb34-4f02-86c6-32a9614c0091
    resourceVersion: "117703075"
    selfLink: /api/v1/namespaces/asprun/services/redis-server-slave
    uid: d463c413-d27a-4841-817c-f8c5dcf7e3df
  spec:
    clusterIP: 172.21.88.221
    ports:
    - name: redis-server-slave
      port: 6379
      protocol: TCP
      targetPort: 6379
    - name: redis-exporter
      port: 9121
      protocol: TCP
      targetPort: 9121
    selector:
      app: redis-server-slave
      redis: monitor
      role: slave
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
      redis.opstreelabs.in: "true"
    creationTimestamp: 2021-07-05T14:45:34Z
    labels:
      app: redis-server-slave
      role: slave
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:redis.opstreelabs.in: {}
          f:labels:
            .: {}
            f:app: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e9352f3b-fb34-4f02-86c6-32a9614c0091"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":6379,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:role: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: manager
      operation: Update
      time: 2021-07-05T14:45:34Z
    name: redis-server-slave-headless
    namespace: asprun
    ownerReferences:
    - apiVersion: redis.redis.opstreelabs.in/v1beta1
      controller: true
      kind: Redis
      name: redis-server
      uid: e9352f3b-fb34-4f02-86c6-32a9614c0091
    resourceVersion: "117703081"
    selfLink: /api/v1/namespaces/asprun/services/redis-server-slave-headless
    uid: 49514ed1-40dc-4e98-a03b-ba30aa35e980
  spec:
    clusterIP: None
    ports:
    - name: redis-server-slave
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis-server-slave
      role: slave
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:21:04Z
    labels:
      app: shopping-aggregator
      app.kubernetes.io/component: shopping-aggregator
      app.kubernetes.io/instance: shopping-aggregator
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:21:03Z
    name: shopping-aggregator
    namespace: asprun
    resourceVersion: "117724306"
    selfLink: /api/v1/namespaces/asprun/services/shopping-aggregator
    uid: ac076523-119a-41d4-8521-baa1fb451ce8
  spec:
    clusterIP: 172.21.149.140
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: shopping-aggregator
      deploymentconfig: shopping-aggregator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:14:25Z
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:14:25Z
    name: webstatus
    namespace: asprun
    resourceVersion: "117720046"
    selfLink: /api/v1/namespaces/asprun/services/webstatus
    uid: 7cf34b0d-456c-441d-9542-05af795bb76f
  spec:
    clusterIP: 172.21.236.56
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: webstatus
      deploymentconfig: webstatus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"aspnetrunbasics:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"aspnetrunbasics\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:19:20Z
    generation: 2
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"aspnetrunbasics"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:19:20Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"aspnetrunbasics"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T15:19:21Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:19:29Z
    name: aspnetrunbasics
    namespace: asprun
    resourceVersion: "117723242"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/aspnetrunbasics
    uid: 7ad7718e-1672-4816-b538-04b44cc8eff9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: aspnetrunbasics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: aspnetrunbasics
          deploymentconfig: aspnetrunbasics
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/aspnetrunbasics@sha256:78d984af13a4a32b22a4253d5300c1d1142cb98bba2d20eba315faa4d03438b2
          imagePullPolicy: Always
          name: aspnetrunbasics
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T15:19:27Z
      lastUpdateTime: 2021-07-05T15:19:27Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T15:19:20Z
      lastUpdateTime: 2021-07-05T15:19:29Z
      message: ReplicaSet "aspnetrunbasics-78f965b546" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprun-gw:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprun-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:17:42Z
    generation: 2
    labels:
      app: asprun-gw
      app.kubernetes.io/component: asprun-gw
      app.kubernetes.io/instance: asprun-gw
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"asprun-gw"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:17:42Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"asprun-gw"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T15:17:43Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:17:51Z
    name: asprun-gw
    namespace: asprun
    resourceVersion: "117722255"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/asprun-gw
    uid: fb35b0a1-511a-46cd-9735-e40fea1c23db
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: asprun-gw
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprun-gw
          deploymentconfig: asprun-gw
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:beb83b1226c4e6ef75b4be34b58dc1ce69abda637b35da947b71b73d78b51ba0
          imagePullPolicy: Always
          name: asprun-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T15:17:49Z
      lastUpdateTime: 2021-07-05T15:17:49Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T15:17:42Z
      lastUpdateTime: 2021-07-05T15:17:51Z
      message: ReplicaSet "asprun-gw-b7fdff4f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprunbasics-gw:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprunbasics-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T01:04:20Z
    generation: 2
    labels:
      app: asprunbasics-gw
      app.kubernetes.io/component: asprunbasics-gw
      app.kubernetes.io/instance: asprunbasics-gw
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"asprunbasics-gw"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-06T01:04:21Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T01:04:29Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"asprunbasics-gw"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:35:27Z
    name: asprunbasics-gw
    namespace: asprun
    resourceVersion: "118673395"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/asprunbasics-gw
    uid: 2d8456a6-1460-4dc0-9ec1-07e72a00aeb2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: asprunbasics-gw
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprunbasics-gw
          deploymentconfig: asprunbasics-gw
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:a5ab784d2f524bfd058ec182d5d08433400f4c074b44835a8820af4f4f589364
          imagePullPolicy: Always
          name: asprunbasics-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-06T01:04:27Z
      lastUpdateTime: 2021-07-06T01:04:27Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-06T01:04:20Z
      lastUpdateTime: 2021-07-06T01:04:29Z
      message: ReplicaSet "asprunbasics-gw-74cc5f7ff8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"basket-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"basket-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:40Z
    generation: 2
    labels:
      app: basket-api
      app.kubernetes.io/component: basket-api
      app.kubernetes.io/instance: basket-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"basket-api"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:43:40Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"basket-api"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-06T18:43:41Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:48Z
    name: basket-api
    namespace: asprun
    resourceVersion: "118678335"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/basket-api
    uid: 5ac4c953-e190-4338-83ae-c64459389234
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: basket-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: basket-api
          deploymentconfig: basket-api
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/basketapi@sha256:cf6bfcaec94e12a3abc668244962629734f4f7ebe85959db911d5b0fe4ccce5d
          imagePullPolicy: Always
          name: basket-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-06T18:43:47Z
      lastUpdateTime: 2021-07-06T18:43:47Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-06T18:43:41Z
      lastUpdateTime: 2021-07-06T18:43:48Z
      message: ReplicaSet "basket-api-686d5459f6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"catalog-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"catalog-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:22Z
    generation: 2
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"catalog-api"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:43:22Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"catalog-api"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-06T18:43:23Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:31Z
    name: catalog-api
    namespace: asprun
    resourceVersion: "118678041"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/catalog-api
    uid: 5cf5706f-df5b-444b-abab-70d11efd6a8a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: catalog-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: catalog-api
          deploymentconfig: catalog-api
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/catalogapi@sha256:a83299383b3524d8b5f38cb853315d6c95f1d7edc61f78d88dcf50189b43378f
          imagePullPolicy: Always
          name: catalog-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-06T18:43:30Z
      lastUpdateTime: 2021-07-06T18:43:30Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-06T18:43:22Z
      lastUpdateTime: 2021-07-06T18:43:31Z
      message: ReplicaSet "catalog-api-57bc8c8ff7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:25:08Z
    generation: 2
    labels:
      app: discount-api
      app.kubernetes.io/component: discount-api
      app.kubernetes.io/instance: discount-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"discount-api"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T23:25:09Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:25:16Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"discount-api"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:35:21Z
    name: discount-api
    namespace: asprun
    resourceVersion: "118673309"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/discount-api
    uid: 4ddbfaa1-665d-4962-a891-99fe48acd4b3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: discount-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-api
          deploymentconfig: discount-api
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/discountapi@sha256:4d35b856934d93a6c3a62310898c24a5849bf275a79497430a864214557e5183
          imagePullPolicy: Always
          name: discount-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T23:25:15Z
      lastUpdateTime: 2021-07-05T23:25:15Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T23:25:08Z
      lastUpdateTime: 2021-07-05T23:25:16Z
      message: ReplicaSet "discount-api-55bfcbf57d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-grpc:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-grpc\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:31:00Z
    generation: 2
    labels:
      app: discount-grpc
      app.kubernetes.io/component: discount-grpc
      app.kubernetes.io/instance: discount-grpc
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"discount-grpc"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T23:31:01Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:31:08Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"discount-grpc"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8081,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:35:15Z
    name: discount-grpc
    namespace: asprun
    resourceVersion: "118673240"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/discount-grpc
    uid: 30ea4838-0f28-49d3-890e-8c563d584cdc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: discount-grpc
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-grpc
          deploymentconfig: discount-grpc
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/discountgrpc@sha256:8c404b83e266f74737b9f27e22a857efe69ca15beda694153348c732d20f68ce
          imagePullPolicy: Always
          name: discount-grpc
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T23:31:07Z
      lastUpdateTime: 2021-07-05T23:31:07Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T23:31:00Z
      lastUpdateTime: 2021-07-05T23:31:08Z
      message: ReplicaSet "discount-grpc-685bf45dfb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-07-05T13:50:51Z
    generation: 1
    labels:
      app.kubernetes.io/part-of: infrastructure
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"mssql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ACCEPT_EULA"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":1443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mssql"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mssql-persistent-storage"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: oc.exe
      operation: Update
      time: 2021-07-05T13:50:51Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T13:51:18Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/part-of: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T14:04:11Z
    name: mssql
    namespace: asprun
    resourceVersion: "117680456"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/mssql
    uid: 2a00091a-e1bb-4ea6-8dde-f59a24651d0d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mssql
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mssql
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          envFrom:
          - secretRef:
              name: mssql
          image: mcr.microsoft.com/mssql/rhel/server:2019-latest
          imagePullPolicy: IfNotPresent
          name: mssql
          ports:
          - containerPort: 1443
            name: mssql
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mssql
            name: mssql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mssql-persistent-storage
          persistentVolumeClaim:
            claimName: mssql-pv-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T13:51:18Z
      lastUpdateTime: 2021-07-05T13:51:18Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T13:50:51Z
      lastUpdateTime: 2021-07-05T13:51:18Z
      message: ReplicaSet "mssql-7b959d6cf6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "3"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ordering-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"ordering-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:55:15Z
    generation: 2
    labels:
      app: ordering-api
      app.kubernetes.io/component: ordering-api
      app.kubernetes.io/instance: ordering-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:55:15Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-06T18:55:17Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:collisionCount: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T19:00:02Z
    name: ordering-api
    namespace: asprun
    resourceVersion: "118687881"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/ordering-api
    uid: e0549f04-606b-4558-b05a-3b590f432d3e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ordering-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ordering-api
          deploymentconfig: ordering-api
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/orderingapi@sha256:5345b469c8efb9e855946438bbe53ae7c7c954b438e5a88d8a4cd92362083ae1
          imagePullPolicy: Always
          name: ordering-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    collisionCount: 1
    conditions:
    - lastTransitionTime: 2021-07-06T18:55:15Z
      lastUpdateTime: 2021-07-06T18:59:20Z
      message: ReplicaSet "ordering-api-5c5c985b67" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: 2021-07-06T19:00:02Z
      lastUpdateTime: 2021-07-06T19:00:02Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2021-07-05T13:59:10Z
    generation: 2
    labels:
      app: rabbitmq
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: infrastructure
      chart: rabbitmq-0.1.0
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"rabbitmq"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: oc.exe
      operation: Update
      time: 2021-07-05T13:59:10Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"rabbitmq"}:
                  f:ports:
                    k:{"containerPort":15672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T13:06:12Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T13:06:32Z
    name: rabbitmq
    namespace: asprun
    resourceVersion: "118484233"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/rabbitmq
    uid: 567ad80a-afc2-4043-a710-81e4efca8791
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: rabbitmq
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3-management
          imagePullPolicy: IfNotPresent
          name: rabbitmq
          ports:
          - containerPort: 5672
            name: http
            protocol: TCP
          - containerPort: 15672
            name: mgmt-http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T13:59:13Z
      lastUpdateTime: 2021-07-05T13:59:13Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T13:59:11Z
      lastUpdateTime: 2021-07-06T13:06:32Z
      message: ReplicaSet "rabbitmq-b7bb787cd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-07-05T14:30:58Z
    generation: 2
    labels:
      olm.deployment-spec-hash: 696d5fd676
      olm.owner: redis-operator.v0.5.0
      olm.owner.kind: ClusterServiceVersion
      olm.owner.namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:olm.deployment-spec-hash: {}
            f:olm.owner: {}
            f:olm.owner.kind: {}
            f:olm.owner.namespace: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4e6f5b5a-c4b0-4099-97a1-aa7129ed8abb"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:control-plane: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:alm-examples: {}
                f:capabilities: {}
                f:categories: {}
                f:certified: {}
                f:containerImage: {}
                f:createdAt: {}
                f:description: {}
                f:olm.operatorGroup: {}
                f:olm.operatorNamespace: {}
                f:olm.targetNamespaces: {}
                f:repository: {}
                f:support: {}
              f:labels:
                .: {}
                f:control-plane: {}
            f:spec:
              f:containers:
                k:{"name":"manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: olm
      operation: Update
      time: 2021-07-05T14:30:58Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            k:{"type":"Available"}:
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
            k:{"type":"Progressing"}:
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:31:14Z
    name: redis-operator
    namespace: asprun
    ownerReferences:
    - apiVersion: operators.coreos.com/v1alpha1
      blockOwnerDeletion: false
      controller: false
      kind: ClusterServiceVersion
      name: redis-operator.v0.5.0
      uid: 4e6f5b5a-c4b0-4099-97a1-aa7129ed8abb
    resourceVersion: "117694376"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/redis-operator
    uid: feac51c6-75ff-44df-a0b9-eb2ce915aac2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        control-plane: redis-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          alm-examples: '[{"apiVersion":"redis.redis.opstreelabs.in/v1beta1","kind":"Redis","metadata":{"name":"redis"},"spec":{"mode":"cluster","size":3,"global":{"image":"quay.io/opstree/redis:v6.2","imagePullPolicy":"IfNotPresent","password":"Opstree@1234","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"master":{"service":{"type":"ClusterIP"},"redisConfig":{}},"slave":{"service":{"type":"ClusterIP"},"redisConfig":{}},"service":{"type":"ClusterIP"},"redisConfig":{},"redisExporter":{"enabled":true,"image":"quay.io/opstree/redis-exporter:1.0","imagePullPolicy":"Always","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"buildpiper-storage","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}}}}]'
          capabilities: Seamless Upgrades
          categories: Database, Storage
          certified: "false"
          containerImage: quay.io/opstree/redis-operator:v0.5.0
          createdAt: 03-05-2021
          description: A Golang based redis operator that will make/oversee Redis
            standalone/cluster mode setup on top of the Kubernetes.
          olm.operatorGroup: asprun-pkj8k
          olm.operatorNamespace: asprun
          olm.targetNamespaces: asprun
          repository: https://github.com/ot-container-kit/redis-operator
          support: ""
        creationTimestamp: null
        labels:
          control-plane: redis-operator
      spec:
        containers:
        - args:
          - --leader-elect
          command:
          - /manager
          image: quay.io/opstree/redis-operator:v0.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsUser: 65532
        serviceAccount: redis-operator
        serviceAccountName: redis-operator
        terminationGracePeriodSeconds: 10
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T14:31:14Z
      lastUpdateTime: 2021-07-05T14:31:14Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T14:30:58Z
      lastUpdateTime: 2021-07-05T14:31:14Z
      message: ReplicaSet "redis-operator-5f8c98984d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"shopping-aggregator:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"shopping-aggregator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:21:04Z
    generation: 2
    labels:
      app: shopping-aggregator
      app.kubernetes.io/component: shopping-aggregator
      app.kubernetes.io/instance: shopping-aggregator
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"shopping-aggregator"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T15:21:05Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:21:12Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"shopping-aggregator"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:21:51Z
    name: shopping-aggregator
    namespace: asprun
    resourceVersion: "117724802"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/shopping-aggregator
    uid: e3277729-1fb5-4fc2-92a0-0234f7f000c8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: shopping-aggregator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: shopping-aggregator
          deploymentconfig: shopping-aggregator
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/shoppingaggregator@sha256:0587fe7a727dff04d9d9f144535d79368f741cd96fc5372947ad39a5d070375f
          imagePullPolicy: Always
          name: shopping-aggregator
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T15:21:11Z
      lastUpdateTime: 2021-07-05T15:21:11Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T15:21:04Z
      lastUpdateTime: 2021-07-05T15:21:12Z
      message: ReplicaSet "shopping-aggregator-674c796668" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"webstatus:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"webstatus\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:14:25Z
    generation: 2
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-namespace: asprun
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"webstatus"}:
                  .: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:14:25Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"webstatus"}:
                  f:image: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T15:14:26Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:14:36Z
    name: webstatus
    namespace: asprun
    resourceVersion: "117720211"
    selfLink: /apis/apps/v1/namespaces/asprun/deployments/webstatus
    uid: 102b1630-90d8-404e-a058-aee144cf214d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: webstatus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: webstatus
          deploymentconfig: webstatus
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/webstatus@sha256:01bf140c431f2b7b94efb23af8c228e3afc4cd804895fc465e74750f407174d8
          imagePullPolicy: Always
          name: webstatus
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T15:14:35Z
      lastUpdateTime: 2021-07-05T15:14:35Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T15:14:25Z
      lastUpdateTime: 2021-07-05T15:14:36Z
      message: ReplicaSet "webstatus-54675b7c4f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"aspnetrunbasics:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"aspnetrunbasics\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:19:21Z
    generation: 1
    labels:
      app: aspnetrunbasics
      deploymentconfig: aspnetrunbasics
      pod-template-hash: 78f965b546
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7ad7718e-1672-4816-b538-04b44cc8eff9"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"aspnetrunbasics"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:19:29Z
    name: aspnetrunbasics-78f965b546
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: aspnetrunbasics
      uid: 7ad7718e-1672-4816-b538-04b44cc8eff9
    resourceVersion: "117723230"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/aspnetrunbasics-78f965b546
    uid: e4fb69db-1857-46cd-b15a-d9e13fc3a581
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: aspnetrunbasics
        pod-template-hash: 78f965b546
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: aspnetrunbasics
          deploymentconfig: aspnetrunbasics
          pod-template-hash: 78f965b546
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/aspnetrunbasics@sha256:78d984af13a4a32b22a4253d5300c1d1142cb98bba2d20eba315faa4d03438b2
          imagePullPolicy: Always
          name: aspnetrunbasics
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"aspnetrunbasics:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"aspnetrunbasics\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:19:20Z
    generation: 2
    labels:
      app: aspnetrunbasics
      deploymentconfig: aspnetrunbasics
      pod-template-hash: d46c89766
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7ad7718e-1672-4816-b538-04b44cc8eff9"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"aspnetrunbasics"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:19:29Z
    name: aspnetrunbasics-d46c89766
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: aspnetrunbasics
      uid: 7ad7718e-1672-4816-b538-04b44cc8eff9
    resourceVersion: "117723240"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/aspnetrunbasics-d46c89766
    uid: 726ece82-c787-4f13-b727-26d8e224aa36
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: aspnetrunbasics
        pod-template-hash: d46c89766
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: aspnetrunbasics
          deploymentconfig: aspnetrunbasics
          pod-template-hash: d46c89766
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/aspnetrunbasics:latest
          imagePullPolicy: Always
          name: aspnetrunbasics
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprun-gw:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprun-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:17:42Z
    generation: 2
    labels:
      app: asprun-gw
      deploymentconfig: asprun-gw
      pod-template-hash: 57d59b579c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fb35b0a1-511a-46cd-9735-e40fea1c23db"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"asprun-gw"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:17:51Z
    name: asprun-gw-57d59b579c
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: asprun-gw
      uid: fb35b0a1-511a-46cd-9735-e40fea1c23db
    resourceVersion: "117722253"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/asprun-gw-57d59b579c
    uid: dacca1ba-ef2e-4a78-888d-36ecde7aa597
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: asprun-gw
        pod-template-hash: 57d59b579c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprun-gw
          deploymentconfig: asprun-gw
          pod-template-hash: 57d59b579c
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/asprun-gw:latest
          imagePullPolicy: Always
          name: asprun-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprun-gw:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprun-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:17:43Z
    generation: 1
    labels:
      app: asprun-gw
      deploymentconfig: asprun-gw
      pod-template-hash: b7fdff4f
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fb35b0a1-511a-46cd-9735-e40fea1c23db"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"asprun-gw"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:17:51Z
    name: asprun-gw-b7fdff4f
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: asprun-gw
      uid: fb35b0a1-511a-46cd-9735-e40fea1c23db
    resourceVersion: "117722243"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/asprun-gw-b7fdff4f
    uid: 4b3251c3-8efb-4f05-bce3-89df6fab8428
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: asprun-gw
        pod-template-hash: b7fdff4f
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprun-gw
          deploymentconfig: asprun-gw
          pod-template-hash: b7fdff4f
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:beb83b1226c4e6ef75b4be34b58dc1ce69abda637b35da947b71b73d78b51ba0
          imagePullPolicy: Always
          name: asprun-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprunbasics-gw:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprunbasics-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T01:04:20Z
    generation: 2
    labels:
      app: asprunbasics-gw
      deploymentconfig: asprunbasics-gw
      pod-template-hash: 6f5d498895
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2d8456a6-1460-4dc0-9ec1-07e72a00aeb2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"asprunbasics-gw"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T01:04:29Z
    name: asprunbasics-gw-6f5d498895
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: asprunbasics-gw
      uid: 2d8456a6-1460-4dc0-9ec1-07e72a00aeb2
    resourceVersion: "118066082"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/asprunbasics-gw-6f5d498895
    uid: 6974f31c-6197-44ec-b093-0a573caf7d56
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: asprunbasics-gw
        pod-template-hash: 6f5d498895
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprunbasics-gw
          deploymentconfig: asprunbasics-gw
          pod-template-hash: 6f5d498895
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/asprunbasics-gw:latest
          imagePullPolicy: Always
          name: asprunbasics-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprunbasics-gw:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprunbasics-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T01:04:22Z
    generation: 1
    labels:
      app: asprunbasics-gw
      deploymentconfig: asprunbasics-gw
      pod-template-hash: 74cc5f7ff8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2d8456a6-1460-4dc0-9ec1-07e72a00aeb2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"asprunbasics-gw"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T01:04:29Z
    name: asprunbasics-gw-74cc5f7ff8
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: asprunbasics-gw
      uid: 2d8456a6-1460-4dc0-9ec1-07e72a00aeb2
    resourceVersion: "118066073"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/asprunbasics-gw-74cc5f7ff8
    uid: 39a65875-0397-45d7-88aa-bb2f67f904f0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: asprunbasics-gw
        pod-template-hash: 74cc5f7ff8
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprunbasics-gw
          deploymentconfig: asprunbasics-gw
          pod-template-hash: 74cc5f7ff8
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:a5ab784d2f524bfd058ec182d5d08433400f4c074b44835a8820af4f4f589364
          imagePullPolicy: Always
          name: asprunbasics-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"basket-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"basket-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:40Z
    generation: 2
    labels:
      app: basket-api
      deploymentconfig: basket-api
      pod-template-hash: "5458867645"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5ac4c953-e190-4338-83ae-c64459389234"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"basket-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:48Z
    name: basket-api-5458867645
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: basket-api
      uid: 5ac4c953-e190-4338-83ae-c64459389234
    resourceVersion: "118678334"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/basket-api-5458867645
    uid: c4e4b136-9851-4fbb-b2bc-0fc055f0a0b3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: basket-api
        pod-template-hash: "5458867645"
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: basket-api
          deploymentconfig: basket-api
          pod-template-hash: "5458867645"
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/basket-api:latest
          imagePullPolicy: Always
          name: basket-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"basket-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"basket-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:41Z
    generation: 1
    labels:
      app: basket-api
      deploymentconfig: basket-api
      pod-template-hash: 686d5459f6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5ac4c953-e190-4338-83ae-c64459389234"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"basket-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:48Z
    name: basket-api-686d5459f6
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: basket-api
      uid: 5ac4c953-e190-4338-83ae-c64459389234
    resourceVersion: "118678324"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/basket-api-686d5459f6
    uid: ef3d3ade-1dfb-4d0f-be27-6fb955f110bd
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: basket-api
        pod-template-hash: 686d5459f6
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: basket-api
          deploymentconfig: basket-api
          pod-template-hash: 686d5459f6
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/basketapi@sha256:cf6bfcaec94e12a3abc668244962629734f4f7ebe85959db911d5b0fe4ccce5d
          imagePullPolicy: Always
          name: basket-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"catalog-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"catalog-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:23Z
    generation: 1
    labels:
      app: catalog-api
      deploymentconfig: catalog-api
      pod-template-hash: 57bc8c8ff7
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5cf5706f-df5b-444b-abab-70d11efd6a8a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"catalog-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:31Z
    name: catalog-api-57bc8c8ff7
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: catalog-api
      uid: 5cf5706f-df5b-444b-abab-70d11efd6a8a
    resourceVersion: "118678029"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/catalog-api-57bc8c8ff7
    uid: 0d0bc585-22be-414b-9abd-fb519fa07393
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: catalog-api
        pod-template-hash: 57bc8c8ff7
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: catalog-api
          deploymentconfig: catalog-api
          pod-template-hash: 57bc8c8ff7
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/catalogapi@sha256:a83299383b3524d8b5f38cb853315d6c95f1d7edc61f78d88dcf50189b43378f
          imagePullPolicy: Always
          name: catalog-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"catalog-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"catalog-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:43:22Z
    generation: 2
    labels:
      app: catalog-api
      deploymentconfig: catalog-api
      pod-template-hash: b58d6d6c7
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5cf5706f-df5b-444b-abab-70d11efd6a8a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"catalog-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:43:31Z
    name: catalog-api-b58d6d6c7
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: catalog-api
      uid: 5cf5706f-df5b-444b-abab-70d11efd6a8a
    resourceVersion: "118678040"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/catalog-api-b58d6d6c7
    uid: d6f68d92-af2b-4c7c-8775-c515d14a10fb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: catalog-api
        pod-template-hash: b58d6d6c7
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: catalog-api
          deploymentconfig: catalog-api
          pod-template-hash: b58d6d6c7
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/catalog-api:latest
          imagePullPolicy: Always
          name: catalog-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:25:09Z
    generation: 1
    labels:
      app: discount-api
      deploymentconfig: discount-api
      pod-template-hash: 55bfcbf57d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4ddbfaa1-665d-4962-a891-99fe48acd4b3"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"discount-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:25:16Z
    name: discount-api-55bfcbf57d
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: discount-api
      uid: 4ddbfaa1-665d-4962-a891-99fe48acd4b3
    resourceVersion: "118008386"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/discount-api-55bfcbf57d
    uid: 318c2c59-e6ee-46ca-8f76-4d42650216a3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: discount-api
        pod-template-hash: 55bfcbf57d
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-api
          deploymentconfig: discount-api
          pod-template-hash: 55bfcbf57d
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/discountapi@sha256:4d35b856934d93a6c3a62310898c24a5849bf275a79497430a864214557e5183
          imagePullPolicy: Always
          name: discount-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:25:08Z
    generation: 2
    labels:
      app: discount-api
      deploymentconfig: discount-api
      pod-template-hash: 74958d6b4c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4ddbfaa1-665d-4962-a891-99fe48acd4b3"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"discount-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:25:16Z
    name: discount-api-74958d6b4c
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: discount-api
      uid: 4ddbfaa1-665d-4962-a891-99fe48acd4b3
    resourceVersion: "118008395"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/discount-api-74958d6b4c
    uid: 5765656f-04d8-4368-9b51-fb6ee76b6217
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: discount-api
        pod-template-hash: 74958d6b4c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-api
          deploymentconfig: discount-api
          pod-template-hash: 74958d6b4c
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/discount-api:latest
          imagePullPolicy: Always
          name: discount-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-grpc:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-grpc\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:31:01Z
    generation: 1
    labels:
      app: discount-grpc
      deploymentconfig: discount-grpc
      pod-template-hash: 685bf45dfb
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"30ea4838-0f28-49d3-890e-8c563d584cdc"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"discount-grpc"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8081,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:31:08Z
    name: discount-grpc-685bf45dfb
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: discount-grpc
      uid: 30ea4838-0f28-49d3-890e-8c563d584cdc
    resourceVersion: "118011919"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/discount-grpc-685bf45dfb
    uid: 378abea3-a6c1-4378-8910-006a5293b841
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: discount-grpc
        pod-template-hash: 685bf45dfb
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-grpc
          deploymentconfig: discount-grpc
          pod-template-hash: 685bf45dfb
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/discountgrpc@sha256:8c404b83e266f74737b9f27e22a857efe69ca15beda694153348c732d20f68ce
          imagePullPolicy: Always
          name: discount-grpc
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-grpc:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-grpc\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T23:31:00Z
    generation: 2
    labels:
      app: discount-grpc
      deploymentconfig: discount-grpc
      pod-template-hash: 6d74d47f8d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"30ea4838-0f28-49d3-890e-8c563d584cdc"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"discount-grpc"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8081,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T23:31:08Z
    name: discount-grpc-6d74d47f8d
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: discount-grpc
      uid: 30ea4838-0f28-49d3-890e-8c563d584cdc
    resourceVersion: "118011929"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/discount-grpc-6d74d47f8d
    uid: b2e5efb5-66c1-47dc-a55c-7bd0fa41e6b2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: discount-grpc
        pod-template-hash: 6d74d47f8d
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-grpc
          deploymentconfig: discount-grpc
          pod-template-hash: 6d74d47f8d
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/discount-grpc:latest
          imagePullPolicy: Always
          name: discount-grpc
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-07-05T13:50:51Z
    generation: 1
    labels:
      app: mssql
      pod-template-hash: 7b959d6cf6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2a00091a-e1bb-4ea6-8dde-f59a24651d0d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"mssql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ACCEPT_EULA"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":1443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mssql"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mssql-persistent-storage"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T13:51:18Z
    name: mssql-7b959d6cf6
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mssql
      uid: 2a00091a-e1bb-4ea6-8dde-f59a24651d0d
    resourceVersion: "117673970"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/mssql-7b959d6cf6
    uid: d80ea482-2b47-4ed5-8c18-196ee33cbd1a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mssql
        pod-template-hash: 7b959d6cf6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mssql
          pod-template-hash: 7b959d6cf6
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          envFrom:
          - secretRef:
              name: mssql
          image: mcr.microsoft.com/mssql/rhel/server:2019-latest
          imagePullPolicy: IfNotPresent
          name: mssql
          ports:
          - containerPort: 1443
            name: mssql
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mssql
            name: mssql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mssql-persistent-storage
          persistentVolumeClaim:
            claimName: mssql-pv-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ordering-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"ordering-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:59:15Z
    generation: 1
    labels:
      app: ordering-api
      deploymentconfig: ordering-api
      pod-template-hash: 5c5c985b67
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e0549f04-606b-4558-b05a-3b590f432d3e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T19:00:02Z
    name: ordering-api-5c5c985b67
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ordering-api
      uid: e0549f04-606b-4558-b05a-3b590f432d3e
    resourceVersion: "118687878"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/ordering-api-5c5c985b67
    uid: 2f382bad-f3c7-4bb9-b460-ec26bba67b29
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ordering-api
        pod-template-hash: 5c5c985b67
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ordering-api
          deploymentconfig: ordering-api
          pod-template-hash: 5c5c985b67
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/orderingapi@sha256:5345b469c8efb9e855946438bbe53ae7c7c954b438e5a88d8a4cd92362083ae1
          imagePullPolicy: Always
          name: ordering-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ordering-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"ordering-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:55:15Z
    generation: 2
    labels:
      app: ordering-api
      deploymentconfig: ordering-api
      pod-template-hash: 5d877456d5
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e0549f04-606b-4558-b05a-3b590f432d3e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:55:25Z
    name: ordering-api-5d877456d5
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ordering-api
      uid: e0549f04-606b-4558-b05a-3b590f432d3e
    resourceVersion: "118685189"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/ordering-api-5d877456d5
    uid: 310df19a-8100-41df-87ad-5e09c6f9eb78
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ordering-api
        pod-template-hash: 5d877456d5
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ordering-api
          deploymentconfig: ordering-api
          pod-template-hash: 5d877456d5
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/ordering-api:latest
          imagePullPolicy: Always
          name: ordering-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ordering-api:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"ordering-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-06T18:55:17Z
    generation: 3
    labels:
      app: ordering-api
      deploymentconfig: ordering-api
      pod-template-hash: 6759d9cbdb
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  f:env:
                    .: {}
                    k:{"name":"ASPNETCORE_ENVIRONMENT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:59:15Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e0549f04-606b-4558-b05a-3b590f432d3e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T18:59:20Z
    name: ordering-api-6759d9cbdb
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ordering-api
      uid: e0549f04-606b-4558-b05a-3b590f432d3e
    resourceVersion: "118687427"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/ordering-api-6759d9cbdb
    uid: bb6d4da8-516f-4775-a362-fe2c2fc9c41e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: ordering-api
        pod-template-hash: 6759d9cbdb
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ordering-api
          deploymentconfig: ordering-api
          pod-template-hash: 6759d9cbdb
      spec:
        containers:
        - env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Development
          image: yeskay.jfrog.io/skalavala/orderingapi@sha256:5345b469c8efb9e855946438bbe53ae7c7c954b438e5a88d8a4cd92362083ae1
          imagePullPolicy: Always
          name: ordering-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-07-05T13:59:11Z
    generation: 2
    labels:
      app: rabbitmq
      pod-template-hash: 66cf9764b9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"567ad80a-afc2-4043-a710-81e4efca8791"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"rabbitmq"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T13:06:32Z
    name: rabbitmq-66cf9764b9
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rabbitmq
      uid: 567ad80a-afc2-4043-a710-81e4efca8791
    resourceVersion: "118484232"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/rabbitmq-66cf9764b9
    uid: ae8aa7ba-fc75-411d-b6c4-178a5032a216
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: rabbitmq
        pod-template-hash: 66cf9764b9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rabbitmq
          pod-template-hash: 66cf9764b9
      spec:
        containers:
        - image: rabbitmq:3-management
          imagePullPolicy: IfNotPresent
          name: rabbitmq
          ports:
          - containerPort: 5672
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: 2021-07-06T13:06:12Z
    generation: 1
    labels:
      app: rabbitmq
      pod-template-hash: b7bb787cd
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"567ad80a-afc2-4043-a710-81e4efca8791"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"rabbitmq"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":15672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-06T13:06:32Z
    name: rabbitmq-b7bb787cd
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rabbitmq
      uid: 567ad80a-afc2-4043-a710-81e4efca8791
    resourceVersion: "118484219"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/rabbitmq-b7bb787cd
    uid: 5b84e050-fb39-454e-9dec-ed6cb90031ef
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: rabbitmq
        pod-template-hash: b7bb787cd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rabbitmq
          pod-template-hash: b7bb787cd
      spec:
        containers:
        - image: rabbitmq:3-management
          imagePullPolicy: IfNotPresent
          name: rabbitmq
          ports:
          - containerPort: 5672
            name: http
            protocol: TCP
          - containerPort: 15672
            name: mgmt-http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-07-05T14:30:58Z
    generation: 1
    labels:
      control-plane: redis-operator
      pod-template-hash: 5f8c98984d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:control-plane: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"feac51c6-75ff-44df-a0b9-eb2ce915aac2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:control-plane: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:alm-examples: {}
                f:capabilities: {}
                f:categories: {}
                f:certified: {}
                f:containerImage: {}
                f:createdAt: {}
                f:description: {}
                f:olm.operatorGroup: {}
                f:olm.operatorNamespace: {}
                f:olm.targetNamespaces: {}
                f:repository: {}
                f:support: {}
              f:labels:
                .: {}
                f:control-plane: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:31:14Z
    name: redis-operator-5f8c98984d
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-operator
      uid: feac51c6-75ff-44df-a0b9-eb2ce915aac2
    resourceVersion: "117694375"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/redis-operator-5f8c98984d
    uid: fac05203-5ecd-41e5-b73f-00f9d7cd0a41
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: redis-operator
        pod-template-hash: 5f8c98984d
    template:
      metadata:
        annotations:
          alm-examples: '[{"apiVersion":"redis.redis.opstreelabs.in/v1beta1","kind":"Redis","metadata":{"name":"redis"},"spec":{"mode":"cluster","size":3,"global":{"image":"quay.io/opstree/redis:v6.2","imagePullPolicy":"IfNotPresent","password":"Opstree@1234","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"master":{"service":{"type":"ClusterIP"},"redisConfig":{}},"slave":{"service":{"type":"ClusterIP"},"redisConfig":{}},"service":{"type":"ClusterIP"},"redisConfig":{},"redisExporter":{"enabled":true,"image":"quay.io/opstree/redis-exporter:1.0","imagePullPolicy":"Always","resources":{"requests":{"cpu":"100m","memory":"128Mi"},"limits":{"cpu":"100m","memory":"128Mi"}}},"storage":{"volumeClaimTemplate":{"spec":{"storageClassName":"buildpiper-storage","accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}}}}]'
          capabilities: Seamless Upgrades
          categories: Database, Storage
          certified: "false"
          containerImage: quay.io/opstree/redis-operator:v0.5.0
          createdAt: 03-05-2021
          description: A Golang based redis operator that will make/oversee Redis
            standalone/cluster mode setup on top of the Kubernetes.
          olm.operatorGroup: asprun-pkj8k
          olm.operatorNamespace: asprun
          olm.targetNamespaces: asprun
          repository: https://github.com/ot-container-kit/redis-operator
          support: ""
        creationTimestamp: null
        labels:
          control-plane: redis-operator
          pod-template-hash: 5f8c98984d
      spec:
        containers:
        - args:
          - --leader-elect
          command:
          - /manager
          image: quay.io/opstree/redis-operator:v0.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsUser: 65532
        serviceAccount: redis-operator
        serviceAccountName: redis-operator
        terminationGracePeriodSeconds: 10
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"shopping-aggregator:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"shopping-aggregator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:21:05Z
    generation: 1
    labels:
      app: shopping-aggregator
      deploymentconfig: shopping-aggregator
      pod-template-hash: 674c796668
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e3277729-1fb5-4fc2-92a0-0234f7f000c8"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"shopping-aggregator"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:21:12Z
    name: shopping-aggregator-674c796668
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shopping-aggregator
      uid: e3277729-1fb5-4fc2-92a0-0234f7f000c8
    resourceVersion: "117724442"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/shopping-aggregator-674c796668
    uid: 467bd582-db93-47ce-b3d6-28d9673ee772
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: shopping-aggregator
        pod-template-hash: 674c796668
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: shopping-aggregator
          deploymentconfig: shopping-aggregator
          pod-template-hash: 674c796668
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/shoppingaggregator@sha256:0587fe7a727dff04d9d9f144535d79368f741cd96fc5372947ad39a5d070375f
          imagePullPolicy: Always
          name: shopping-aggregator
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"shopping-aggregator:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"shopping-aggregator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:21:04Z
    generation: 2
    labels:
      app: shopping-aggregator
      deploymentconfig: shopping-aggregator
      pod-template-hash: 87585445c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e3277729-1fb5-4fc2-92a0-0234f7f000c8"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"shopping-aggregator"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:21:12Z
    name: shopping-aggregator-87585445c
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shopping-aggregator
      uid: e3277729-1fb5-4fc2-92a0-0234f7f000c8
    resourceVersion: "117724452"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/shopping-aggregator-87585445c
    uid: d3027b05-4e6a-49d4-8f09-9e1d9b2e4ff8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shopping-aggregator
        pod-template-hash: 87585445c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: shopping-aggregator
          deploymentconfig: shopping-aggregator
          pod-template-hash: 87585445c
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/shopping-aggregator:latest
          imagePullPolicy: Always
          name: shopping-aggregator
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"webstatus:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"webstatus\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:14:26Z
    generation: 1
    labels:
      app: webstatus
      deploymentconfig: webstatus
      pod-template-hash: 54675b7c4f
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"102b1630-90d8-404e-a058-aee144cf214d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"webstatus"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:14:36Z
    name: webstatus-54675b7c4f
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: webstatus
      uid: 102b1630-90d8-404e-a058-aee144cf214d
    resourceVersion: "117720199"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/webstatus-54675b7c4f
    uid: 7111fe06-96d4-4213-bc0c-0e09c5dcea0b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: webstatus
        pod-template-hash: 54675b7c4f
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: webstatus
          deploymentconfig: webstatus
          pod-template-hash: 54675b7c4f
      spec:
        containers:
        - image: yeskay.jfrog.io/skalavala/webstatus@sha256:01bf140c431f2b7b94efb23af8c228e3afc4cd804895fc465e74750f407174d8
          imagePullPolicy: Always
          name: webstatus
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"webstatus:latest","namespace":"asprun"},"fieldPath":"spec.template.spec.containers[?(@.name==\"webstatus\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-07-05T15:14:25Z
    generation: 2
    labels:
      app: webstatus
      deploymentconfig: webstatus
      pod-template-hash: 5f9fdb859c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"102b1630-90d8-404e-a058-aee144cf214d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"webstatus"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T15:14:36Z
    name: webstatus-5f9fdb859c
    namespace: asprun
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: webstatus
      uid: 102b1630-90d8-404e-a058-aee144cf214d
    resourceVersion: "117720209"
    selfLink: /apis/apps/v1/namespaces/asprun/replicasets/webstatus-5f9fdb859c
    uid: 1b3b56f3-92cf-443f-9144-3f5e5e2b78de
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: webstatus
        pod-template-hash: 5f9fdb859c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: webstatus
          deploymentconfig: webstatus
          pod-template-hash: 5f9fdb859c
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/asprun/webstatus:latest
          imagePullPolicy: Always
          name: webstatus
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
      redis.opstreelabs.in: "true"
    creationTimestamp: 2021-07-05T14:45:33Z
    generation: 1
    labels:
      app: redis-server-master
      role: master
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:redis.opstreelabs.in: {}
          f:labels:
            .: {}
            f:app: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e9352f3b-fb34-4f02-86c6-32a9614c0091"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:role: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:role: {}
            f:spec:
              f:containers:
                k:{"name":"redis-exporter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"REDIS_ADDR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                k:{"name":"redis-server-master"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"PERSISTENCE_ENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"SERVER_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SETUP_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
          f:volumeClaimTemplates: {}
      manager: manager
      operation: Update
      time: 2021-07-05T14:45:45Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentReplicas: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:55:27Z
    name: redis-server-master
    namespace: asprun
    ownerReferences:
    - apiVersion: redis.redis.opstreelabs.in/v1beta1
      controller: true
      kind: Redis
      name: redis-server
      uid: e9352f3b-fb34-4f02-86c6-32a9614c0091
    resourceVersion: "117709167"
    selfLink: /apis/apps/v1/namespaces/asprun/statefulsets/redis-server-master
    uid: 5adfd8fd-e227-4bec-a6e2-5c8484022d50
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis-server-master
        role: master
    serviceName: redis-server-master
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-server-master
          role: master
      spec:
        containers:
        - env:
          - name: SERVER_MODE
            value: master
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: redis-server
          - name: SETUP_MODE
            value: cluster
          - name: PERSISTENCE_ENABLED
            value: "true"
          image: quay.io/opstree/redis:v6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - bash
              - /usr/bin/healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: redis-server-master
          readinessProbe:
            exec:
              command:
              - bash
              - /usr/bin/healthcheck.sh
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-server-master
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: redis-server
          - name: REDIS_ADDR
            value: redis://localhost:6379
          image: quay.io/opstree/redis-exporter:1.0
          imagePullPolicy: Always
          name: redis-exporter
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: redis-server-master
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: buildpiper-storage
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 3
    currentRevision: redis-server-master-5f845dcc4f
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: redis-server-master-5f845dcc4f
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
      redis.opstreelabs.in: "true"
    creationTimestamp: 2021-07-05T14:45:33Z
    generation: 1
    labels:
      app: redis-server-slave
      role: slave
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
            f:redis.opstreelabs.in: {}
          f:labels:
            .: {}
            f:app: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e9352f3b-fb34-4f02-86c6-32a9614c0091"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:role: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:role: {}
            f:spec:
              f:containers:
                k:{"name":"redis-exporter"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"REDIS_ADDR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                k:{"name":"redis-server-slave"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"PERSISTENCE_ENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"SERVER_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SETUP_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
          f:volumeClaimTemplates: {}
      manager: manager
      operation: Update
      time: 2021-07-05T14:45:45Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentReplicas: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-07-05T14:55:21Z
    name: redis-server-slave
    namespace: asprun
    ownerReferences:
    - apiVersion: redis.redis.opstreelabs.in/v1beta1
      controller: true
      kind: Redis
      name: redis-server
      uid: e9352f3b-fb34-4f02-86c6-32a9614c0091
    resourceVersion: "117709110"
    selfLink: /apis/apps/v1/namespaces/asprun/statefulsets/redis-server-slave
    uid: 25b8bd24-c373-42ab-bd66-108a019856fe
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis-server-slave
        role: slave
    serviceName: redis-server-slave
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-server-slave
          role: slave
      spec:
        containers:
        - env:
          - name: SERVER_MODE
            value: slave
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: redis-server
          - name: SETUP_MODE
            value: cluster
          - name: PERSISTENCE_ENABLED
            value: "true"
          image: quay.io/opstree/redis:v6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - bash
              - /usr/bin/healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: redis-server-slave
          readinessProbe:
            exec:
              command:
              - bash
              - /usr/bin/healthcheck.sh
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-server-slave
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: redis-server
          - name: REDIS_ADDR
            value: redis://localhost:6379
          image: quay.io/opstree/redis-exporter:1.0
          imagePullPolicy: Always
          name: redis-exporter
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: redis-server-slave
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: buildpiper-storage
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 3
    currentRevision: redis-server-slave-59d7f785c8
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: redis-server-slave-59d7f785c8
    updatedReplicas: 3
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: 2021-07-05T13:37:07Z
    generation: 2
    labels:
      app.kubernetes.io/part-of: infrastructure
      template: mongodb-persistent-template
      template.openshift.io/template-instance-owner: a765abd3-98bf-4be6-8379-1780478dbdaa
    managedFields:
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.alpha.openshift.io/wait-for-ready: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:name: {}
          f:strategy:
            f:activeDeadlineSeconds: {}
            f:recreateParams:
              .: {}
              f:timeoutSeconds: {}
            f:type: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"MONGODB_ADMIN_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mongodb/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mongodb-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
          f:triggers: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:details:
            .: {}
            f:causes: {}
            f:message: {}
          f:latestVersion: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:38:54Z
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/part-of: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T14:03:58Z
    name: mongodb
    namespace: asprun
    resourceVersion: "117680349"
    selfLink: /apis/apps.openshift.io/v1/namespaces/asprun/deploymentconfigs/mongodb
    uid: a9524d9e-6624-4a05-a57f-ef2006c84405
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: mongodb
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mongodb
          image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.6
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:a3023c59828fb861128fbaed319bf1b2c3b57a4633be2d2d79b0a34c2ff41c79
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T13:38:54Z
      lastUpdateTime: 2021-07-05T13:38:54Z
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T13:38:54Z
      lastUpdateTime: 2021-07-05T13:38:54Z
      message: replication controller "mongodb-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: 2021-07-05T13:36:02Z
    generation: 2
    labels:
      app.kubernetes.io/part-of: infrastructure
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: 310523c9-f259-4445-824e-c59947a9eff5
    managedFields:
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.alpha.openshift.io/wait-for-ready: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:name: {}
          f:strategy:
            f:activeDeadlineSeconds: {}
            f:recreateParams:
              .: {}
              f:timeoutSeconds: {}
            f:type: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"postgresql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"POSTGRESQL_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/pgsql/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"postgresql-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
          f:triggers: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:details:
            .: {}
            f:causes: {}
            f:message: {}
          f:latestVersion: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-07-05T13:37:36Z
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/part-of: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T14:04:04Z
    name: postgresql
    namespace: asprun
    resourceVersion: "117680396"
    selfLink: /apis/apps.openshift.io/v1/namespaces/asprun/deploymentconfigs/postgresql
    uid: 8cf8b87a-b31a-45fe-8c5e-6f6c951a04cd
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:10
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:fda379b18033c7122f60b81760396f4c8c3009cfcad5c5028474f478b40d2647
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-07-05T13:37:35Z
      lastUpdateTime: 2021-07-05T13:37:35Z
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: 2021-07-05T13:36:06Z
      lastUpdateTime: 2021-07-05T13:37:36Z
      message: replication controller "postgresql-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-05T15:19:21Z
    creationTimestamp: 2021-07-05T15:19:20Z
    generation: 2
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: shopping
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:19:20Z
    name: aspnetrunbasics
    namespace: asprun
    resourceVersion: "117723107"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/aspnetrunbasics
    uid: 436d0585-3578-4e54-8b52-d20a6600e795
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/aspnetrunbasics:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/aspnetrunbasics:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/aspnetrunbasics
    tags:
    - items:
      - created: 2021-07-05T15:19:21Z
        dockerImageReference: yeskay.jfrog.io/skalavala/aspnetrunbasics@sha256:78d984af13a4a32b22a4253d5300c1d1142cb98bba2d20eba315faa4d03438b2
        generation: 2
        image: sha256:78d984af13a4a32b22a4253d5300c1d1142cb98bba2d20eba315faa4d03438b2
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-06T01:04:21Z
    creationTimestamp: 2021-07-06T01:04:20Z
    generation: 2
    labels:
      app: asprunbasics-gw
      app.kubernetes.io/component: asprunbasics-gw
      app.kubernetes.io/instance: asprunbasics-gw
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T01:04:20Z
    name: asprunbasics-gw
    namespace: asprun
    resourceVersion: "118065958"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/asprunbasics-gw
    uid: ed68e387-e479-4206-ac1f-350774f7859b
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/ocelotapigw:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/ocelotapigw:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/asprunbasics-gw
    tags:
    - items:
      - created: 2021-07-06T01:04:21Z
        dockerImageReference: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:a5ab784d2f524bfd058ec182d5d08433400f4c074b44835a8820af4f4f589364
        generation: 2
        image: sha256:a5ab784d2f524bfd058ec182d5d08433400f4c074b44835a8820af4f4f589364
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-06T18:43:41Z
    creationTimestamp: 2021-07-06T18:43:40Z
    generation: 2
    labels:
      app: basket-api
      app.kubernetes.io/component: basket-api
      app.kubernetes.io/instance: basket-api
      app.kubernetes.io/part-of: shopping
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:43:40Z
    name: basket-api
    namespace: asprun
    resourceVersion: "118678225"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/basket-api
    uid: 6bf3b9e6-3bf2-47b5-b8cb-2fab0cad9532
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/basketapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/basketapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/basket-api
    tags:
    - items:
      - created: 2021-07-06T18:43:41Z
        dockerImageReference: yeskay.jfrog.io/skalavala/basketapi@sha256:cf6bfcaec94e12a3abc668244962629734f4f7ebe85959db911d5b0fe4ccce5d
        generation: 2
        image: sha256:cf6bfcaec94e12a3abc668244962629734f4f7ebe85959db911d5b0fe4ccce5d
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-06T18:43:23Z
    creationTimestamp: 2021-07-06T18:43:22Z
    generation: 2
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: shopping
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:43:22Z
    name: catalog-api
    namespace: asprun
    resourceVersion: "118677922"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/catalog-api
    uid: 3c4bf834-e945-4fb6-bc7f-af380c5c5b91
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/catalogapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/catalogapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/catalog-api
    tags:
    - items:
      - created: 2021-07-06T18:43:23Z
        dockerImageReference: yeskay.jfrog.io/skalavala/catalogapi@sha256:a83299383b3524d8b5f38cb853315d6c95f1d7edc61f78d88dcf50189b43378f
        generation: 2
        image: sha256:a83299383b3524d8b5f38cb853315d6c95f1d7edc61f78d88dcf50189b43378f
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-05T23:25:08Z
    creationTimestamp: 2021-07-05T23:25:07Z
    generation: 2
    labels:
      app: discount-api
      app.kubernetes.io/component: discount-api
      app.kubernetes.io/instance: discount-api
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T23:25:07Z
    name: discount-api
    namespace: asprun
    resourceVersion: "118008268"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/discount-api
    uid: a8909ebd-d4b1-4f4b-a810-7d79c01c7b74
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/discountapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/discountapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/discount-api
    tags:
    - items:
      - created: 2021-07-05T23:25:08Z
        dockerImageReference: yeskay.jfrog.io/skalavala/discountapi@sha256:4d35b856934d93a6c3a62310898c24a5849bf275a79497430a864214557e5183
        generation: 2
        image: sha256:4d35b856934d93a6c3a62310898c24a5849bf275a79497430a864214557e5183
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-05T23:31:00Z
    creationTimestamp: 2021-07-05T23:30:59Z
    generation: 2
    labels:
      app: discount-grpc
      app.kubernetes.io/component: discount-grpc
      app.kubernetes.io/instance: discount-grpc
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T23:30:59Z
    name: discount-grpc
    namespace: asprun
    resourceVersion: "118011816"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/discount-grpc
    uid: ad3055e3-c997-428f-ae8b-b1f02a0123e5
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/discountgrpc:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/discountgrpc:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/discount-grpc
    tags:
    - items:
      - created: 2021-07-05T23:31:00Z
        dockerImageReference: yeskay.jfrog.io/skalavala/discountgrpc@sha256:8c404b83e266f74737b9f27e22a857efe69ca15beda694153348c732d20f68ce
        generation: 2
        image: sha256:8c404b83e266f74737b9f27e22a857efe69ca15beda694153348c732d20f68ce
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-05T15:28:02Z
    creationTimestamp: 2021-07-05T15:28:01Z
    generation: 2
    labels:
      app: network-multitool
      app.kubernetes.io/component: network-multitool
      app.kubernetes.io/instance: network-multitool
      app.kubernetes.io/part-of: infrastructure
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:28:01Z
    name: network-multitool
    namespace: asprun
    resourceVersion: "117728961"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/network-multitool
    uid: be4cde57-2026-4fa4-abb5-d410abff8eff
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: praqma/network-multitool
      from:
        kind: DockerImage
        name: praqma/network-multitool
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/network-multitool
    tags:
    - items:
      - created: 2021-07-05T15:28:02Z
        dockerImageReference: praqma/network-multitool@sha256:af0bc29d069b2fc4135fbf36edd067373e41e3e4e878b300cca29e41e621124c
        generation: 2
        image: sha256:af0bc29d069b2fc4135fbf36edd067373e41e3e4e878b300cca29e41e621124c
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-06T18:55:16Z
    creationTimestamp: 2021-07-06T18:55:15Z
    generation: 2
    labels:
      app: ordering-api
      app.kubernetes.io/component: ordering-api
      app.kubernetes.io/instance: ordering-api
      app.kubernetes.io/part-of: shopping
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T18:55:15Z
    name: ordering-api
    namespace: asprun
    resourceVersion: "118685063"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/ordering-api
    uid: b9bf7b37-f86a-4cb4-a35d-55ea681c23b8
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/orderingapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/orderingapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/ordering-api
    tags:
    - items:
      - created: 2021-07-06T18:55:16Z
        dockerImageReference: yeskay.jfrog.io/skalavala/orderingapi@sha256:5345b469c8efb9e855946438bbe53ae7c7c954b438e5a88d8a4cd92362083ae1
        generation: 2
        image: sha256:5345b469c8efb9e855946438bbe53ae7c7c954b438e5a88d8a4cd92362083ae1
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-05T15:21:04Z
    creationTimestamp: 2021-07-05T15:21:03Z
    generation: 2
    labels:
      app: shopping-aggregator
      app.kubernetes.io/component: shopping-aggregator
      app.kubernetes.io/instance: shopping-aggregator
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:21:03Z
    name: shopping-aggregator
    namespace: asprun
    resourceVersion: "117724331"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/shopping-aggregator
    uid: 0d377329-0c25-4d14-b218-a939e5640006
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/shoppingaggregator:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/shoppingaggregator:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/shopping-aggregator
    tags:
    - items:
      - created: 2021-07-05T15:21:04Z
        dockerImageReference: yeskay.jfrog.io/skalavala/shoppingaggregator@sha256:0587fe7a727dff04d9d9f144535d79368f741cd96fc5372947ad39a5d070375f
        generation: 2
        image: sha256:0587fe7a727dff04d9d9f144535d79368f741cd96fc5372947ad39a5d070375f
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-07-05T15:14:26Z
    creationTimestamp: 2021-07-05T15:14:25Z
    generation: 2
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: shopping
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:14:25Z
    name: webstatus
    namespace: asprun
    resourceVersion: "117720077"
    selfLink: /apis/image.openshift.io/v1/namespaces/asprun/imagestreams/webstatus
    uid: a8050bc4-46ff-458f-80a9-93a36bb7126d
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/webstatus:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/webstatus:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/asprun/webstatus
    tags:
    - items:
      - created: 2021-07-05T15:14:26Z
        dockerImageReference: yeskay.jfrog.io/skalavala/webstatus@sha256:01bf140c431f2b7b94efb23af8c228e3afc4cd804895fc465e74750f407174d8
        generation: 2
        image: sha256:01bf140c431f2b7b94efb23af8c228e3afc4cd804895fc465e74750f407174d8
      tag: latest
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: 2021-07-05T14:07:06Z
    labels:
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: 310523c9-f259-4445-824e-c59947a9eff5
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T14:07:06Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-07-05T14:07:07Z
    name: asprun-postgres
    namespace: asprun
    resourceVersion: "117681952"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/asprun-postgres
    uid: 527df2cd-0fb1-4467-936b-092a526c6da4
  spec:
    host: asprun-postgres.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: postgresql
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: postgresql
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-07-05T14:07:07Z
        status: "True"
        type: Admitted
      host: asprun-postgres.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2021-07-06T00:08:33Z
    labels:
      app: rabbitmq
      app.kubernetes.io/managed-by: Helm
      chart: rabbitmq-0.1.0
      heritage: Helm
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-07-06T00:08:33Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
            f:heritage: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-06T13:14:40Z
    name: asprun-rabbitmq
    namespace: asprun
    resourceVersion: "118488801"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/asprun-rabbitmq
    uid: c36dd9c0-10f2-4f37-88f4-aab4e38f0cf6
  spec:
    host: asprun-rabbitmq-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: mgmt-http
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: rabbitmq
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-07-06T00:08:33Z
        status: "True"
        type: Admitted
      host: asprun-rabbitmq-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2021-07-05T15:32:53Z
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T15:32:53Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-07-05T15:32:54Z
    name: asprunbasics
    namespace: asprun
    resourceVersion: "117731950"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/asprunbasics
    uid: d4aa1dbf-3077-4cc4-8407-af47c429838a
  spec:
    host: asprunbasics-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: aspnetrunbasics
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-07-05T15:32:54Z
        status: "True"
        type: Admitted
      host: asprunbasics-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2021-07-05T16:24:41Z
    labels:
      app: asprunbasics-gw
      app.kubernetes.io/component: asprunbasics-gw
      app.kubernetes.io/instance: asprunbasics-gw
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T16:24:41Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-07-05T16:24:41Z
    name: asprunbasics-gw
    namespace: asprun
    resourceVersion: "117762599"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/asprunbasics-gw
    uid: c73c5c7c-6dc6-443d-a01e-86909a762f09
  spec:
    host: asprunbasics-gw-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: asprunbasics-gw
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-07-05T16:24:41Z
        status: "True"
        type: Admitted
      host: asprunbasics-gw-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: 2021-06-24T00:21:56Z
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T00:21:56Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-06-24T00:21:57Z
    name: catalog-api
    namespace: asprun
    resourceVersion: "109142959"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/catalog-api
    uid: c23f2242-758b-4287-b76e-c20d24284d54
  spec:
    host: asprun-catalog-api.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: catalog-api
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-06-24T00:21:57Z
        status: "True"
        type: Admitted
      host: asprun-catalog-api.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2021-07-05T23:13:38Z
    labels:
      app: discount-api
      app.kubernetes.io/component: discount-api
      app.kubernetes.io/instance: discount-api
      app.kubernetes.io/part-of: shopping
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T23:13:38Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-07-05T23:13:38Z
    name: discount-api
    namespace: asprun
    resourceVersion: "118001461"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/discount-api
    uid: 0f82b093-4e9e-4229-81a6-b349ee4e2a87
  spec:
    host: discount-api-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: discount-api
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-07-05T23:13:38Z
        status: "True"
        type: Admitted
      host: discount-api-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2021-07-05T16:12:18Z
    labels:
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: 310523c9-f259-4445-824e-c59947a9eff5
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-07-05T16:12:18Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-07-05T16:12:19Z
    name: postgres
    namespace: asprun
    resourceVersion: "117755122"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/postgres
    uid: d47661a1-d9d3-45ab-9c9c-a6ae033b423d
  spec:
    host: postgres-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: postgresql
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: postgresql
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-07-05T16:12:19Z
        status: "True"
        type: Admitted
      host: postgres-asprun.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: 2021-06-23T23:33:26Z
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: webstatus
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-23T23:33:26Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-06-23T23:33:27Z
    name: webstatus
    namespace: asprun
    resourceVersion: "109117196"
    selfLink: /apis/route.openshift.io/v1/namespaces/asprun/routes/webstatus
    uid: 3a9bc9c5-ac04-4ea4-9572-9b3a88bc9bd0
  spec:
    host: asprun-status.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: webstatus
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-06-23T23:33:27Z
        status: "True"
        type: Admitted
      host: asprun-status.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerCanonicalHostname: hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: cdi.kubevirt.io/v1alpha1
  kind: CDIConfig
  metadata:
    creationTimestamp: 2021-03-30T21:27:35Z
    generation: 3
    labels:
      app: containerized-data-importer
      cdi.kubevirt.io: ""
    managedFields:
    - apiVersion: cdi.kubevirt.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:cdi.kubevirt.io: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5457111d-a9a4-42e9-91a7-e4db36916df4"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec: {}
        f:status:
          .: {}
          f:defaultPodResourceRequirements:
            .: {}
            f:limits:
              .: {}
              f:cpu: {}
              f:memory: {}
            f:requests:
              .: {}
              f:cpu: {}
              f:memory: {}
          f:scratchSpaceStorageClass: {}
          f:uploadProxyURL: {}
      manager: virt-cdi-controller
      operation: Update
      time: 2021-03-30T21:27:36Z
    name: config
    namespace: ""
    ownerReferences:
    - apiVersion: cdi.kubevirt.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: CDI
      name: cdi-kubevirt-hyperconverged
      uid: 5457111d-a9a4-42e9-91a7-e4db36916df4
    resourceVersion: "54152396"
    selfLink: /apis/cdi.kubevirt.io/v1alpha1/cdiconfigs/config
    uid: ccfc71d9-6ee7-483d-884b-fea18aaa4447
  spec: {}
  status:
    defaultPodResourceRequirements:
      limits:
        cpu: "0"
        memory: "0"
      requests:
        cpu: "0"
        memory: "0"
    scratchSpaceStorageClass: ibmc-block-gold
    uploadProxyURL: cdi-uploadproxy-openshift-cnv.hmcores-ms-tech-1606868-f72ef11f3ab089a8c677044eb28292cd-0000.sjc03.containers.appdomain.cloud
- apiVersion: cdi.kubevirt.io/v1alpha1
  kind: CDI
  metadata:
    creationTimestamp: 2021-03-30T21:27:00Z
    finalizers:
    - operator.cdi.kubevirt.io
    generation: 33
    labels:
      app: kubevirt-hyperconverged
    managedFields:
    - apiVersion: cdi.kubevirt.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          .: {}
          f:uninstallStrategy: {}
        f:status: {}
      manager: hyperconverged-cluster-operator
      operation: Update
      time: 2021-03-30T21:27:00Z
    - apiVersion: cdi.kubevirt.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"operator.cdi.kubevirt.io": {}
        f:status:
          f:conditions: {}
          f:observedVersion: {}
          f:operatorVersion: {}
          f:phase: {}
          f:targetVersion: {}
      manager: virt-cdi-operator
      operation: Update
      time: 2021-06-15T17:37:20Z
    name: cdi-kubevirt-hyperconverged
    namespace: ""
    resourceVersion: "102992326"
    selfLink: /apis/cdi.kubevirt.io/v1alpha1/cdis/cdi-kubevirt-hyperconverged
    uid: 5457111d-a9a4-42e9-91a7-e4db36916df4
  spec:
    uninstallStrategy: BlockUninstallIfWorkloadsExist
  status:
    conditions:
    - lastHeartbeatTime: 2021-06-15T17:37:20Z
      lastTransitionTime: 2021-03-30T21:27:44Z
      message: Deployment Completed
      reason: DeployCompleted
      status: "True"
      type: Available
    - lastHeartbeatTime: 2021-06-15T17:37:20Z
      lastTransitionTime: 2021-06-15T17:37:20Z
      status: "False"
      type: Progressing
    - lastHeartbeatTime: 2021-06-15T17:37:20Z
      lastTransitionTime: 2021-06-15T17:36:54Z
      status: "False"
      type: Degraded
    observedVersion: v2.4.9
    operatorVersion: v2.4.9
    phase: Deployed
    targetVersion: v2.4.9
- apiVersion: v2v.kubevirt.io/v1alpha1
  kind: VMImportConfig
  metadata:
    creationTimestamp: 2021-07-02T12:10:11Z
    generation: 1
    labels:
      app: kubevirt-hyperconverged
    managedFields:
    - apiVersion: v2v.kubevirt.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5d269a3d-e39c-4200-a71b-a446b9d9bbce"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec: {}
      manager: hyperconverged-cluster-operator
      operation: Update
      time: 2021-07-02T12:10:11Z
    - apiVersion: v2v.kubevirt.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:conditions: {}
          f:observedVersion: {}
          f:operatorVersion: {}
          f:phase: {}
          f:targetVersion: {}
      manager: vm-import-operator
      operation: Update
      time: 2021-07-02T12:10:19Z
    name: vmimport-kubevirt-hyperconverged
    namespace: ""
    ownerReferences:
    - apiVersion: hco.kubevirt.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: HyperConverged
      name: kubevirt-hyperconverged
      uid: 5d269a3d-e39c-4200-a71b-a446b9d9bbce
    resourceVersion: "115436222"
    selfLink: /apis/v2v.kubevirt.io/v1alpha1/vmimportconfigs/vmimport-kubevirt-hyperconverged
    uid: 35012c15-e3c0-4ca8-8195-4c83d694080b
  spec: {}
  status:
    conditions:
    - lastHeartbeatTime: 2021-07-02T12:10:19Z
      lastTransitionTime: 2021-07-02T12:10:19Z
      status: "False"
      type: Degraded
    - lastHeartbeatTime: 2021-07-02T12:10:12Z
      lastTransitionTime: 2021-07-02T12:10:12Z
      message: Deployment Completed
      reason: DeployCompleted
      status: "True"
      type: Available
    - lastHeartbeatTime: 2021-07-02T12:10:12Z
      lastTransitionTime: 2021-07-02T12:10:12Z
      status: "False"
      type: Progressing
    observedVersion: v2.4.9
    operatorVersion: v2.4.9
    phase: Deployed
    targetVersion: v2.4.9
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
