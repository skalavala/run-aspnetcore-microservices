apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.180.3/32
      cni.projectcalico.org/podIPs: 172.30.180.3/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.3"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.3"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-24T15:48:30Z
    generateName: aspnetrunbasics-64dcc6bf8c-
    labels:
      app: aspnetrunbasics
      deploymentconfig: aspnetrunbasics
      pod-template-hash: 64dcc6bf8c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"18a867d4-ff13-4334-9a6a-24bc0503f08e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"aspnetrunbasics"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-24T15:48:30Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-24T15:48:32Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-24T15:48:32Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.180.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-24T15:48:36Z
    name: aspnetrunbasics-64dcc6bf8c-mbhkc
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: aspnetrunbasics-64dcc6bf8c
      uid: 18a867d4-ff13-4334-9a6a-24bc0503f08e
    resourceVersion: "372937167"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/aspnetrunbasics-64dcc6bf8c-mbhkc
    uid: 4397f2d4-8310-4eff-ab4c-9b9a82f47c47
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/aspnetrunbasics@sha256:9f346e71341faacf0f30e930a13d1535f013ada48812a84a522606f8ecf03bf4
      imagePullPolicy: Always
      name: aspnetrunbasics
      ports:
      - containerPort: 443
        protocol: TCP
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.205
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-24T15:48:30Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-24T15:48:36Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-24T15:48:36Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-24T15:48:30Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f60d155e20fd74c848666e512c34de7c7ce947c1f95a965394168042356a7f8b
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/aspnetrunbasics@sha256:9f346e71341faacf0f30e930a13d1535f013ada48812a84a522606f8ecf03bf4
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/aspnetrunbasics@sha256:9f346e71341faacf0f30e930a13d1535f013ada48812a84a522606f8ecf03bf4
      lastState: {}
      name: aspnetrunbasics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-24T15:48:35Z
    hostIP: 10.221.166.205
    phase: Running
    podIP: 172.30.180.3
    podIPs:
    - ip: 172.30.180.3
    qosClass: BestEffort
    startTime: 2021-06-24T15:48:30Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.180.29/32
      cni.projectcalico.org/podIPs: 172.30.180.29/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.29"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.29"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T15:25:59Z
    generateName: asprunbasics-gw-68875f8487-
    labels:
      app: asprunbasics-gw
      deploymentconfig: asprunbasics-gw
      pod-template-hash: 68875f8487
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ac58a0fd-a1dd-4bfc-8e85-58157a4431f9"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"asprunbasics-gw"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:25:59Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T15:26:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T15:26:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.180.29"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T15:26:06Z
    name: asprunbasics-gw-68875f8487-98wgl
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: asprunbasics-gw-68875f8487
      uid: ac58a0fd-a1dd-4bfc-8e85-58157a4431f9
    resourceVersion: "377626940"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/asprunbasics-gw-68875f8487-98wgl
    uid: 6f718e78-27cd-4100-be5d-2a6c88306f40
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/asprunbasics-gw@sha256:fc25c90c8a2091c2fccbb9a99ca1b2729e1b3b5d20668f975dd1101f2c938729
      imagePullPolicy: Always
      name: asprunbasics-gw
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.205
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:25:59Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:26:06Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:26:06Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:25:59Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://efd18859d534e28536eb605c811b64cf28461619afe93b2c4f9eed1728f04507
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/asprunbasics-gw@sha256:fc25c90c8a2091c2fccbb9a99ca1b2729e1b3b5d20668f975dd1101f2c938729
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/asprunbasics-gw@sha256:fc25c90c8a2091c2fccbb9a99ca1b2729e1b3b5d20668f975dd1101f2c938729
      lastState: {}
      name: asprunbasics-gw
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T15:26:05Z
    hostIP: 10.221.166.205
    phase: Running
    podIP: 172.30.180.29
    podIPs:
    - ip: 172.30.180.29
    qosClass: BestEffort
    startTime: 2021-06-29T15:25:59Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.125.243/32
      cni.projectcalico.org/podIPs: 172.30.125.243/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.243"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.243"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:04:50Z
    generateName: basket-api-6db86b8cd6-
    labels:
      app: basket-api
      deploymentconfig: basket-api
      pod-template-hash: 6db86b8cd6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0398b760-7f6b-4e50-bd36-b19b47866cfe"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"basket-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:04:50Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:04:53Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:04:53Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.243"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:04:56Z
    name: basket-api-6db86b8cd6-j66nk
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: basket-api-6db86b8cd6
      uid: 0398b760-7f6b-4e50-bd36-b19b47866cfe
    resourceVersion: "377647868"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/basket-api-6db86b8cd6-j66nk
    uid: 11dc098f-82b5-41e4-8759-f59aec3491c7
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/basket-api@sha256:ee05a9e7c7f1b2b0d8e1e5bc8f5ad4a99b1a9185ea38359fc13e4bbbfdb9425c
      imagePullPolicy: Always
      name: basket-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:04:50Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:04:56Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:04:56Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:04:50Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://106de760618a776270e3e0adf3ac37273103c7dfa02e38280da68a1b9b81ef2f
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/basket-api@sha256:ee05a9e7c7f1b2b0d8e1e5bc8f5ad4a99b1a9185ea38359fc13e4bbbfdb9425c
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/basket-api@sha256:ee05a9e7c7f1b2b0d8e1e5bc8f5ad4a99b1a9185ea38359fc13e4bbbfdb9425c
      lastState: {}
      name: basket-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T16:04:56Z
    hostIP: 10.221.166.201
    phase: Running
    podIP: 172.30.125.243
    podIPs:
    - ip: 172.30.125.243
    qosClass: BestEffort
    startTime: 2021-06-29T16:04:50Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.125.248/32
      cni.projectcalico.org/podIPs: 172.30.125.248/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.248"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.248"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T15:43:25Z
    generateName: catalog-api-dc7644c94-
    labels:
      app: catalog-api
      deploymentconfig: catalog-api
      pod-template-hash: dc7644c94
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f2d6d888-ae26-4e34-9716-0c9da37984ad"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"catalog-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:43:25Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T15:43:26Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.248"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T15:43:27Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T15:43:27Z
    name: catalog-api-dc7644c94-b5gdv
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: catalog-api-dc7644c94
      uid: f2d6d888-ae26-4e34-9716-0c9da37984ad
    resourceVersion: "377636375"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/catalog-api-dc7644c94-b5gdv
    uid: 31314a6e-eabe-4059-b1d4-b8d450a9abe3
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/catalog-api@sha256:80ad0f529cb4b7b606643188f18971586f6493e9a79ee709fd2a1ff3c9744290
      imagePullPolicy: Always
      name: catalog-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:43:25Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:43:27Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:43:27Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:43:25Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://94d66bd65140f689077ed12de82494a35b8323a4dd287dd6a8c03bb24918334a
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/catalog-api@sha256:80ad0f529cb4b7b606643188f18971586f6493e9a79ee709fd2a1ff3c9744290
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/catalog-api@sha256:80ad0f529cb4b7b606643188f18971586f6493e9a79ee709fd2a1ff3c9744290
      lastState: {}
      name: catalog-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T15:43:27Z
    hostIP: 10.221.166.201
    phase: Running
    podIP: 172.30.125.248
    podIPs:
    - ip: 172.30.125.248
    qosClass: BestEffort
    startTime: 2021-06-29T15:43:25Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.125.236/32
      cni.projectcalico.org/podIPs: 172.30.125.236/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.236"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.236"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:03:30Z
    generateName: discount-api-b99dc4c76-
    labels:
      app: discount-api
      deploymentconfig: discount-api
      pod-template-hash: b99dc4c76
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f60fdebc-2688-4283-9e17-341b1df09b97"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"discount-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:03:30Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:03:32Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:03:32Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.236"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:03:42Z
    name: discount-api-b99dc4c76-bh92x
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: discount-api-b99dc4c76
      uid: f60fdebc-2688-4283-9e17-341b1df09b97
    resourceVersion: "377647090"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/discount-api-b99dc4c76-bh92x
    uid: 633f7b81-4737-4a29-a338-ba4d537f8d3b
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-api@sha256:253eb0bfdfba5e1809e7de4208a4b1ea8e341b9609eaf587f0047c6409e0915c
      imagePullPolicy: Always
      name: discount-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:30Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:42Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:42Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:30Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1f9de7f7dd5f5dbd32ea093950ac1904cc02cd5d920b72f232ffe3e60a16ce16
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-api@sha256:253eb0bfdfba5e1809e7de4208a4b1ea8e341b9609eaf587f0047c6409e0915c
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-api@sha256:253eb0bfdfba5e1809e7de4208a4b1ea8e341b9609eaf587f0047c6409e0915c
      lastState: {}
      name: discount-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T16:03:41Z
    hostIP: 10.221.166.201
    phase: Running
    podIP: 172.30.125.236
    podIPs:
    - ip: 172.30.125.236
    qosClass: BestEffort
    startTime: 2021-06-29T16:03:30Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.125.220/32
      cni.projectcalico.org/podIPs: 172.30.125.220/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.220"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.220"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:03:01Z
    generateName: discount-grpc-ccb79d467-
    labels:
      app: discount-grpc
      deploymentconfig: discount-grpc
      pod-template-hash: ccb79d467
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"068b0350-eca7-49e2-974f-f982c72c2d57"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"discount-grpc"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8081,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:03:01Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:03:03Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:03:03Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.220"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:03:07Z
    name: discount-grpc-ccb79d467-8slcg
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: discount-grpc-ccb79d467
      uid: 068b0350-eca7-49e2-974f-f982c72c2d57
    resourceVersion: "377646796"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/discount-grpc-ccb79d467-8slcg
    uid: 8979c745-03b5-4df5-b5e7-98b47af57de8
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-grpc@sha256:13e1b22ccab9185f09936f6d21b8acfc525f8fa109ad48baeaffa4fcb5b392b5
      imagePullPolicy: Always
      name: discount-grpc
      ports:
      - containerPort: 8081
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:01Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:07Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:07Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:03:01Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7a5026a398475cdc7672232e7fff59ede5137fadd44d48160456743252fb854f
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-grpc@sha256:13e1b22ccab9185f09936f6d21b8acfc525f8fa109ad48baeaffa4fcb5b392b5
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-grpc@sha256:13e1b22ccab9185f09936f6d21b8acfc525f8fa109ad48baeaffa4fcb5b392b5
      lastState: {}
      name: discount-grpc
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T16:03:06Z
    hostIP: 10.221.166.201
    phase: Running
    podIP: 172.30.125.220
    podIPs:
    - ip: 172.30.125.220
    qosClass: BestEffort
    startTime: 2021-06-29T16:03:01Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.204"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.204"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.name: mongodb
      openshift.io/deployment.name: mongodb-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T15:39:44Z
    labels:
      openshift.io/deployer-pod-for.name: mongodb-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:labels:
            .: {}
            f:openshift.io/deployer-pod-for.name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8cbce627-c09c-4b22-83fd-2dd967b77565"}:
              .: {}
              f:apiVersion: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:activeDeadlineSeconds: {}
          f:containers:
            k:{"name":"deployment"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:terminationGracePeriodSeconds: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:39:44Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T15:39:45Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T15:39:45Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.204"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T15:42:05Z
    name: mongodb-1-deploy
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: v1
      kind: ReplicationController
      name: mongodb-1
      uid: 8cbce627-c09c-4b22-83fd-2dd967b77565
    resourceVersion: "377635694"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/mongodb-1-deploy
    uid: cadc66b2-ac96-47a8-ae97-45ad8de01e66
  spec:
    activeDeadlineSeconds: 21600
    containers:
    - env:
      - name: OPENSHIFT_DEPLOYMENT_NAME
        value: mongodb-1
      - name: OPENSHIFT_DEPLOYMENT_NAMESPACE
        value: aspnetrunbasics
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b8a47076c4d28bc59dee8b4750149434f1d78f173625852b412208030430ee38
      imagePullPolicy: IfNotPresent
      name: deployment
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: deployer-token-9g9qj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: deployer-dockercfg-85zgm
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: deployer
    serviceAccountName: deployer
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: deployer-token-9g9qj
      secret:
        defaultMode: 420
        secretName: deployer-token-9g9qj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:39:44Z
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:42:05Z
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:42:05Z
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:39:44Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://70d8f496ea2b06c942326211564ccf3fdd6868d4ee73426faadc65886e0016a4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b8a47076c4d28bc59dee8b4750149434f1d78f173625852b412208030430ee38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b8a47076c4d28bc59dee8b4750149434f1d78f173625852b412208030430ee38
      lastState: {}
      name: deployment
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://70d8f496ea2b06c942326211564ccf3fdd6868d4ee73426faadc65886e0016a4
          exitCode: 0
          finishedAt: 2021-06-29T15:42:04Z
          reason: Completed
          startedAt: 2021-06-29T15:39:46Z
    hostIP: 10.221.166.201
    phase: Succeeded
    podIP: 172.30.125.204
    podIPs:
    - ip: 172.30.125.204
    qosClass: BestEffort
    startTime: 2021-06-29T15:39:44Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.125.240/32
      cni.projectcalico.org/podIPs: 172.30.125.240/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.240"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.240"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: mongodb
      openshift.io/deployment.name: mongodb-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T15:39:46Z
    generateName: mongodb-1-
    labels:
      deployment: mongodb-1
      deploymentconfig: mongodb
      name: mongodb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8cbce627-c09c-4b22-83fd-2dd967b77565"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"mongodb"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"MONGODB_ADMIN_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MONGODB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MONGODB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"MONGODB_USER"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":27017,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/mongodb/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"mongodb-data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:39:46Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-06-29T15:39:46Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T15:41:45Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T15:41:45Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.240"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T15:42:04Z
    name: mongodb-1-r7sk2
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: mongodb-1
      uid: 8cbce627-c09c-4b22-83fd-2dd967b77565
    resourceVersion: "377635681"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/mongodb-1-r7sk2
    uid: 810904f9-89f1-490f-bf64-ee747f8b10ad
  spec:
    containers:
    - env:
      - name: MONGODB_USER
        valueFrom:
          secretKeyRef:
            key: database-user
            name: mongodb
      - name: MONGODB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: database-password
            name: mongodb
      - name: MONGODB_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: database-admin-password
            name: mongodb
      - name: MONGODB_DATABASE
        valueFrom:
          secretKeyRef:
            key: database-name
            name: mongodb
      image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 27017
        timeoutSeconds: 1
      name: mongodb
      ports:
      - containerPort: 27017
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
            --eval="quit()"
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mongodb/data
        name: mongodb-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: mongodb-data
      persistentVolumeClaim:
        claimName: mongodb
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:41:03Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:42:04Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:42:04Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:41:03Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e19f8b2c3d4fe1079f82c462b3345f45bcb767f30ea0f3ec593a6c36b0857751
      image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191
      imageID: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191
      lastState: {}
      name: mongodb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T15:41:54Z
    hostIP: 10.221.166.201
    phase: Running
    podIP: 172.30.125.240
    podIPs:
    - ip: 172.30.125.240
    qosClass: Burstable
    startTime: 2021-06-29T15:41:03Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.180.17/32
      cni.projectcalico.org/podIPs: 172.30.180.17/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.17"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.17"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T15:58:40Z
    generateName: mssql-6f49c9f4ff-
    labels:
      app: mssql
      pod-template-hash: 6f49c9f4ff
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"95ad8550-343c-4caa-b8c7-5c634f342bd5"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"mssql"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ACCEPT_EULA"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":1443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/mssql"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"mssql-persistent-storage"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:58:40Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T15:58:42Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T15:58:42Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.180.17"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T15:59:48Z
    name: mssql-6f49c9f4ff-fg47n
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mssql-6f49c9f4ff
      uid: 95ad8550-343c-4caa-b8c7-5c634f342bd5
    resourceVersion: "377644988"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/mssql-6f49c9f4ff-fg47n
    uid: f50f0f74-b07c-44de-b98e-c6ae3f8f78d6
  spec:
    containers:
    - env:
      - name: ACCEPT_EULA
        value: "Y"
      envFrom:
      - secretRef:
          name: mssql
      image: mcr.microsoft.com/mssql/rhel/server:2019-latest
      imagePullPolicy: IfNotPresent
      name: mssql
      ports:
      - containerPort: 1443
        name: mssql
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mssql
        name: mssql-persistent-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.205
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: mssql-persistent-storage
      persistentVolumeClaim:
        claimName: mssql-pv-claim
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:58:40Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:59:48Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:59:48Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:58:40Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c1954d488ebd60626a46dc8d1f6790371f25d88a2dd0e08b1901f477ba537604
      image: mcr.microsoft.com/mssql/rhel/server:2019-latest
      imageID: mcr.microsoft.com/mssql/rhel/server@sha256:ab70a58a705c6f2a50daa07fb8974ab76736f0f152df316d3fc37537d72d08db
      lastState: {}
      name: mssql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T15:59:47Z
    hostIP: 10.221.166.205
    phase: Running
    podIP: 172.30.180.17
    podIPs:
    - ip: 172.30.180.17
    qosClass: BestEffort
    startTime: 2021-06-29T15:58:40Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.180.36/32
      cni.projectcalico.org/podIPs: 172.30.180.36/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.36"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.36"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:13:07Z
    generateName: ordering-api-8d64b57bf-
    labels:
      app: ordering-api
      deploymentconfig: ordering-api
      pod-template-hash: 8d64b57bf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"eb4369d4-328b-4d50-832b-5573d3473d89"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"ordering-api"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:13:07Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:13:10Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:13:10Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.180.36"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:13:16Z
    name: ordering-api-8d64b57bf-j5lmn
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ordering-api-8d64b57bf
      uid: eb4369d4-328b-4d50-832b-5573d3473d89
    resourceVersion: "377652571"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/ordering-api-8d64b57bf-j5lmn
    uid: 3eb36536-f4a2-4292-8fe6-3a938000827f
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/ordering-api@sha256:546282e8aa3345c61b98409318a65b2a8a8e6f363cd579e91e2267cf6b818dee
      imagePullPolicy: Always
      name: ordering-api
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.205
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:13:08Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:13:16Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:13:16Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:13:07Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1c5c71a7910a3455e9f2e9e438dfe93654a7f4e26e3dd336f2752fc566a8305c
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/ordering-api@sha256:546282e8aa3345c61b98409318a65b2a8a8e6f363cd579e91e2267cf6b818dee
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/ordering-api@sha256:546282e8aa3345c61b98409318a65b2a8a8e6f363cd579e91e2267cf6b818dee
      lastState: {}
      name: ordering-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T16:13:15Z
    hostIP: 10.221.166.205
    phase: Running
    podIP: 172.30.180.36
    podIPs:
    - ip: 172.30.180.36
    qosClass: BestEffort
    startTime: 2021-06-29T16:13:08Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.208"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.208"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T15:33:01Z
    labels:
      openshift.io/deployer-pod-for.name: postgresql-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:labels:
            .: {}
            f:openshift.io/deployer-pod-for.name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"12bd8243-b524-4fc6-b8e1-ef4ae8083bad"}:
              .: {}
              f:apiVersion: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:activeDeadlineSeconds: {}
          f:containers:
            k:{"name":"deployment"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPENSHIFT_DEPLOYMENT_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:terminationGracePeriodSeconds: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:33:01Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T15:33:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T15:33:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.208"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T15:35:03Z
    name: postgresql-1-deploy
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: v1
      kind: ReplicationController
      name: postgresql-1
      uid: 12bd8243-b524-4fc6-b8e1-ef4ae8083bad
    resourceVersion: "377632066"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/postgresql-1-deploy
    uid: 53d9ea3c-48fd-400e-bc13-0e9cc391e7e7
  spec:
    activeDeadlineSeconds: 21600
    containers:
    - env:
      - name: OPENSHIFT_DEPLOYMENT_NAME
        value: postgresql-1
      - name: OPENSHIFT_DEPLOYMENT_NAMESPACE
        value: aspnetrunbasics
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b8a47076c4d28bc59dee8b4750149434f1d78f173625852b412208030430ee38
      imagePullPolicy: IfNotPresent
      name: deployment
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: deployer-token-9g9qj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: deployer-dockercfg-85zgm
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: deployer
    serviceAccountName: deployer
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: deployer-token-9g9qj
      secret:
        defaultMode: 420
        secretName: deployer-token-9g9qj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:33:01Z
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:35:03Z
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:35:03Z
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:33:01Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://460482fe19dd3733f552d7da92245ab9d80a44d8ceafab062cc4253d98fec2f0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b8a47076c4d28bc59dee8b4750149434f1d78f173625852b412208030430ee38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b8a47076c4d28bc59dee8b4750149434f1d78f173625852b412208030430ee38
      lastState: {}
      name: deployment
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://460482fe19dd3733f552d7da92245ab9d80a44d8ceafab062cc4253d98fec2f0
          exitCode: 0
          finishedAt: 2021-06-29T15:35:02Z
          reason: Completed
          startedAt: 2021-06-29T15:33:04Z
    hostIP: 10.221.166.201
    phase: Succeeded
    podIP: 172.30.125.208
    podIPs:
    - ip: 172.30.125.208
    qosClass: BestEffort
    startTime: 2021-06-29T15:33:01Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.180.45/32
      cni.projectcalico.org/podIPs: 172.30.180.45/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.45"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.45"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-1
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T15:33:05Z
    generateName: postgresql-1-
    labels:
      deployment: postgresql-1
      deploymentconfig: postgresql
      name: postgresql
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.name: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"12bd8243-b524-4fc6-b8e1-ef4ae8083bad"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"postgresql"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"POSTGRESQL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"POSTGRESQL_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"POSTGRESQL_USER"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5432,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/pgsql/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"postgresql-data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:33:05Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-06-29T15:33:05Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T15:34:44Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T15:34:44Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.180.45"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T15:35:02Z
    name: postgresql-1-p5trk
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-1
      uid: 12bd8243-b524-4fc6-b8e1-ef4ae8083bad
    resourceVersion: "377632053"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/postgresql-1-p5trk
    uid: 2c0994d2-3635-47d8-988d-8f2bd04532c3
  spec:
    containers:
    - env:
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: database-user
            name: postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: database-password
            name: postgresql
      - name: POSTGRESQL_DATABASE
        valueFrom:
          secretKeyRef:
            key: database-name
            name: postgresql
      image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /usr/libexec/check-container
          - --live
        failureThreshold: 3
        initialDelaySeconds: 120
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /usr/libexec/check-container
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 512Mi
        requests:
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.205
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:34:00Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:35:02Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:35:02Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T15:34:00Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://dac9385a38bc9c1b46f9548d45d3a0576be89f4757389453056989609d2085ea
      image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f
      imageID: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f
      lastState: {}
      name: postgresql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T15:34:45Z
    hostIP: 10.221.166.205
    phase: Running
    podIP: 172.30.180.45
    podIPs:
    - ip: 172.30.180.45
    qosClass: Burstable
    startTime: 2021-06-29T15:34:00Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.125.192/32
      cni.projectcalico.org/podIPs: 172.30.125.192/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.192"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.192"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:54:13Z
    generateName: rabbitmq-cluster-
    labels:
      app: rabbitmq-cluster
      controller-revision-hash: rabbitmq-cluster-69bd99975
      statefulset.kubernetes.io/pod-name: rabbitmq-cluster-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d27eaaf1-60d3-4640-add4-f216a5069381"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"rabbitmq"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"RABBITMQ_CONFIG_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RABBITMQ_DEFAULT_PASS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"RABBITMQ_DEFAULT_USER"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"RABBITMQ_ERLANG_COOKIE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"RABBITMQ_NODENAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RABBITMQ_USE_LONGNAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5672,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":15672,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":25672,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/rabbitmq"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rabbitmq"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"rabbitmq-storage"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:54:13Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-06-29T16:54:14Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:56:14Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:56:14Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.192"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:57:27Z
    name: rabbitmq-cluster-0
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: rabbitmq-cluster
      uid: d27eaaf1-60d3-4640-add4-f216a5069381
    resourceVersion: "377688637"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/rabbitmq-cluster-0
    uid: eb6150af-3fac-47c3-a952-1bca5309484f
  spec:
    containers:
    - args:
      - -c
      - cp -v /etc/rabbitmq/rabbitmq.conf ${RABBITMQ_CONFIG_FILE}.conf; exec docker-entrypoint.sh
        rabbitmq-server
      command:
      - sh
      env:
      - name: RABBITMQ_DEFAULT_USER
        valueFrom:
          secretKeyRef:
            key: username
            name: rabbitmq-cluster-secret
      - name: RABBITMQ_DEFAULT_PASS
        valueFrom:
          secretKeyRef:
            key: password
            name: rabbitmq-cluster-secret
      - name: RABBITMQ_ERLANG_COOKIE
        valueFrom:
          secretKeyRef:
            key: cookie
            name: rabbitmq-cluster-secret
      - name: K8S_SERVICE_NAME
        value: rabbitmq-cluster
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: RABBITMQ_USE_LONGNAME
        value: "true"
      - name: RABBITMQ_NODENAME
        value: rabbit@$(POD_NAME).rabbitmq-cluster.$(POD_NAMESPACE).svc.cluster.local
      - name: RABBITMQ_CONFIG_FILE
        value: /var/lib/rabbitmq/rabbitmq
      image: rabbitmq:3.8-management
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - rabbitmqctl
          - status
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: rabbitmq
      ports:
      - containerPort: 15672
        name: http
        protocol: TCP
      - containerPort: 5672
        name: amqp
        protocol: TCP
      - containerPort: 25672
        name: clustering
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - rabbitmqctl
          - status
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/rabbitmq
        name: config-volume
      - mountPath: /var/lib/rabbitmq
        name: rabbitmq-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: rabbitmq-discovery-token-qs5qj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: rabbitmq-cluster-0
    imagePullSecrets:
    - name: rabbitmq-discovery-dockercfg-l8tc6
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: rabbitmq-discovery
    serviceAccountName: rabbitmq-discovery
    subdomain: rabbitmq-cluster
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: rabbitmq-storage
      persistentVolumeClaim:
        claimName: rabbitmq-storage-rabbitmq-cluster-0
    - configMap:
        defaultMode: 420
        items:
        - key: rabbitmq.conf
          path: rabbitmq.conf
        - key: enabled_plugins
          path: enabled_plugins
        name: rabbitmq-cluster-config
      name: config-volume
    - name: rabbitmq-discovery-token-qs5qj
      secret:
        defaultMode: 420
        secretName: rabbitmq-discovery-token-qs5qj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:56:02Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:56:02Z
      message: 'containers with unready status: [rabbitmq]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:56:02Z
      message: 'containers with unready status: [rabbitmq]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:56:02Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: rabbitmq:3.8-management
      imageID: ""
      lastState: {}
      name: rabbitmq
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: Back-off pulling image "rabbitmq:3.8-management"
          reason: ImagePullBackOff
    hostIP: 10.221.166.201
    phase: Pending
    podIP: 172.30.125.192
    podIPs:
    - ip: 172.30.125.192
    qosClass: BestEffort
    startTime: 2021-06-29T16:56:02Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "app.redislabs.com/v1",
            "kind": "RedisEnterpriseCluster",
            "metadata": {
              "name": "rec"
            },
            "spec": {
              "nodes": 3,
              "persistentSpec": {
                "enabled": true
              },
              "uiServiceType": "ClusterIP",
              "username": "demo@redislabs.com",
              "redisEnterpriseNodeResources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "4000m",
                  "memory": "4Gi"
                }
              },
              "redisEnterpriseImageSpec": {
                "imagePullPolicy": "IfNotPresent",
                "repository": "redislabs/redis",
                "versionTag": "6.0.12-57.rhel7-openshift"
              }
            }

          }
        ]
      capabilities: Deep Insights
      categories: Database
      cni.projectcalico.org/podIP: 172.30.125.206/32
      cni.projectcalico.org/podIPs: 172.30.125.206/32
      containerImage: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.206"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.206"
            ],
            "default": true,
            "dns": {}
        }]
      olm.operatorGroup: aspnetrunbasics-wm4m6
      olm.operatorNamespace: aspnetrunbasics
      olm.targetNamespaces: aspnetrunbasics
      openshift.io/scc: restricted
      operatorframework.io/properties: '{"properties":[{"type":"olm.gvk","value":{"group":"app.redislabs.com","kind":"RedisEnterpriseCluster","version":"v1"}},{"type":"olm.gvk","value":{"group":"app.redislabs.com","kind":"RedisEnterpriseCluster","version":"v1alpha1"}},{"type":"olm.package","value":{"packageName":"redis-enterprise-operator-cert","version":"6.0.12-5"}}]}'
    creationTimestamp: 2021-06-29T16:30:33Z
    generateName: redis-enterprise-operator-5b96fb645f-
    labels:
      name: redis-enterprise-operator
      pod-template-hash: 5b96fb645f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alm-examples: {}
            f:capabilities: {}
            f:categories: {}
            f:containerImage: {}
            f:olm.operatorGroup: {}
            f:olm.operatorNamespace: {}
            f:olm.targetNamespaces: {}
            f:operatorframework.io/properties: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f01c32ae-7e97-4a92-860b-56e962f0eb1c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"redis-enterprise-operator"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OPERATOR_CONDITION_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPERATOR_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:30:33Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:30:34Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:30:34Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.206"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:30:52Z
    name: redis-enterprise-operator-5b96fb645f-pk2gf
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-enterprise-operator-5b96fb645f
      uid: f01c32ae-7e97-4a92-860b-56e962f0eb1c
    resourceVersion: "377664261"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/redis-enterprise-operator-5b96fb645f-pk2gf
    uid: 0ad09af1-56e9-4529-a35c-53e131f47cef
  spec:
    containers:
    - command:
      - redis-enterprise-operator
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['olm.targetNamespaces']
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_NAME
        value: redis-enterprise-operator
      - name: OPERATOR_CONDITION_NAME
        value: redis-enterprise-operator.v6.0.12-5
      image: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
      imagePullPolicy: Always
      name: redis-enterprise-operator
      resources:
        limits:
          cpu: "4"
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: redis-enterprise-operator-token-kkgnk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: redis-enterprise-operator-dockercfg-m5b4k
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: redis-enterprise-operator
    serviceAccountName: redis-enterprise-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: redis-enterprise-operator-token-kkgnk
      secret:
        defaultMode: 420
        secretName: redis-enterprise-operator-token-kkgnk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:30:33Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:30:52Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:30:52Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:30:33Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3c5bd61d4c1f9cc49e70173f9718698dbff0f0256b5fa7fe6a493b9fa5829926
      image: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
      imageID: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
      lastState: {}
      name: redis-enterprise-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T16:30:52Z
    hostIP: 10.221.166.201
    phase: Running
    podIP: 172.30.125.206
    podIPs:
    - ip: 172.30.125.206
    qosClass: Burstable
    startTime: 2021-06-29T16:30:33Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.153.72/32
      cni.projectcalico.org/podIPs: 172.30.153.72/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.153.72"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.153.72"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:44:16Z
    generateName: redis-server-services-rigger-7d6fb4c796-
    labels:
      app: redis-enterprise
      pod-template-hash: 7d6fb4c796
      redis.io/cluster: redis-server
      redis.io/role: services-rigger
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:redis.io/cluster: {}
            f:redis.io/role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1c365e90-6113-44d4-a166-d640b2ad8ee5"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"services-rigger"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"BDB_SERVICE_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OWNER_REF"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVICE_NAMING"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/redislabs/credentials"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"credentials"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:44:16Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: 2021-06-29T16:44:16Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:44:29Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:44:29Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.153.72"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:47:25Z
    name: redis-server-services-rigger-7d6fb4c796-m4tfh
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-server-services-rigger-7d6fb4c796
      uid: 1c365e90-6113-44d4-a166-d640b2ad8ee5
    resourceVersion: "377687864"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/redis-server-services-rigger-7d6fb4c796-m4tfh
    uid: 7d31e659-3c73-4e02-8e2c-b4259b881584
  spec:
    containers:
    - env:
      - name: K8S_NAMESPACE
        value: aspnetrunbasics
      - name: REDIS_SERVICE_NAME
        value: redis-server
      - name: BDB_SERVICE_TYPE
        value: cluster_ip,headless
      - name: SERVICE_NAMING
        value: bdb_name
      - name: OWNER_REF
        value: '{"apiVersion":"app.redislabs.com/v1alpha1","kind":"RedisEnterpriseCluster","name":"redis-server","uid":"4f3a3065-087b-45bc-8e72-3032526f013d","controller":true,"blockOwnerDeletion":true}'
      image: redislabs/k8s-controller:6.0.12-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 15
      name: services-rigger
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/redislabs/credentials
        name: credentials
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: redis-server-token-bj856
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: redis-server-dockercfg-2k6gk
    nodeName: 10.221.166.195
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: redis-server
    serviceAccountName: redis-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: credentials
      secret:
        defaultMode: 420
        secretName: redis-server
    - name: redis-server-token-bj856
      secret:
        defaultMode: 420
        secretName: redis-server-token-bj856
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:44:25Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:44:25Z
      message: 'containers with unready status: [services-rigger]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:44:25Z
      message: 'containers with unready status: [services-rigger]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:44:25Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: redislabs/k8s-controller:6.0.12-5
      imageID: ""
      lastState: {}
      name: services-rigger
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: Back-off pulling image "redislabs/k8s-controller:6.0.12-5"
          reason: ImagePullBackOff
    hostIP: 10.221.166.195
    phase: Pending
    podIP: 172.30.153.72
    podIPs:
    - ip: 172.30.153.72
    qosClass: Guaranteed
    startTime: 2021-06-29T16:44:25Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.125.193/32
      cni.projectcalico.org/podIPs: 172.30.125.193/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.193"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.125.193"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:05:47Z
    generateName: shopping-aggregator-5c5c64f94c-
    labels:
      app: shopping-aggregator
      deploymentconfig: shopping-aggregator
      pod-template-hash: 5c5c64f94c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fdcd3389-067a-46d1-b5c8-1f2158a1ab90"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"shopping-aggregator"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:05:47Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:05:49Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:05:49Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.125.193"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:06:01Z
    name: shopping-aggregator-5c5c64f94c-cx8rr
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: shopping-aggregator-5c5c64f94c
      uid: fdcd3389-067a-46d1-b5c8-1f2158a1ab90
    resourceVersion: "377648556"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/shopping-aggregator-5c5c64f94c-cx8rr
    uid: 3b9b82d5-d9d1-4402-a597-7389cb134534
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/shopping-aggregator@sha256:c087648e5a7ce9e82e22b242c483ec9a8d9fde8f4fadfc0a2d2dc98a11f26d31
      imagePullPolicy: Always
      name: shopping-aggregator
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.201
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:05:47Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:06:01Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:06:01Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:05:47Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://db4b2ffe6ffc9dfd4546e62d6352f5ae668c3ffc0c45105ed8df5cb214665938
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/shopping-aggregator@sha256:c087648e5a7ce9e82e22b242c483ec9a8d9fde8f4fadfc0a2d2dc98a11f26d31
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/shopping-aggregator@sha256:c087648e5a7ce9e82e22b242c483ec9a8d9fde8f4fadfc0a2d2dc98a11f26d31
      lastState: {}
      name: shopping-aggregator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T16:06:00Z
    hostIP: 10.221.166.201
    phase: Running
    podIP: 172.30.125.193
    podIPs:
    - ip: 172.30.125.193
    qosClass: BestEffort
    startTime: 2021-06-29T16:05:47Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.30.180.125/32
      cni.projectcalico.org/podIPs: 172.30.180.125/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.125"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "172.30.180.125"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/scc: restricted
    creationTimestamp: 2021-06-29T16:00:36Z
    generateName: webstatus-8594885988-
    labels:
      app: webstatus
      deploymentconfig: webstatus
      pod-template-hash: "8594885988"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9f865e57-3c94-4ff0-8ca6-55473c5108b8"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"webstatus"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:seLinuxOptions:
              f:level: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:00:36Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: 2021-06-29T16:00:39Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: 2021-06-29T16:00:39Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.30.180.125"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: 2021-06-29T16:00:40Z
    name: webstatus-8594885988-4rdfq
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webstatus-8594885988
      uid: 9f865e57-3c94-4ff0-8ca6-55473c5108b8
    resourceVersion: "377645479"
    selfLink: /api/v1/namespaces/aspnetrunbasics/pods/webstatus-8594885988-4rdfq
    uid: 0258bb0b-dd76-4427-9cf8-1985edc889fb
  spec:
    containers:
    - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/webstatus@sha256:eb1eb945f9aff3bf29acc5b049439c46f00cd7b6ef7039f4793a489347aceff5
      imagePullPolicy: Always
      name: webstatus
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000600000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vjtmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-h67tr
    nodeName: 10.221.166.205
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000600000
      seLinuxOptions:
        level: s0:c25,c0
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-vjtmj
      secret:
        defaultMode: 420
        secretName: default-token-vjtmj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:00:37Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:00:40Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:00:40Z
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: 2021-06-29T16:00:37Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://879d2c70a9cdf5bfd20ec23b3ed3c4dd243c254beef35e6186941ab7f73aa714
      image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/webstatus@sha256:eb1eb945f9aff3bf29acc5b049439c46f00cd7b6ef7039f4793a489347aceff5
      imageID: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/webstatus@sha256:eb1eb945f9aff3bf29acc5b049439c46f00cd7b6ef7039f4793a489347aceff5
      lastState: {}
      name: webstatus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: 2021-06-29T16:00:40Z
    hostIP: 10.221.166.205
    phase: Running
    podIP: 172.30.180.125
    podIPs:
    - ip: 172.30.180.125
    qosClass: BestEffort
    startTime: 2021-06-29T16:00:37Z
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2021-06-29 15:42:04 +0000 UTC
      openshift.io/deployer-pod.created-at: 2021-06-29 15:39:44 +0000 UTC
      openshift.io/deployer-pod.name: mongodb-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: mongodb
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"mongodb","namespace":"aspnetrunbasics","uid":"9d1ee097-55a4-4db6-baae-d6c8b3c72e50","resourceVersion":"377634469","generation":2,"creationTimestamp":"2021-06-29T15:39:43Z","labels":{"template":"mongodb-persistent-template","template.openshift.io/template-instance-owner":"98bd26b8-d439-484e-921e-abab1fb4a69e"},"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"managedFields":[{"manager":"openshift-controller-manager","operation":"Update","apiVersion":"apps.openshift.io/v1","time":"2021-06-29T15:39:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:template.alpha.openshift.io/wait-for-ready":{}},"f:labels":{".":{},"f:template":{},"f:template.openshift.io/template-instance-owner":{}}},"f:spec":{"f:replicas":{},"f:selector":{".":{},"f:name":{}},"f:strategy":{"f:activeDeadlineSeconds":{},"f:recreateParams":{".":{},"f:timeoutSeconds":{}},"f:type":{}},"f:template":{".":{},"f:metadata":{".":{},"f:creationTimestamp":{},"f:labels":{".":{},"f:name":{}}},"f:spec":{".":{},"f:containers":{".":{},"k:{\"name\":\"mongodb\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"MONGODB_ADMIN_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"MONGODB_DATABASE\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"MONGODB_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"MONGODB_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:tcpSocket":{".":{},"f:port":{}},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":27017,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:exec":{".":{},"f:command":{}},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:limits":{".":{},"f:memory":{}}},"f:securityContext":{".":{},"f:capabilities":{},"f:privileged":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/lib/mongodb/data\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"mongodb-data\"}":{".":{},"f:name":{},"f:persistentVolumeClaim":{".":{},"f:claimName":{}}}}}},"f:triggers":{}},"f:status":{"f:details":{".":{},"f:causes":{},"f:message":{}},"f:latestVersion":{}}}}]},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["mongodb"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"mongodb:3.6"},"lastTriggeredImage":"image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"mongodb"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"mongodb"}},"spec":{"volumes":[{"name":"mongodb-data","persistentVolumeClaim":{"claimName":"mongodb"}}],"containers":[{"name":"mongodb","image":"image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191","ports":[{"containerPort":27017,"protocol":"TCP"}],"env":[{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-user"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-password"}}},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-admin-password"}}},{"name":"MONGODB_DATABASE","valueFrom":{"secretKeyRef":{"name":"mongodb","key":"database-name"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"mongodb-data","mountPath":"/var/lib/mongodb/data"}],"livenessProbe":{"tcpSocket":{"port":27017},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""]},"initialDelaySeconds":3,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":0,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]}}}
    creationTimestamp: 2021-06-29T15:39:44Z
    generation: 2
    labels:
      openshift.io/deployment-config.name: mongodb
      template: mongodb-persistent-template
      template.openshift.io/template-instance-owner: 98bd26b8-d439-484e-921e-abab1fb4a69e
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:42:04Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployer-pod.completed-at: {}
            f:openshift.io/deployer-pod.created-at: {}
            f:openshift.io/deployer-pod.name: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.phase: {}
            f:openshift.io/deployment.replicas: {}
            f:openshift.io/deployment.status-reason: {}
            f:openshift.io/encoded-deployment-config: {}
          f:labels:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9d1ee097-55a4-4db6-baae-d6c8b3c72e50"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/deployment-config.latest-version: {}
                f:openshift.io/deployment-config.name: {}
                f:openshift.io/deployment.name: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:deployment: {}
                f:deploymentconfig: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"MONGODB_ADMIN_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mongodb/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mongodb-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:42:05Z
    name: mongodb-1
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: mongodb
      uid: 9d1ee097-55a4-4db6-baae-d6c8b3c72e50
    resourceVersion: "377635690"
    selfLink: /api/v1/namespaces/aspnetrunbasics/replicationcontrollers/mongodb-1
    uid: 8cbce627-c09c-4b22-83fd-2dd967b77565
  spec:
    replicas: 1
    selector:
      deployment: mongodb-1
      deploymentconfig: mongodb
      name: mongodb
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: mongodb
          openshift.io/deployment.name: mongodb-1
        creationTimestamp: null
        labels:
          deployment: mongodb-1
          deploymentconfig: mongodb
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: mongodb
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mongodb
          image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2021-06-29 15:35:02 +0000 UTC
      openshift.io/deployer-pod.created-at: 2021-06-29 15:33:01 +0000 UTC
      openshift.io/deployer-pod.name: postgresql-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"postgresql","namespace":"aspnetrunbasics","uid":"5236e1a7-9b38-498a-9a13-cd5cc811869e","resourceVersion":"377630577","generation":2,"creationTimestamp":"2021-06-29T15:33:00Z","labels":{"template":"postgresql-persistent-template","template.openshift.io/template-instance-owner":"a89a1161-9603-44c4-b6bd-05999b16fda2"},"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"managedFields":[{"manager":"openshift-controller-manager","operation":"Update","apiVersion":"apps.openshift.io/v1","time":"2021-06-29T15:33:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:template.alpha.openshift.io/wait-for-ready":{}},"f:labels":{".":{},"f:template":{},"f:template.openshift.io/template-instance-owner":{}}},"f:spec":{"f:replicas":{},"f:selector":{".":{},"f:name":{}},"f:strategy":{"f:activeDeadlineSeconds":{},"f:recreateParams":{".":{},"f:timeoutSeconds":{}},"f:type":{}},"f:template":{".":{},"f:metadata":{".":{},"f:creationTimestamp":{},"f:labels":{".":{},"f:name":{}}},"f:spec":{".":{},"f:containers":{".":{},"k:{\"name\":\"postgresql\"}":{".":{},"f:env":{".":{},"k:{\"name\":\"POSTGRESQL_DATABASE\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"POSTGRESQL_PASSWORD\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}},"k:{\"name\":\"POSTGRESQL_USER\"}":{".":{},"f:name":{},"f:valueFrom":{".":{},"f:secretKeyRef":{".":{},"f:key":{},"f:name":{}}}}},"f:image":{},"f:imagePullPolicy":{},"f:livenessProbe":{".":{},"f:exec":{".":{},"f:command":{}},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":5432,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:readinessProbe":{".":{},"f:exec":{".":{},"f:command":{}},"f:failureThreshold":{},"f:initialDelaySeconds":{},"f:periodSeconds":{},"f:successThreshold":{},"f:timeoutSeconds":{}},"f:resources":{".":{},"f:limits":{".":{},"f:memory":{}}},"f:securityContext":{".":{},"f:capabilities":{},"f:privileged":{}},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{},"f:volumeMounts":{".":{},"k:{\"mountPath\":\"/var/lib/pgsql/data\"}":{".":{},"f:mountPath":{},"f:name":{}}}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:volumes":{".":{},"k:{\"name\":\"postgresql-data\"}":{".":{},"f:name":{},"f:persistentVolumeClaim":{".":{},"f:claimName":{}}}}}},"f:triggers":{}},"f:status":{"f:details":{".":{},"f:causes":{},"f:message":{}},"f:latestVersion":{}}}}]},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:10-el8"},"lastTriggeredImage":"image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql"}}],"containers":[{"name":"postgresql","image":"image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-user"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-password"}}},{"name":"POSTGRESQL_DATABASE","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"database-name"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"exec":{"command":["/usr/libexec/check-container","--live"]},"initialDelaySeconds":120,"timeoutSeconds":10,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/usr/libexec/check-container"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":0,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]}}}
    creationTimestamp: 2021-06-29T15:33:01Z
    generation: 2
    labels:
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: a89a1161-9603-44c4-b6bd-05999b16fda2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:35:02Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/deployer-pod.completed-at: {}
            f:openshift.io/deployer-pod.created-at: {}
            f:openshift.io/deployer-pod.name: {}
            f:openshift.io/deployment-config.latest-version: {}
            f:openshift.io/deployment-config.name: {}
            f:openshift.io/deployment.phase: {}
            f:openshift.io/deployment.replicas: {}
            f:openshift.io/deployment.status-reason: {}
            f:openshift.io/encoded-deployment-config: {}
          f:labels:
            .: {}
            f:openshift.io/deployment-config.name: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5236e1a7-9b38-498a-9a13-cd5cc811869e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:deployment: {}
            f:deploymentconfig: {}
            f:name: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/deployment-config.latest-version: {}
                f:openshift.io/deployment-config.name: {}
                f:openshift.io/deployment.name: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:deployment: {}
                f:deploymentconfig: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"postgresql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"POSTGRESQL_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/pgsql/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"postgresql-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:35:03Z
    name: postgresql-1
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 5236e1a7-9b38-498a-9a13-cd5cc811869e
    resourceVersion: "377632063"
    selfLink: /api/v1/namespaces/aspnetrunbasics/replicationcontrollers/postgresql-1
    uid: 12bd8243-b524-4fc6-b8e1-ef4ae8083bad
  spec:
    replicas: 1
    selector:
      deployment: postgresql-1
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-1
        creationTimestamp: null
        labels:
          deployment: postgresql-1
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T15:48:30Z
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T15:48:30Z
    name: aspnetrunbasics
    namespace: aspnetrunbasics
    resourceVersion: "372937088"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/aspnetrunbasics
    uid: c36a61b8-2cdc-4b1e-a9b3-183d2138cbdc
  spec:
    clusterIP: 172.21.123.69
    clusterIPs:
    - 172.21.123.69
    ports:
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 443
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: aspnetrunbasics
      deploymentconfig: aspnetrunbasics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T15:25:59Z
    labels:
      app: asprunbasics-gw
      app.kubernetes.io/component: asprunbasics-gw
      app.kubernetes.io/instance: asprunbasics-gw
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T15:25:59Z
    name: asprunbasics-gw
    namespace: aspnetrunbasics
    resourceVersion: "377626844"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/asprunbasics-gw
    uid: 0c13ffb1-b3de-45ef-b93e-0eaa0ee17f1a
  spec:
    clusterIP: 172.21.238.121
    clusterIPs:
    - 172.21.238.121
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: asprunbasics-gw
      deploymentconfig: asprunbasics-gw
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:04:50Z
    labels:
      app: basket-api
      app.kubernetes.io/component: basket-api
      app.kubernetes.io/instance: basket-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:04:50Z
    name: basket-api
    namespace: aspnetrunbasics
    resourceVersion: "377647738"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/basket-api
    uid: 05d2f0f4-5118-45dc-97e0-0c4c50ecf7c9
  spec:
    clusterIP: 172.21.43.14
    clusterIPs:
    - 172.21.43.14
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: basket-api
      deploymentconfig: basket-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T13:46:41Z
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:46:41Z
    name: catalog-api
    namespace: aspnetrunbasics
    resourceVersion: "372873325"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/catalog-api
    uid: 24e77057-e3d4-4d5a-a7b8-1801746ffebe
  spec:
    clusterIP: 172.21.203.157
    clusterIPs:
    - 172.21.203.157
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: catalog-api
      deploymentconfig: catalog-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-06-24T13:42:25Z
    labels:
      app: jaeger
      app.kubernetes.io/component: service-agent
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb-agent
      app.kubernetes.io/part-of: jaeger
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6bb66fa0-5c59-4ae2-9b85-39731e927c12"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":5775,"protocol":"UDP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":5778,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":6831,"protocol":"UDP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":6832,"protocol":"UDP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: jaeger-operator
      operation: Update
      time: 2021-06-24T13:42:25Z
    name: catalogdb-agent
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: jaegertracing.io/v1
      controller: true
      kind: Jaeger
      name: catalogdb
      uid: 6bb66fa0-5c59-4ae2-9b85-39731e927c12
    resourceVersion: "372871092"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/catalogdb-agent
    uid: 8097f46d-6cc3-429b-aa6a-211a6bc13bc3
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: zk-compact-trft
      port: 5775
      protocol: UDP
      targetPort: 5775
    - name: config-rest
      port: 5778
      protocol: TCP
      targetPort: 5778
    - name: jg-compact-trft
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: jg-binary-trft
      port: 6832
      protocol: UDP
      targetPort: 6832
    selector:
      app: jaeger
      app.kubernetes.io/component: all-in-one
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb
      app.kubernetes.io/part-of: jaeger
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-06-24T13:42:25Z
    labels:
      app: jaeger
      app.kubernetes.io/component: service-collector
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb-collector
      app.kubernetes.io/part-of: jaeger
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6bb66fa0-5c59-4ae2-9b85-39731e927c12"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":9411,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":14250,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":14267,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":14268,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: jaeger-operator
      operation: Update
      time: 2021-06-24T13:42:25Z
    name: catalogdb-collector
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: jaegertracing.io/v1
      controller: true
      kind: Jaeger
      name: catalogdb
      uid: 6bb66fa0-5c59-4ae2-9b85-39731e927c12
    resourceVersion: "372871081"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/catalogdb-collector
    uid: 64646df1-8b89-4290-9b6b-cbe36d136610
  spec:
    clusterIP: 172.21.197.228
    clusterIPs:
    - 172.21.197.228
    ports:
    - name: http-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    - name: https-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: c-tchan-trft
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: http-c-binary-trft
      port: 14268
      protocol: TCP
      targetPort: 14268
    selector:
      app: jaeger
      app.kubernetes.io/component: all-in-one
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb
      app.kubernetes.io/part-of: jaeger
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "false"
      service.alpha.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1587481004
      service.beta.openshift.io/serving-cert-secret-name: catalogdb-collector-headless-tls
      service.beta.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1587481004
    creationTimestamp: 2021-06-24T13:42:25Z
    labels:
      app: jaeger
      app.kubernetes.io/component: service-collector
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb-collector
      app.kubernetes.io/part-of: jaeger
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/scrape: {}
            f:service.beta.openshift.io/serving-cert-secret-name: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6bb66fa0-5c59-4ae2-9b85-39731e927c12"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":9411,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":14250,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":14267,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":14268,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: jaeger-operator
      operation: Update
      time: 2021-06-24T13:42:25Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:service.alpha.openshift.io/serving-cert-signed-by: {}
            f:service.beta.openshift.io/serving-cert-signed-by: {}
      manager: service-ca-operator
      operation: Update
      time: 2021-06-24T13:42:27Z
    name: catalogdb-collector-headless
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: jaegertracing.io/v1
      controller: true
      kind: Jaeger
      name: catalogdb
      uid: 6bb66fa0-5c59-4ae2-9b85-39731e927c12
    resourceVersion: "372871161"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/catalogdb-collector-headless
    uid: 7c04c6b8-8c8c-46cb-831a-a70aa9d8ca1a
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: http-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    - name: https-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: c-tchan-trft
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: http-c-binary-trft
      port: 14268
      protocol: TCP
      targetPort: 14268
    selector:
      app: jaeger
      app.kubernetes.io/component: all-in-one
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb
      app.kubernetes.io/part-of: jaeger
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: catalogdb-ui-oauth-proxy-tls
      service.alpha.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1587481004
      service.beta.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1587481004
    creationTimestamp: 2021-06-24T13:42:25Z
    labels:
      app: jaeger
      app.kubernetes.io/component: service-query
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb-query
      app.kubernetes.io/part-of: jaeger
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:service.alpha.openshift.io/serving-cert-secret-name: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6bb66fa0-5c59-4ae2-9b85-39731e927c12"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: jaeger-operator
      operation: Update
      time: 2021-06-24T13:42:25Z
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:service.alpha.openshift.io/serving-cert-signed-by: {}
            f:service.beta.openshift.io/serving-cert-signed-by: {}
      manager: service-ca-operator
      operation: Update
      time: 2021-06-24T13:42:26Z
    name: catalogdb-query
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: jaegertracing.io/v1
      controller: true
      kind: Jaeger
      name: catalogdb
      uid: 6bb66fa0-5c59-4ae2-9b85-39731e927c12
    resourceVersion: "372871148"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/catalogdb-query
    uid: c2821910-9d19-49c3-8ca6-1f7918001145
  spec:
    clusterIP: 172.21.36.179
    clusterIPs:
    - 172.21.36.179
    ports:
    - name: https-query
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: jaeger
      app.kubernetes.io/component: all-in-one
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb
      app.kubernetes.io/part-of: jaeger
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:03:30Z
    labels:
      app: discount-api
      app.kubernetes.io/component: discount-api
      app.kubernetes.io/instance: discount-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:03:30Z
    name: discount-api
    namespace: aspnetrunbasics
    resourceVersion: "377646968"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/discount-api
    uid: 289df46c-7dfe-4de1-a20b-88bf86c3ee2f
  spec:
    clusterIP: 172.21.99.75
    clusterIPs:
    - 172.21.99.75
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: discount-api
      deploymentconfig: discount-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:03:01Z
    labels:
      app: discount-grpc
      app.kubernetes.io/component: discount-grpc
      app.kubernetes.io/instance: discount-grpc
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8081,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:03:01Z
    name: discount-grpc
    namespace: aspnetrunbasics
    resourceVersion: "377646715"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/discount-grpc
    uid: fd9dfa96-2ad0-468b-b43a-1f95305fac6d
  spec:
    clusterIP: 172.21.236.129
    clusterIPs:
    - 172.21.236.129
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: discount-grpc
      deploymentconfig: discount-grpc
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}
    creationTimestamp: 2021-06-29T15:39:43Z
    labels:
      template: mongodb-persistent-template
      template.openshift.io/template-instance-owner: 98bd26b8-d439-484e-921e-abab1fb4a69e
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.openshift.io/expose-uri: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":27017,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:39:43Z
    name: mongodb
    namespace: aspnetrunbasics
    resourceVersion: "377634449"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/mongodb
    uid: 66a79b3b-9bb1-4e64-b3e6-8a097fe74ea9
  spec:
    clusterIP: 172.21.96.139
    clusterIPs:
    - 172.21.96.139
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-06-29T15:58:39Z
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":1443,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: oc.exe
      operation: Update
      time: 2021-06-29T15:58:39Z
    name: mssql
    namespace: aspnetrunbasics
    resourceVersion: "377644305"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/mssql
    uid: 798c717e-b42a-45a6-a5b7-d771c6ffd488
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - port: 1443
      protocol: TCP
      targetPort: 1443
    selector:
      app: mssql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:13:07Z
    labels:
      app: ordering-api
      app.kubernetes.io/component: ordering-api
      app.kubernetes.io/instance: ordering-api
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:13:07Z
    name: ordering-api
    namespace: aspnetrunbasics
    resourceVersion: "377652479"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/ordering-api
    uid: e6fdcdb9-0cf1-4ed7-aabc-1196a61d0915
  spec:
    clusterIP: 172.21.9.236
    clusterIPs:
    - 172.21.9.236
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ordering-api
      deploymentconfig: ordering-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    creationTimestamp: 2021-06-29T15:33:00Z
    labels:
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: a89a1161-9603-44c4-b6bd-05999b16fda2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.openshift.io/expose-uri: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:name: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:33:00Z
    name: postgresql
    namespace: aspnetrunbasics
    resourceVersion: "377630560"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/postgresql
    uid: ee0b77ab-e833-4b51-93e0-678cd6c1f1ef
  spec:
    clusterIP: 172.21.229.72
    clusterIPs:
    - 172.21.229.72
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-06-29T16:54:13Z
    labels:
      app: rabbitmq-cluster
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":5672,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":25672,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: oc.exe
      operation: Update
      time: 2021-06-29T16:54:13Z
    name: rabbitmq-cluster
    namespace: aspnetrunbasics
    resourceVersion: "377679938"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/rabbitmq-cluster
    uid: 5f6bafb7-102b-4baf-adaf-d8612df8e89f
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: amqp
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: clustering
      port: 25672
      protocol: TCP
      targetPort: 25672
    selector:
      app: rabbitmq-cluster
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-06-29T16:54:13Z
    labels:
      app: rabbitmq-cluster
      type: LoadBalancer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:type: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":5672,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":15672,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: oc.exe
      operation: Update
      time: 2021-06-29T16:54:13Z
    name: rabbitmq-cluster-balancer
    namespace: aspnetrunbasics
    resourceVersion: "377679934"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/rabbitmq-cluster-balancer
    uid: 0e7c0b44-52b9-45ef-8d5e-fb10ac4c1a88
  spec:
    clusterIP: 172.21.86.44
    clusterIPs:
    - 172.21.86.44
    ports:
    - name: http
      port: 15672
      protocol: TCP
      targetPort: 15672
    - name: amqp
      port: 5672
      protocol: TCP
      targetPort: 5672
    selector:
      app: rabbitmq-cluster
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-06-29T16:36:15Z
    labels:
      app: redis-enterprise
      redis.io/cluster: redis-server
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:redis.io/cluster: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4f3a3065-087b-45bc-8e72-3032526f013d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            .: {}
            k:{"port":8001,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":8070,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:redis.io/cluster: {}
            f:redis.io/role: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: redis-enterprise-operator
      operation: Update
      time: 2021-06-29T16:36:15Z
    name: redis-server
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: app.redislabs.com/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: RedisEnterpriseCluster
      name: redis-server
      uid: 4f3a3065-087b-45bc-8e72-3032526f013d
    resourceVersion: "377666680"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/redis-server
    uid: c542e9e9-1531-43e2-a32f-dfedee952d82
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ports:
    - name: api
      port: 9443
      protocol: TCP
      targetPort: 9443
    - name: sentinel
      port: 8001
      protocol: TCP
      targetPort: 8001
    - name: prometheus
      port: 8070
      protocol: TCP
      targetPort: 8070
    selector:
      app: redis-enterprise
      redis.io/cluster: redis-server
      redis.io/role: node
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2021-06-29T16:36:15Z
    labels:
      app: redis-enterprise
      redis.io/cluster: redis-server
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:redis.io/cluster: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4f3a3065-087b-45bc-8e72-3032526f013d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:redis.io/cluster: {}
            f:redis.io/role: {}
            f:redis.io/role-master: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: redis-enterprise-operator
      operation: Update
      time: 2021-06-29T16:36:15Z
    name: redis-server-ui
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: app.redislabs.com/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: RedisEnterpriseCluster
      name: redis-server
      uid: 4f3a3065-087b-45bc-8e72-3032526f013d
    resourceVersion: "377666677"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/redis-server-ui
    uid: c5756ed0-2c06-4948-a8ec-269ab61b60d6
  spec:
    clusterIP: 172.21.178.205
    clusterIPs:
    - 172.21.178.205
    ports:
    - name: ui
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: redis-enterprise
      redis.io/cluster: redis-server
      redis.io/role: node
      redis.io/role-master: "1"
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:05:47Z
    labels:
      app: shopping-aggregator
      app.kubernetes.io/component: shopping-aggregator
      app.kubernetes.io/instance: shopping-aggregator
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:05:47Z
    name: shopping-aggregator
    namespace: aspnetrunbasics
    resourceVersion: "377648417"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/shopping-aggregator
    uid: 77141047-5f1b-486e-8bf7-e2334ce91436
  spec:
    clusterIP: 172.21.1.221
    clusterIPs:
    - 172.21.1.221
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: shopping-aggregator
      deploymentconfig: shopping-aggregator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T13:13:41Z
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:13:41Z
    name: webstatus
    namespace: aspnetrunbasics
    resourceVersion: "372855147"
    selfLink: /api/v1/namespaces/aspnetrunbasics/services/webstatus
    uid: 5f41c0d5-bd6a-4d05-ab46-59dab4668ae2
  spec:
    clusterIP: 172.21.216.118
    clusterIPs:
    - 172.21.216.118
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: webstatus
      deploymentconfig: webstatus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"aspnetrunbasics:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"aspnetrunbasics\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T15:48:30Z
    generation: 1
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"aspnetrunbasics"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T15:48:30Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-24T15:48:36Z
    name: aspnetrunbasics
    namespace: aspnetrunbasics
    resourceVersion: "372937173"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/aspnetrunbasics
    uid: 2a1055ab-7c6e-4051-8cf6-3162fe6f7afc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: aspnetrunbasics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: aspnetrunbasics
          deploymentconfig: aspnetrunbasics
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/aspnetrunbasics@sha256:9f346e71341faacf0f30e930a13d1535f013ada48812a84a522606f8ecf03bf4
          imagePullPolicy: Always
          name: aspnetrunbasics
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-24T15:48:36Z
      lastUpdateTime: 2021-06-24T15:48:36Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-24T15:48:30Z
      lastUpdateTime: 2021-06-24T15:48:36Z
      message: ReplicaSet "aspnetrunbasics-64dcc6bf8c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprunbasics-gw:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprunbasics-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T15:25:59Z
    generation: 1
    labels:
      app: asprunbasics-gw
      app.kubernetes.io/component: asprunbasics-gw
      app.kubernetes.io/instance: asprunbasics-gw
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"asprunbasics-gw"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T15:25:59Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:26:06Z
    name: asprunbasics-gw
    namespace: aspnetrunbasics
    resourceVersion: "377626944"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/asprunbasics-gw
    uid: a7a7fdb2-820d-4f12-a0ca-e96ec9e80983
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: asprunbasics-gw
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprunbasics-gw
          deploymentconfig: asprunbasics-gw
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/asprunbasics-gw@sha256:fc25c90c8a2091c2fccbb9a99ca1b2729e1b3b5d20668f975dd1101f2c938729
          imagePullPolicy: Always
          name: asprunbasics-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T15:26:06Z
      lastUpdateTime: 2021-06-29T15:26:06Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T15:25:59Z
      lastUpdateTime: 2021-06-29T15:26:06Z
      message: ReplicaSet "asprunbasics-gw-68875f8487" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"basket-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"basket-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:04:50Z
    generation: 1
    labels:
      app: basket-api
      app.kubernetes.io/component: basket-api
      app.kubernetes.io/instance: basket-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"basket-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:04:50Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:04:56Z
    name: basket-api
    namespace: aspnetrunbasics
    resourceVersion: "377647872"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/basket-api
    uid: 8e4bb18f-908b-4ed5-8e7c-e93ae97fe1ea
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: basket-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: basket-api
          deploymentconfig: basket-api
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/basket-api@sha256:ee05a9e7c7f1b2b0d8e1e5bc8f5ad4a99b1a9185ea38359fc13e4bbbfdb9425c
          imagePullPolicy: Always
          name: basket-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T16:04:56Z
      lastUpdateTime: 2021-06-29T16:04:56Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T16:04:50Z
      lastUpdateTime: 2021-06-29T16:04:56Z
      message: ReplicaSet "basket-api-6db86b8cd6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"catalog-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"catalog-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T13:46:41Z
    generation: 1
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"catalog-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:46:41Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:43:27Z
    name: catalog-api
    namespace: aspnetrunbasics
    resourceVersion: "377636380"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/catalog-api
    uid: 30cc3e0c-34a1-4edf-821d-fd57fdf8d1a8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: catalog-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: catalog-api
          deploymentconfig: catalog-api
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/catalog-api@sha256:80ad0f529cb4b7b606643188f18971586f6493e9a79ee709fd2a1ff3c9744290
          imagePullPolicy: Always
          name: catalog-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-24T13:46:41Z
      lastUpdateTime: 2021-06-24T13:46:49Z
      message: ReplicaSet "catalog-api-dc7644c94" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: 2021-06-29T15:43:27Z
      lastUpdateTime: 2021-06-29T15:43:27Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:03:30Z
    generation: 1
    labels:
      app: discount-api
      app.kubernetes.io/component: discount-api
      app.kubernetes.io/instance: discount-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"discount-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:03:30Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:03:42Z
    name: discount-api
    namespace: aspnetrunbasics
    resourceVersion: "377647095"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/discount-api
    uid: ba64934c-810a-40aa-8e36-f24b1ce999d7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: discount-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-api
          deploymentconfig: discount-api
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-api@sha256:253eb0bfdfba5e1809e7de4208a4b1ea8e341b9609eaf587f0047c6409e0915c
          imagePullPolicy: Always
          name: discount-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T16:03:42Z
      lastUpdateTime: 2021-06-29T16:03:42Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T16:03:30Z
      lastUpdateTime: 2021-06-29T16:03:42Z
      message: ReplicaSet "discount-api-b99dc4c76" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-grpc:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-grpc\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:03:01Z
    generation: 1
    labels:
      app: discount-grpc
      app.kubernetes.io/component: discount-grpc
      app.kubernetes.io/instance: discount-grpc
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"discount-grpc"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8081,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:03:01Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:03:07Z
    name: discount-grpc
    namespace: aspnetrunbasics
    resourceVersion: "377646800"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/discount-grpc
    uid: c8f742a2-9d25-40de-b7f5-4f05244af900
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: discount-grpc
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-grpc
          deploymentconfig: discount-grpc
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-grpc@sha256:13e1b22ccab9185f09936f6d21b8acfc525f8fa109ad48baeaffa4fcb5b392b5
          imagePullPolicy: Always
          name: discount-grpc
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T16:03:07Z
      lastUpdateTime: 2021-06-29T16:03:07Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T16:03:01Z
      lastUpdateTime: 2021-06-29T16:03:07Z
      message: ReplicaSet "discount-grpc-ccb79d467" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-06-29T15:58:39Z
    generation: 1
    labels:
      app.kubernetes.io/part-of: Infrastructure
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"mssql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ACCEPT_EULA"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":1443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mssql"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mssql-persistent-storage"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: oc.exe
      operation: Update
      time: 2021-06-29T15:58:39Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/part-of: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T15:59:06Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:59:48Z
    name: mssql
    namespace: aspnetrunbasics
    resourceVersion: "377644993"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/mssql
    uid: e4fccde9-083e-463b-a408-acde346a89f2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mssql
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mssql
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          envFrom:
          - secretRef:
              name: mssql
          image: mcr.microsoft.com/mssql/rhel/server:2019-latest
          imagePullPolicy: IfNotPresent
          name: mssql
          ports:
          - containerPort: 1443
            name: mssql
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mssql
            name: mssql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mssql-persistent-storage
          persistentVolumeClaim:
            claimName: mssql-pv-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T15:59:48Z
      lastUpdateTime: 2021-06-29T15:59:48Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T15:58:40Z
      lastUpdateTime: 2021-06-29T15:59:48Z
      message: ReplicaSet "mssql-6f49c9f4ff" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ordering-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"ordering-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:13:07Z
    generation: 1
    labels:
      app: ordering-api
      app.kubernetes.io/component: ordering-api
      app.kubernetes.io/instance: ordering-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:13:16Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:13:18Z
    name: ordering-api
    namespace: aspnetrunbasics
    resourceVersion: "377652590"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/ordering-api
    uid: 870ee14a-8900-4042-9285-c2364ebd835d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ordering-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ordering-api
          deploymentconfig: ordering-api
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/ordering-api@sha256:546282e8aa3345c61b98409318a65b2a8a8e6f363cd579e91e2267cf6b818dee
          imagePullPolicy: Always
          name: ordering-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T16:13:16Z
      lastUpdateTime: 2021-06-29T16:13:16Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T16:13:07Z
      lastUpdateTime: 2021-06-29T16:13:16Z
      message: ReplicaSet "ordering-api-8d64b57bf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-06-29T16:30:33Z
    generation: 1
    labels:
      olm.deployment-spec-hash: 69f45dbdd6
      olm.owner: redis-enterprise-operator.v6.0.12-5
      olm.owner.kind: ClusterServiceVersion
      olm.owner.namespace: aspnetrunbasics
      operators.coreos.com/redis-enterprise-operator-cert.aspnetrunbasics: ""
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:olm.deployment-spec-hash: {}
            f:olm.owner: {}
            f:olm.owner.kind: {}
            f:olm.owner.namespace: {}
            f:operators.coreos.com/redis-enterprise-operator-cert.aspnetrunbasics: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5e815a43-275a-423d-89b4-0cb8f24f988f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:alm-examples: {}
                f:capabilities: {}
                f:categories: {}
                f:containerImage: {}
                f:olm.operatorGroup: {}
                f:olm.operatorNamespace: {}
                f:olm.targetNamespaces: {}
                f:operatorframework.io/properties: {}
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              f:containers:
                k:{"name":"redis-enterprise-operator"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"OPERATOR_CONDITION_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"WATCH_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: olm
      operation: Update
      time: 2021-06-29T16:30:44Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:30:53Z
    name: redis-enterprise-operator
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: operators.coreos.com/v1alpha1
      blockOwnerDeletion: false
      controller: false
      kind: ClusterServiceVersion
      name: redis-enterprise-operator.v6.0.12-5
      uid: 5e815a43-275a-423d-89b4-0cb8f24f988f
    resourceVersion: "377664263"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/redis-enterprise-operator
    uid: 4e8498cc-c1cc-48cd-a935-35be7e2d698f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 1
    selector:
      matchLabels:
        name: redis-enterprise-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          alm-examples: |-
            [
              {
                "apiVersion": "app.redislabs.com/v1",
                "kind": "RedisEnterpriseCluster",
                "metadata": {
                  "name": "rec"
                },
                "spec": {
                  "nodes": 3,
                  "persistentSpec": {
                    "enabled": true
                  },
                  "uiServiceType": "ClusterIP",
                  "username": "demo@redislabs.com",
                  "redisEnterpriseNodeResources": {
                    "limits": {
                      "cpu": "4000m",
                      "memory": "4Gi"
                    },
                    "requests": {
                      "cpu": "4000m",
                      "memory": "4Gi"
                    }
                  },
                  "redisEnterpriseImageSpec": {
                    "imagePullPolicy": "IfNotPresent",
                    "repository": "redislabs/redis",
                    "versionTag": "6.0.12-57.rhel7-openshift"
                  }
                }

              }
            ]
          capabilities: Deep Insights
          categories: Database
          containerImage: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
          olm.operatorGroup: aspnetrunbasics-wm4m6
          olm.operatorNamespace: aspnetrunbasics
          olm.targetNamespaces: aspnetrunbasics
          operatorframework.io/properties: '{"properties":[{"type":"olm.gvk","value":{"group":"app.redislabs.com","kind":"RedisEnterpriseCluster","version":"v1"}},{"type":"olm.gvk","value":{"group":"app.redislabs.com","kind":"RedisEnterpriseCluster","version":"v1alpha1"}},{"type":"olm.package","value":{"packageName":"redis-enterprise-operator-cert","version":"6.0.12-5"}}]}'
        creationTimestamp: null
        labels:
          name: redis-enterprise-operator
      spec:
        containers:
        - command:
          - redis-enterprise-operator
          env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['olm.targetNamespaces']
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: redis-enterprise-operator
          - name: OPERATOR_CONDITION_NAME
            value: redis-enterprise-operator.v6.0.12-5
          image: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
          imagePullPolicy: Always
          name: redis-enterprise-operator
          resources:
            limits:
              cpu: "4"
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: redis-enterprise-operator
        serviceAccountName: redis-enterprise-operator
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T16:30:53Z
      lastUpdateTime: 2021-06-29T16:30:53Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T16:30:33Z
      lastUpdateTime: 2021-06-29T16:30:53Z
      message: ReplicaSet "redis-enterprise-operator-5b96fb645f" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-06-29T16:36:15Z
    generation: 260
    labels:
      app: redis-enterprise
      redis.io/cluster: redis-server
      redis.io/role: services-rigger
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:redis.io/cluster: {}
            f:redis.io/role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4f3a3065-087b-45bc-8e72-3032526f013d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:redis.io/cluster: {}
                f:redis.io/role: {}
            f:spec:
              f:containers:
                k:{"name":"services-rigger"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"BDB_SERVICE_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"K8S_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OWNER_REF"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SERVICE_NAMING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/redislabs/credentials"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"credentials"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: redis-enterprise-operator
      operation: Update
      time: 2021-06-29T16:36:15Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T17:11:01Z
    name: redis-server-services-rigger
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: app.redislabs.com/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: RedisEnterpriseCluster
      name: redis-server
      uid: 4f3a3065-087b-45bc-8e72-3032526f013d
    resourceVersion: "377688820"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/redis-server-services-rigger
    uid: 37b0dcc4-0058-4bae-9561-1367fa6333c7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        app: redis-enterprise
        redis.io/cluster: redis-server
        redis.io/role: services-rigger
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-enterprise
          redis.io/cluster: redis-server
          redis.io/role: services-rigger
      spec:
        containers:
        - env:
          - name: K8S_NAMESPACE
            value: aspnetrunbasics
          - name: REDIS_SERVICE_NAME
            value: redis-server
          - name: BDB_SERVICE_TYPE
            value: cluster_ip,headless
          - name: SERVICE_NAMING
            value: bdb_name
          - name: OWNER_REF
            value: '{"apiVersion":"app.redislabs.com/v1alpha1","kind":"RedisEnterpriseCluster","name":"redis-server","uid":"4f3a3065-087b-45bc-8e72-3032526f013d","controller":true,"blockOwnerDeletion":true}'
          image: redislabs/k8s-controller:6.0.12-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 15
          name: services-rigger
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/redislabs/credentials
            name: credentials
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: redis-server
        serviceAccountName: redis-server
        terminationGracePeriodSeconds: 30
        volumes:
        - name: credentials
          secret:
            defaultMode: 420
            secretName: redis-server
  status:
    conditions:
    - lastTransitionTime: 2021-06-29T16:36:15Z
      lastUpdateTime: 2021-06-29T16:36:15Z
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: 2021-06-29T16:54:16Z
      lastUpdateTime: 2021-06-29T16:54:16Z
      message: ReplicaSet "redis-server-services-rigger-7d6fb4c796" has timed out
        progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 260
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"shopping-aggregator:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"shopping-aggregator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:05:47Z
    generation: 1
    labels:
      app: shopping-aggregator
      app.kubernetes.io/component: shopping-aggregator
      app.kubernetes.io/instance: shopping-aggregator
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"shopping-aggregator"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:05:47Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:06:01Z
    name: shopping-aggregator
    namespace: aspnetrunbasics
    resourceVersion: "377648561"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/shopping-aggregator
    uid: ec552c3a-c377-4df3-a340-ae5c52ea9f48
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: shopping-aggregator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: shopping-aggregator
          deploymentconfig: shopping-aggregator
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/shopping-aggregator@sha256:c087648e5a7ce9e82e22b242c483ec9a8d9fde8f4fadfc0a2d2dc98a11f26d31
          imagePullPolicy: Always
          name: shopping-aggregator
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T16:06:01Z
      lastUpdateTime: 2021-06-29T16:06:01Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T16:05:47Z
      lastUpdateTime: 2021-06-29T16:06:01Z
      message: ReplicaSet "shopping-aggregator-5c5c64f94c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"webstatus:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"webstatus\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T13:13:41Z
    generation: 3
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-namespace: aspnetrunbasics
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"webstatus"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:13:41Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:00:41Z
    name: webstatus
    namespace: aspnetrunbasics
    resourceVersion: "377645483"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/deployments/webstatus
    uid: 337f2fcb-0e47-42c3-a4ab-8d63097510f4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: webstatus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: webstatus
          deploymentconfig: webstatus
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/webstatus@sha256:eb1eb945f9aff3bf29acc5b049439c46f00cd7b6ef7039f4793a489347aceff5
          imagePullPolicy: Always
          name: webstatus
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-24T13:13:41Z
      lastUpdateTime: 2021-06-24T13:13:55Z
      message: ReplicaSet "webstatus-8594885988" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: 2021-06-29T16:00:41Z
      lastUpdateTime: 2021-06-29T16:00:41Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"aspnetrunbasics:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"aspnetrunbasics\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T15:48:30Z
    generation: 1
    labels:
      app: aspnetrunbasics
      deploymentconfig: aspnetrunbasics
      pod-template-hash: 64dcc6bf8c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2a1055ab-7c6e-4051-8cf6-3162fe6f7afc"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"aspnetrunbasics"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-24T15:48:36Z
    name: aspnetrunbasics-64dcc6bf8c
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: aspnetrunbasics
      uid: 2a1055ab-7c6e-4051-8cf6-3162fe6f7afc
    resourceVersion: "372937171"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/aspnetrunbasics-64dcc6bf8c
    uid: 18a867d4-ff13-4334-9a6a-24bc0503f08e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: aspnetrunbasics
        pod-template-hash: 64dcc6bf8c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: aspnetrunbasics
          deploymentconfig: aspnetrunbasics
          pod-template-hash: 64dcc6bf8c
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/aspnetrunbasics@sha256:9f346e71341faacf0f30e930a13d1535f013ada48812a84a522606f8ecf03bf4
          imagePullPolicy: Always
          name: aspnetrunbasics
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"asprunbasics-gw:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"asprunbasics-gw\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T15:25:59Z
    generation: 1
    labels:
      app: asprunbasics-gw
      deploymentconfig: asprunbasics-gw
      pod-template-hash: 68875f8487
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a7a7fdb2-820d-4f12-a0ca-e96ec9e80983"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"asprunbasics-gw"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:26:06Z
    name: asprunbasics-gw-68875f8487
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: asprunbasics-gw
      uid: a7a7fdb2-820d-4f12-a0ca-e96ec9e80983
    resourceVersion: "377626942"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/asprunbasics-gw-68875f8487
    uid: ac58a0fd-a1dd-4bfc-8e85-58157a4431f9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: asprunbasics-gw
        pod-template-hash: 68875f8487
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: asprunbasics-gw
          deploymentconfig: asprunbasics-gw
          pod-template-hash: 68875f8487
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/asprunbasics-gw@sha256:fc25c90c8a2091c2fccbb9a99ca1b2729e1b3b5d20668f975dd1101f2c938729
          imagePullPolicy: Always
          name: asprunbasics-gw
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"basket-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"basket-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:04:50Z
    generation: 1
    labels:
      app: basket-api
      deploymentconfig: basket-api
      pod-template-hash: 6db86b8cd6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8e4bb18f-908b-4ed5-8e7c-e93ae97fe1ea"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"basket-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:04:56Z
    name: basket-api-6db86b8cd6
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: basket-api
      uid: 8e4bb18f-908b-4ed5-8e7c-e93ae97fe1ea
    resourceVersion: "377647871"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/basket-api-6db86b8cd6
    uid: 0398b760-7f6b-4e50-bd36-b19b47866cfe
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: basket-api
        pod-template-hash: 6db86b8cd6
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: basket-api
          deploymentconfig: basket-api
          pod-template-hash: 6db86b8cd6
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/basket-api@sha256:ee05a9e7c7f1b2b0d8e1e5bc8f5ad4a99b1a9185ea38359fc13e4bbbfdb9425c
          imagePullPolicy: Always
          name: basket-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"catalog-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"catalog-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T13:46:41Z
    generation: 1
    labels:
      app: catalog-api
      deploymentconfig: catalog-api
      pod-template-hash: dc7644c94
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"30cc3e0c-34a1-4edf-821d-fd57fdf8d1a8"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"catalog-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:43:27Z
    name: catalog-api-dc7644c94
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: catalog-api
      uid: 30cc3e0c-34a1-4edf-821d-fd57fdf8d1a8
    resourceVersion: "377636376"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/catalog-api-dc7644c94
    uid: f2d6d888-ae26-4e34-9716-0c9da37984ad
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: catalog-api
        pod-template-hash: dc7644c94
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: catalog-api
          deploymentconfig: catalog-api
          pod-template-hash: dc7644c94
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/catalog-api@sha256:80ad0f529cb4b7b606643188f18971586f6493e9a79ee709fd2a1ff3c9744290
          imagePullPolicy: Always
          name: catalog-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:03:30Z
    generation: 1
    labels:
      app: discount-api
      deploymentconfig: discount-api
      pod-template-hash: b99dc4c76
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ba64934c-810a-40aa-8e36-f24b1ce999d7"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"discount-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:03:42Z
    name: discount-api-b99dc4c76
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: discount-api
      uid: ba64934c-810a-40aa-8e36-f24b1ce999d7
    resourceVersion: "377647094"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/discount-api-b99dc4c76
    uid: f60fdebc-2688-4283-9e17-341b1df09b97
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: discount-api
        pod-template-hash: b99dc4c76
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-api
          deploymentconfig: discount-api
          pod-template-hash: b99dc4c76
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-api@sha256:253eb0bfdfba5e1809e7de4208a4b1ea8e341b9609eaf587f0047c6409e0915c
          imagePullPolicy: Always
          name: discount-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"discount-grpc:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"discount-grpc\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:03:01Z
    generation: 1
    labels:
      app: discount-grpc
      deploymentconfig: discount-grpc
      pod-template-hash: ccb79d467
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c8f742a2-9d25-40de-b7f5-4f05244af900"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"discount-grpc"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8081,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:03:07Z
    name: discount-grpc-ccb79d467
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: discount-grpc
      uid: c8f742a2-9d25-40de-b7f5-4f05244af900
    resourceVersion: "377646797"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/discount-grpc-ccb79d467
    uid: 068b0350-eca7-49e2-974f-f982c72c2d57
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: discount-grpc
        pod-template-hash: ccb79d467
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: discount-grpc
          deploymentconfig: discount-grpc
          pod-template-hash: ccb79d467
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-grpc@sha256:13e1b22ccab9185f09936f6d21b8acfc525f8fa109ad48baeaffa4fcb5b392b5
          imagePullPolicy: Always
          name: discount-grpc
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-06-29T15:58:39Z
    generation: 1
    labels:
      app: mssql
      pod-template-hash: 6f49c9f4ff
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4fccde9-083e-463b-a408-acde346a89f2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"mssql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ACCEPT_EULA"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":1443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mssql"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mssql-persistent-storage"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T15:59:48Z
    name: mssql-6f49c9f4ff
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mssql
      uid: e4fccde9-083e-463b-a408-acde346a89f2
    resourceVersion: "377644991"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/mssql-6f49c9f4ff
    uid: 95ad8550-343c-4caa-b8c7-5c634f342bd5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mssql
        pod-template-hash: 6f49c9f4ff
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mssql
          pod-template-hash: 6f49c9f4ff
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          envFrom:
          - secretRef:
              name: mssql
          image: mcr.microsoft.com/mssql/rhel/server:2019-latest
          imagePullPolicy: IfNotPresent
          name: mssql
          ports:
          - containerPort: 1443
            name: mssql
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mssql
            name: mssql-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mssql-persistent-storage
          persistentVolumeClaim:
            claimName: mssql-pv-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ordering-api:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"ordering-api\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:13:07Z
    generation: 1
    labels:
      app: ordering-api
      deploymentconfig: ordering-api
      pod-template-hash: 8d64b57bf
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"870ee14a-8900-4042-9285-c2364ebd835d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"ordering-api"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:13:16Z
    name: ordering-api-8d64b57bf
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ordering-api
      uid: 870ee14a-8900-4042-9285-c2364ebd835d
    resourceVersion: "377652574"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/ordering-api-8d64b57bf
    uid: eb4369d4-328b-4d50-832b-5573d3473d89
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ordering-api
        pod-template-hash: 8d64b57bf
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ordering-api
          deploymentconfig: ordering-api
          pod-template-hash: 8d64b57bf
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/ordering-api@sha256:546282e8aa3345c61b98409318a65b2a8a8e6f363cd579e91e2267cf6b818dee
          imagePullPolicy: Always
          name: ordering-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-06-29T16:30:33Z
    generation: 1
    labels:
      name: redis-enterprise-operator
      pod-template-hash: 5b96fb645f
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4e8498cc-c1cc-48cd-a935-35be7e2d698f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:alm-examples: {}
                f:capabilities: {}
                f:categories: {}
                f:containerImage: {}
                f:olm.operatorGroup: {}
                f:olm.operatorNamespace: {}
                f:olm.targetNamespaces: {}
                f:operatorframework.io/properties: {}
              f:labels:
                .: {}
                f:name: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"redis-enterprise-operator"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"OPERATOR_CONDITION_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"WATCH_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:30:53Z
    name: redis-enterprise-operator-5b96fb645f
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-enterprise-operator
      uid: 4e8498cc-c1cc-48cd-a935-35be7e2d698f
    resourceVersion: "377664262"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/redis-enterprise-operator-5b96fb645f
    uid: f01c32ae-7e97-4a92-860b-56e962f0eb1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: redis-enterprise-operator
        pod-template-hash: 5b96fb645f
    template:
      metadata:
        annotations:
          alm-examples: |-
            [
              {
                "apiVersion": "app.redislabs.com/v1",
                "kind": "RedisEnterpriseCluster",
                "metadata": {
                  "name": "rec"
                },
                "spec": {
                  "nodes": 3,
                  "persistentSpec": {
                    "enabled": true
                  },
                  "uiServiceType": "ClusterIP",
                  "username": "demo@redislabs.com",
                  "redisEnterpriseNodeResources": {
                    "limits": {
                      "cpu": "4000m",
                      "memory": "4Gi"
                    },
                    "requests": {
                      "cpu": "4000m",
                      "memory": "4Gi"
                    }
                  },
                  "redisEnterpriseImageSpec": {
                    "imagePullPolicy": "IfNotPresent",
                    "repository": "redislabs/redis",
                    "versionTag": "6.0.12-57.rhel7-openshift"
                  }
                }

              }
            ]
          capabilities: Deep Insights
          categories: Database
          containerImage: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
          olm.operatorGroup: aspnetrunbasics-wm4m6
          olm.operatorNamespace: aspnetrunbasics
          olm.targetNamespaces: aspnetrunbasics
          operatorframework.io/properties: '{"properties":[{"type":"olm.gvk","value":{"group":"app.redislabs.com","kind":"RedisEnterpriseCluster","version":"v1"}},{"type":"olm.gvk","value":{"group":"app.redislabs.com","kind":"RedisEnterpriseCluster","version":"v1alpha1"}},{"type":"olm.package","value":{"packageName":"redis-enterprise-operator-cert","version":"6.0.12-5"}}]}'
        creationTimestamp: null
        labels:
          name: redis-enterprise-operator
          pod-template-hash: 5b96fb645f
      spec:
        containers:
        - command:
          - redis-enterprise-operator
          env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['olm.targetNamespaces']
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: redis-enterprise-operator
          - name: OPERATOR_CONDITION_NAME
            value: redis-enterprise-operator.v6.0.12-5
          image: registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f
          imagePullPolicy: Always
          name: redis-enterprise-operator
          resources:
            limits:
              cpu: "4"
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: redis-enterprise-operator
        serviceAccountName: redis-enterprise-operator
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: 2021-06-29T16:36:15Z
    generation: 1
    labels:
      app: redis-enterprise
      pod-template-hash: 7d6fb4c796
      redis.io/cluster: redis-server
      redis.io/role: services-rigger
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:redis.io/cluster: {}
            f:redis.io/role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"37b0dcc4-0058-4bae-9561-1367fa6333c7"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
                f:redis.io/cluster: {}
                f:redis.io/role: {}
            f:spec:
              f:containers:
                k:{"name":"services-rigger"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"BDB_SERVICE_TYPE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"K8S_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OWNER_REF"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SERVICE_NAMING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/redislabs/credentials"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"credentials"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
        f:status:
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:44:16Z
    name: redis-server-services-rigger-7d6fb4c796
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-server-services-rigger
      uid: 37b0dcc4-0058-4bae-9561-1367fa6333c7
    resourceVersion: "377670749"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/redis-server-services-rigger-7d6fb4c796
    uid: 1c365e90-6113-44d4-a166-d640b2ad8ee5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: redis-enterprise
        pod-template-hash: 7d6fb4c796
        redis.io/cluster: redis-server
        redis.io/role: services-rigger
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-enterprise
          pod-template-hash: 7d6fb4c796
          redis.io/cluster: redis-server
          redis.io/role: services-rigger
      spec:
        containers:
        - env:
          - name: K8S_NAMESPACE
            value: aspnetrunbasics
          - name: REDIS_SERVICE_NAME
            value: redis-server
          - name: BDB_SERVICE_TYPE
            value: cluster_ip,headless
          - name: SERVICE_NAMING
            value: bdb_name
          - name: OWNER_REF
            value: '{"apiVersion":"app.redislabs.com/v1alpha1","kind":"RedisEnterpriseCluster","name":"redis-server","uid":"4f3a3065-087b-45bc-8e72-3032526f013d","controller":true,"blockOwnerDeletion":true}'
          image: redislabs/k8s-controller:6.0.12-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 15
          name: services-rigger
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/redislabs/credentials
            name: credentials
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: redis-server
        serviceAccountName: redis-server
        terminationGracePeriodSeconds: 30
        volumes:
        - name: credentials
          secret:
            defaultMode: 420
            secretName: redis-server
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"shopping-aggregator:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"shopping-aggregator\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-29T16:05:47Z
    generation: 1
    labels:
      app: shopping-aggregator
      deploymentconfig: shopping-aggregator
      pod-template-hash: 5c5c64f94c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ec552c3a-c377-4df3-a340-ae5c52ea9f48"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"shopping-aggregator"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:06:01Z
    name: shopping-aggregator-5c5c64f94c
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shopping-aggregator
      uid: ec552c3a-c377-4df3-a340-ae5c52ea9f48
    resourceVersion: "377648560"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/shopping-aggregator-5c5c64f94c
    uid: fdcd3389-067a-46d1-b5c8-1f2158a1ab90
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: shopping-aggregator
        pod-template-hash: 5c5c64f94c
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: shopping-aggregator
          deploymentconfig: shopping-aggregator
          pod-template-hash: 5c5c64f94c
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/shopping-aggregator@sha256:c087648e5a7ce9e82e22b242c483ec9a8d9fde8f4fadfc0a2d2dc98a11f26d31
          imagePullPolicy: Always
          name: shopping-aggregator
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"webstatus:latest","namespace":"aspnetrunbasics"},"fieldPath":"spec.template.spec.containers[?(@.name==\"webstatus\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: 2021-06-24T13:13:41Z
    generation: 3
    labels:
      app: webstatus
      deploymentconfig: webstatus
      pod-template-hash: "8594885988"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:deploymentconfig: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"337f2fcb-0e47-42c3-a4ab-8d63097510f4"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"webstatus"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:00:41Z
    name: webstatus-8594885988
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: webstatus
      uid: 337f2fcb-0e47-42c3-a4ab-8d63097510f4
    resourceVersion: "377645482"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/replicasets/webstatus-8594885988
    uid: 9f865e57-3c94-4ff0-8ca6-55473c5108b8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: webstatus
        pod-template-hash: "8594885988"
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: webstatus
          deploymentconfig: webstatus
          pod-template-hash: "8594885988"
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/webstatus@sha256:eb1eb945f9aff3bf29acc5b049439c46f00cd7b6ef7039f4793a489347aceff5
          imagePullPolicy: Always
          name: webstatus
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: 2021-06-29T16:54:13Z
    generation: 1
    labels:
      app: rabbitmq-cluster
      app.kubernetes.io/part-of: Infrastructure
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"rabbitmq"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"K8S_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"RABBITMQ_CONFIG_FILE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RABBITMQ_DEFAULT_PASS"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"RABBITMQ_DEFAULT_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"RABBITMQ_ERLANG_COOKIE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"RABBITMQ_NODENAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RABBITMQ_USE_LONGNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":15672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":25672,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/rabbitmq"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/rabbitmq"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
          f:volumeClaimTemplates: {}
      manager: oc.exe
      operation: Update
      time: 2021-06-29T16:54:13Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:collisionCount: {}
          f:currentReplicas: {}
          f:currentRevision: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:updateRevision: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: 2021-06-29T16:54:14Z
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/part-of: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:54:47Z
    name: rabbitmq-cluster
    namespace: aspnetrunbasics
    resourceVersion: "377680475"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/statefulsets/rabbitmq-cluster
    uid: d27eaaf1-60d3-4640-add4-f216a5069381
  spec:
    podManagementPolicy: OrderedReady
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: rabbitmq-cluster
    serviceName: rabbitmq-cluster
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rabbitmq-cluster
      spec:
        containers:
        - args:
          - -c
          - cp -v /etc/rabbitmq/rabbitmq.conf ${RABBITMQ_CONFIG_FILE}.conf; exec docker-entrypoint.sh
            rabbitmq-server
          command:
          - sh
          env:
          - name: RABBITMQ_DEFAULT_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: rabbitmq-cluster-secret
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: rabbitmq-cluster-secret
          - name: RABBITMQ_ERLANG_COOKIE
            valueFrom:
              secretKeyRef:
                key: cookie
                name: rabbitmq-cluster-secret
          - name: K8S_SERVICE_NAME
            value: rabbitmq-cluster
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_NODENAME
            value: rabbit@$(POD_NAME).rabbitmq-cluster.$(POD_NAMESPACE).svc.cluster.local
          - name: RABBITMQ_CONFIG_FILE
            value: /var/lib/rabbitmq/rabbitmq
          image: rabbitmq:3.8-management
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - rabbitmqctl
              - status
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: rabbitmq
          ports:
          - containerPort: 15672
            name: http
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 25672
            name: clustering
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - rabbitmqctl
              - status
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/rabbitmq
            name: config-volume
          - mountPath: /var/lib/rabbitmq
            name: rabbitmq-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: rabbitmq-discovery
        serviceAccountName: rabbitmq-discovery
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
            - key: enabled_plugins
              path: enabled_plugins
            name: rabbitmq-cluster-config
          name: config-volume
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: rabbitmq-storage
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: rabbitmq-cluster-69bd99975
    observedGeneration: 1
    replicas: 1
    updateRevision: rabbitmq-cluster-69bd99975
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: 2021-06-29T16:36:16Z
    generation: 2
    labels:
      app: redis-enterprise
      redis.io/cluster: redis-server
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:redis.io/cluster: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4f3a3065-087b-45bc-8e72-3032526f013d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:redis.io/cluster: {}
                f:redis.io/role: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"bootstrapper"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"PERSISTENCE_PATH"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"REC_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/opt/redislabs/mount/bulletin-board"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/redislabs/credentials"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/redislabs/shared"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"redis-enterprise-node"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8001,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":9443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/persistent"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/redislabs/credentials"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/redislabs/mount"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/opt/redislabs/shared"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/opt/redislabs/log"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"bulletin-board-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"credentials"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"health-check-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"shared-volume"}:
                  .: {}
                  f:emptyDir:
                    .: {}
                    f:sizeLimit: {}
                  f:name: {}
          f:updateStrategy:
            f:type: {}
          f:volumeClaimTemplates: {}
      manager: redis-enterprise-operator
      operation: Update
      time: 2021-06-29T16:36:16Z
    name: redis-server
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: app.redislabs.com/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: RedisEnterpriseCluster
      name: redis-server
      uid: 4f3a3065-087b-45bc-8e72-3032526f013d
    resourceVersion: "377667934"
    selfLink: /apis/apps/v1/namespaces/aspnetrunbasics/statefulsets/redis-server
    uid: bfcf3460-0676-4cbd-b41d-84e75e43c393
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis-enterprise
        redis.io/cluster: redis-server
        redis.io/role: node
    serviceName: redis-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-enterprise
          redis.io/cluster: redis-server
          redis.io/role: node
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: redis-enterprise
                  redis.io/cluster: redis-server
                  redis.io/role: node
              topologyKey: kubernetes.io/hostname
        containers:
        - image: redislabs/redis:6.0.12-57.rhel7-openshift
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - bash
                - -c
                - /opt/redislabs/bin/python2.7 /opt/redislabs/mount/prestop.py
          name: redis-enterprise-node
          ports:
          - containerPort: 8001
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 9443
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - /opt/redislabs/bin/python2.7 /opt/redislabs/mount/health_check.py
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            limits:
              cpu: "4"
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 2Gi
          securityContext:
            capabilities:
              add:
              - SYS_RESOURCE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/redislabs/mount
            name: health-check-volume
            readOnly: true
          - mountPath: /opt/redislabs/shared
            name: shared-volume
            readOnly: true
          - mountPath: /opt/redislabs/credentials
            name: credentials
          - mountPath: /opt/persistent
            name: redis-enterprise-storage
          - mountPath: /var/opt/redislabs/log
            name: redis-enterprise-storage
            subPath: logs
        - command:
          - /usr/local/bin/bootstrapper
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: REC_NAME
            value: redis-server
          - name: PERSISTENCE_PATH
            value: /opt/persistent
          image: redislabs/operator:6.0.12-5
          imagePullPolicy: IfNotPresent
          name: bootstrapper
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - SYS_RESOURCE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/opt/redislabs/mount/bulletin-board
            name: bulletin-board-volume
          - mountPath: /opt/redislabs/shared
            name: shared-volume
          - mountPath: /opt/redislabs/credentials
            name: credentials
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccount: redis-server
        serviceAccountName: redis-server
        terminationGracePeriodSeconds: 31536000
        volumes:
        - configMap:
            defaultMode: 420
            name: redis-server-bulletin-board
          name: bulletin-board-volume
        - configMap:
            defaultMode: 420
            name: redis-server-health-check
          name: health-check-volume
        - emptyDir:
            sizeLimit: "0"
          name: shared-volume
        - name: credentials
          secret:
            defaultMode: 420
            secretName: redis-server
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        labels:
          app: redis-enterprise
          redis.io/cluster: redis-server
        name: redis-enterprise-storage
        namespace: aspnetrunbasics
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    replicas: 0
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: 2021-06-29T15:39:43Z
    generation: 2
    labels:
      app.kubernetes.io/part-of: Infrastructure
      template: mongodb-persistent-template
      template.openshift.io/template-instance-owner: 98bd26b8-d439-484e-921e-abab1fb4a69e
    managedFields:
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.alpha.openshift.io/wait-for-ready: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:name: {}
          f:strategy:
            f:activeDeadlineSeconds: {}
            f:recreateParams:
              .: {}
              f:timeoutSeconds: {}
            f:type: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"mongodb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"MONGODB_ADMIN_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"MONGODB_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":27017,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/mongodb/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"mongodb-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
          f:triggers: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:details:
            .: {}
            f:causes: {}
            f:message: {}
          f:latestVersion: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:42:05Z
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/part-of: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T15:59:21Z
    name: mongodb
    namespace: aspnetrunbasics
    resourceVersion: "377644740"
    uid: 9d1ee097-55a4-4db6-baae-d6c8b3c72e50
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: mongodb
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mongodb
          image: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.6
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/mongodb@sha256:254c9046eaf61c451b40bac3f897c40bc59f187e5313b9799fbcacf17398a191
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T15:42:04Z
      lastUpdateTime: 2021-06-29T15:42:04Z
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T15:42:05Z
      lastUpdateTime: 2021-06-29T15:42:05Z
      message: replication controller "mongodb-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: 2021-06-29T15:33:00Z
    generation: 2
    labels:
      app.kubernetes.io/part-of: Infrastructure
      template: postgresql-persistent-template
      template.openshift.io/template-instance-owner: a89a1161-9603-44c4-b6bd-05999b16fda2
    managedFields:
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:template.alpha.openshift.io/wait-for-ready: {}
          f:labels:
            .: {}
            f:template: {}
            f:template.openshift.io/template-instance-owner: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:name: {}
          f:strategy:
            f:activeDeadlineSeconds: {}
            f:recreateParams:
              .: {}
              f:timeoutSeconds: {}
            f:type: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:name: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"postgresql"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"POSTGRESQL_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"POSTGRESQL_USER"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/pgsql/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"postgresql-data"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
          f:triggers: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:details:
            .: {}
            f:causes: {}
            f:message: {}
          f:latestVersion: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: openshift-controller-manager
      operation: Update
      time: 2021-06-29T15:35:02Z
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/part-of: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T15:59:14Z
    name: postgresql
    namespace: aspnetrunbasics
    resourceVersion: "377644690"
    uid: 5236e1a7-9b38-498a-9a13-cd5cc811869e
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:10-el8
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:bf9a7665e46c73d0ba224fc69515869ca1b81d988d8b618656c24352fdd7997f
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2021-06-29T15:35:02Z
      lastUpdateTime: 2021-06-29T15:35:02Z
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: 2021-06-29T15:33:05Z
      lastUpdateTime: 2021-06-29T15:35:03Z
      message: replication controller "postgresql-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-24T15:48:29Z
    creationTimestamp: 2021-06-24T15:48:29Z
    generation: 2
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T15:48:29Z
    name: aspnetrunbasics
    namespace: aspnetrunbasics
    resourceVersion: "372937082"
    uid: b6dbf7a1-0b5e-45fc-abe8-78aaa5dc8554
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/aspnetrunbasics:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/aspnetrunbasics:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/aspnetrunbasics
    tags:
    - items:
      - created: 2021-06-24T15:48:29Z
        dockerImageReference: yeskay.jfrog.io/skalavala/aspnetrunbasics@sha256:9f346e71341faacf0f30e930a13d1535f013ada48812a84a522606f8ecf03bf4
        generation: 2
        image: sha256:9f346e71341faacf0f30e930a13d1535f013ada48812a84a522606f8ecf03bf4
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-29T15:25:59Z
    creationTimestamp: 2021-06-29T15:25:58Z
    generation: 2
    labels:
      app: asprunbasics-gw
      app.kubernetes.io/component: asprunbasics-gw
      app.kubernetes.io/instance: asprunbasics-gw
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T15:25:58Z
    name: asprunbasics-gw
    namespace: aspnetrunbasics
    resourceVersion: "377626840"
    uid: 55b7afb9-d478-4e4a-bb2c-f07d4da8d6f7
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/ocelotapigw:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/ocelotapigw:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/asprunbasics-gw
    tags:
    - items:
      - created: 2021-06-29T15:25:59Z
        dockerImageReference: yeskay.jfrog.io/skalavala/ocelotapigw@sha256:fc25c90c8a2091c2fccbb9a99ca1b2729e1b3b5d20668f975dd1101f2c938729
        generation: 2
        image: sha256:fc25c90c8a2091c2fccbb9a99ca1b2729e1b3b5d20668f975dd1101f2c938729
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-29T16:04:46Z
    creationTimestamp: 2021-06-29T16:04:45Z
    generation: 2
    labels:
      app: basket-api
      app.kubernetes.io/component: basket-api
      app.kubernetes.io/instance: basket-api
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:04:45Z
    name: basket-api
    namespace: aspnetrunbasics
    resourceVersion: "377647647"
    uid: d4e6c5b1-eca2-4120-af34-e4ebb2b11117
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/basketapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/basketapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/basket-api
    tags:
    - items:
      - created: 2021-06-29T16:04:46Z
        dockerImageReference: yeskay.jfrog.io/skalavala/basketapi@sha256:ee05a9e7c7f1b2b0d8e1e5bc8f5ad4a99b1a9185ea38359fc13e4bbbfdb9425c
        generation: 2
        image: sha256:ee05a9e7c7f1b2b0d8e1e5bc8f5ad4a99b1a9185ea38359fc13e4bbbfdb9425c
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-24T13:46:41Z
    creationTimestamp: 2021-06-24T13:46:40Z
    generation: 2
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:46:40Z
    name: catalog-api
    namespace: aspnetrunbasics
    resourceVersion: "372873322"
    uid: 48f07880-8da4-4707-8962-37dc7c99aabe
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/catalogapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/catalogapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/catalog-api
    tags:
    - items:
      - created: 2021-06-24T13:46:41Z
        dockerImageReference: yeskay.jfrog.io/skalavala/catalogapi@sha256:80ad0f529cb4b7b606643188f18971586f6493e9a79ee709fd2a1ff3c9744290
        generation: 2
        image: sha256:80ad0f529cb4b7b606643188f18971586f6493e9a79ee709fd2a1ff3c9744290
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-29T16:03:29Z
    creationTimestamp: 2021-06-29T16:03:28Z
    generation: 2
    labels:
      app: discount-api
      app.kubernetes.io/component: discount-api
      app.kubernetes.io/instance: discount-api
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:03:28Z
    name: discount-api
    namespace: aspnetrunbasics
    resourceVersion: "377646960"
    uid: 18b7e935-2a87-473d-a8be-0b623f1d912a
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/discountapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/discountapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-api
    tags:
    - items:
      - created: 2021-06-29T16:03:29Z
        dockerImageReference: yeskay.jfrog.io/skalavala/discountapi@sha256:253eb0bfdfba5e1809e7de4208a4b1ea8e341b9609eaf587f0047c6409e0915c
        generation: 2
        image: sha256:253eb0bfdfba5e1809e7de4208a4b1ea8e341b9609eaf587f0047c6409e0915c
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-29T16:03:00Z
    creationTimestamp: 2021-06-29T16:02:59Z
    generation: 2
    labels:
      app: discount-grpc
      app.kubernetes.io/component: discount-grpc
      app.kubernetes.io/instance: discount-grpc
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:02:59Z
    name: discount-grpc
    namespace: aspnetrunbasics
    resourceVersion: "377646708"
    uid: 860b986d-93d6-47db-bb26-4caa792d36db
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/discountgrpc:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/discountgrpc:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/discount-grpc
    tags:
    - items:
      - created: 2021-06-29T16:03:00Z
        dockerImageReference: yeskay.jfrog.io/skalavala/discountgrpc@sha256:13e1b22ccab9185f09936f6d21b8acfc525f8fa109ad48baeaffa4fcb5b392b5
        generation: 2
        image: sha256:13e1b22ccab9185f09936f6d21b8acfc525f8fa109ad48baeaffa4fcb5b392b5
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-29T16:13:07Z
    creationTimestamp: 2021-06-29T16:13:06Z
    generation: 2
    labels:
      app: ordering-api
      app.kubernetes.io/component: ordering-api
      app.kubernetes.io/instance: ordering-api
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:13:06Z
    name: ordering-api
    namespace: aspnetrunbasics
    resourceVersion: "377652473"
    uid: b16465aa-76a4-4a64-a576-18a2ac991d92
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/orderingapi:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/orderingapi:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/ordering-api
    tags:
    - items:
      - created: 2021-06-29T16:13:07Z
        dockerImageReference: yeskay.jfrog.io/skalavala/orderingapi@sha256:546282e8aa3345c61b98409318a65b2a8a8e6f363cd579e91e2267cf6b818dee
        generation: 2
        image: sha256:546282e8aa3345c61b98409318a65b2a8a8e6f363cd579e91e2267cf6b818dee
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-29T16:05:42Z
    creationTimestamp: 2021-06-29T16:05:42Z
    generation: 2
    labels:
      app: shopping-aggregator
      app.kubernetes.io/component: shopping-aggregator
      app.kubernetes.io/instance: shopping-aggregator
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T16:05:42Z
    name: shopping-aggregator
    namespace: aspnetrunbasics
    resourceVersion: "377648384"
    uid: f84238ce-f872-4564-9cee-79bc4785636a
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/shoppingaggregator:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/shoppingaggregator:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/shopping-aggregator
    tags:
    - items:
      - created: 2021-06-29T16:05:42Z
        dockerImageReference: yeskay.jfrog.io/skalavala/shoppingaggregator@sha256:c087648e5a7ce9e82e22b242c483ec9a8d9fde8f4fadfc0a2d2dc98a11f26d31
        generation: 2
        image: sha256:c087648e5a7ce9e82e22b242c483ec9a8d9fde8f4fadfc0a2d2dc98a11f26d31
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2021-06-24T13:13:41Z
    creationTimestamp: 2021-06-24T13:13:40Z
    generation: 2
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: asprunbasics
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:tags:
            .: {}
            k:{"name":"latest"}:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
                f:openshift.io/imported-from: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
              f:generation: {}
              f:importPolicy:
                .: {}
                f:insecure: {}
              f:name: {}
              f:referencePolicy:
                .: {}
                f:type: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:13:40Z
    name: webstatus
    namespace: aspnetrunbasics
    resourceVersion: "372855144"
    uid: 773355bf-1072-434d-ab5d-28f607913edd
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: yeskay.jfrog.io/skalavala/webstatus:latest
      from:
        kind: DockerImage
        name: yeskay.jfrog.io/skalavala/webstatus:latest
      generation: 2
      importPolicy:
        insecure: true
      name: latest
      referencePolicy:
        type: Local
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/aspnetrunbasics/webstatus
    tags:
    - items:
      - created: 2021-06-24T13:13:41Z
        dockerImageReference: yeskay.jfrog.io/skalavala/webstatus@sha256:eb1eb945f9aff3bf29acc5b049439c46f00cd7b6ef7039f4793a489347aceff5
        generation: 2
        image: sha256:eb1eb945f9aff3bf29acc5b049439c46f00cd7b6ef7039f4793a489347aceff5
      tag: latest
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: 2021-06-29T15:14:18Z
    labels:
      app: aspnetrunbasics
      app.kubernetes.io/component: aspnetrunbasics
      app.kubernetes.io/instance: aspnetrunbasics
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-29T15:14:18Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-06-29T15:14:18Z
    name: asprunbasics
    namespace: aspnetrunbasics
    resourceVersion: "377620847"
    uid: 903e24c8-900a-485d-8f92-eb81116223b7
  spec:
    host: asprunbasics.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: aspnetrunbasics
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-06-29T15:14:18Z
        status: "True"
        type: Admitted
      host: asprunbasics.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerCanonicalHostname: openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: 2021-06-24T13:47:22Z
    labels:
      app: catalog-api
      app.kubernetes.io/component: catalog-api
      app.kubernetes.io/instance: catalog-api
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:47:22Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-06-24T13:47:22Z
    name: catalog-api
    namespace: aspnetrunbasics
    resourceVersion: "372873692"
    uid: 7f6c5d87-1598-4ace-b952-f8443a6d0142
  spec:
    host: catalog-api.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: catalog-api
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-06-24T13:47:22Z
        status: "True"
        type: Admitted
      host: catalog-api.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerCanonicalHostname: openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2021-06-24T13:42:25Z
    labels:
      app: jaeger
      app.kubernetes.io/component: query-route
      app.kubernetes.io/instance: catalogdb
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: catalogdb
      app.kubernetes.io/part-of: jaeger
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6bb66fa0-5c59-4ae2-9b85-39731e927c12"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:tls:
            .: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: jaeger-operator
      operation: Update
      time: 2021-06-24T13:42:25Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-06-24T13:42:25Z
    name: catalogdb
    namespace: aspnetrunbasics
    ownerReferences:
    - apiVersion: jaegertracing.io/v1
      controller: true
      kind: Jaeger
      name: catalogdb
      uid: 6bb66fa0-5c59-4ae2-9b85-39731e927c12
    resourceVersion: "372871123"
    uid: bad0e568-1228-492e-acb1-c9d2f8c0af76
  spec:
    host: catalogdb-aspnetrunbasics.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
    tls:
      termination: reencrypt
    to:
      kind: Service
      name: catalogdb-query
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-06-24T13:42:25Z
        status: "True"
        type: Admitted
      host: catalogdb-aspnetrunbasics.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerCanonicalHostname: openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: 2021-06-24T13:48:13Z
    labels:
      cluster-name: elasticsearch
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:cluster-name: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:48:13Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-06-24T13:48:14Z
    name: elasticsearch
    namespace: aspnetrunbasics
    resourceVersion: "372874159"
    uid: e39081f7-d21b-4e25-bd01-7c2e12f6a1d7
  spec:
    host: elasticsearch.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
    port:
      targetPort: elasticsearch
    to:
      kind: Service
      name: elasticsearch
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-06-24T13:48:14Z
        status: "True"
        type: Admitted
      host: elasticsearch.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerCanonicalHostname: openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: 2021-06-24T13:17:11Z
    labels:
      app: webstatus
      app.kubernetes.io/component: webstatus
      app.kubernetes.io/instance: webstatus
      app.kubernetes.io/part-of: asprunbasics
      app.openshift.io/runtime-version: latest
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime-version: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: Mozilla
      operation: Update
      time: 2021-06-24T13:17:11Z
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: 2021-06-24T13:17:11Z
    name: webstatus
    namespace: aspnetrunbasics
    resourceVersion: "372856797"
    uid: 82463149-b3cf-4865-9738-b1f1c71a453a
  spec:
    host: webstatus.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: webstatus
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2021-06-24T13:17:11Z
        status: "True"
        type: Admitted
      host: webstatus.openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerCanonicalHostname: openshift-4312-4f0f212b5bb3f1b263650e398426a4ff-0000.us-south.containers.appdomain.cloud
      routerName: default
      wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
